{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0","program":"/home/knoldus/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","quick_xml","/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","-C","metadata=2aee07d90243cf68","-C","extra-filename=-2aee07d90243cf68","--out-dir","/home/knoldus/CheckGitIgnore/assignment5/target/rls/debug/deps","-L","dependency=/home/knoldus/CheckGitIgnore/assignment5/target/rls/debug/deps","--extern","memchr=/home/knoldus/CheckGitIgnore/assignment5/target/rls/debug/deps/libmemchr-36a19b55c71a3ba4.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/knoldus/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/knoldus/CheckGitIgnore/assignment5/target/rls/debug/deps/libquick_xml-2aee07d90243cf68.rmeta"},"prelude":{"crate_id":{"name":"quick_xml","disambiguator":[7571703002250778120,11546874642152650308]},"crate_root":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src","external_crates":[{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[12933703438800314702,5774803219644544316]}},{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[18134888982608726624,15478788479473023395]}},{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[6673302632599048863,4691371433878452070]}},{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[11457885127507258025,479752930606968628]}},{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[6007655421670680970,17748288058820543149]}},{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[4051320655186846034,14773827427477085591]}},{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[3672675044024306215,7179779047398453100]}},{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[14739525726177289408,3061276640434149652]}},{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[2246841610299105657,12905561680815043912]}},{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[4036557704906104068,994131407893854156]}},{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[7443407023664770875,11250036483448109314]}},{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[10148669557414888454,6400214184476534778]}},{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[4006540472161665961,15205760237192158299]}},{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[16043199729901662453,7825522302763349882]}},{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/lib.rs","num":15,"id":{"name":"miniz_oxide","disambiguator":[5738570549504868290,14845130516100231771]}},{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/lib.rs","num":16,"id":{"name":"adler","disambiguator":[6807687926185025542,9498922200428406688]}},{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[6171827839412267364,4338689175470013405]}},{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/lib.rs","num":18,"id":{"name":"memchr","disambiguator":[1157675088820504487,7216068552727726090]}}],"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/lib.rs","byte_start":0,"byte_end":4883,"line_start":1,"line_end":144,"column_start":1,"column_end":24}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":28},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/lib.rs","byte_start":4609,"byte_end":4615,"line_start":130,"line_end":130,"column_start":23,"column_end":29},"alias_span":null,"name":"escape","value":"","parent":{"krate":0,"index":36}},{"kind":"Use","ref_id":{"krate":0,"index":31},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/lib.rs","byte_start":4617,"byte_end":4625,"line_start":130,"line_end":130,"column_start":31,"column_end":39},"alias_span":null,"name":"unescape","value":"","parent":{"krate":0,"index":36}},{"kind":"Use","ref_id":{"krate":0,"index":363},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/lib.rs","byte_start":4820,"byte_end":4825,"line_start":142,"line_end":142,"column_start":18,"column_end":23},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":9},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/lib.rs","byte_start":4827,"byte_end":4833,"line_start":142,"line_end":142,"column_start":25,"column_end":31},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":526},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/lib.rs","byte_start":4852,"byte_end":4858,"line_start":143,"line_end":143,"column_start":17,"column_end":23},"alias_span":null,"name":"Reader","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":576},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/lib.rs","byte_start":4876,"byte_end":4882,"line_start":144,"line_end":144,"column_start":17,"column_end":23},"alias_span":null,"name":"Writer","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/lib.rs","byte_start":0,"byte_end":4883,"line_start":1,"line_end":144,"column_start":1,"column_end":24},"name":"","qualname":"::","value":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":15},{"krate":0,"index":36},{"krate":0,"index":41},{"krate":0,"index":215},{"krate":0,"index":334},{"krate":0,"index":336},{"krate":0,"index":358},{"krate":0,"index":359},{"krate":0,"index":360},{"krate":0,"index":361},{"krate":0,"index":362}],"decl_id":null,"docs":" High performance XML reader/writer.","sig":null,"attributes":[{"value":"/ High performance XML reader/writer.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/lib.rs","byte_start":0,"byte_end":39,"line_start":1,"line_end":1,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/lib.rs","byte_start":40,"byte_end":43,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ ## Description","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/lib.rs","byte_start":44,"byte_end":62,"line_start":3,"line_end":3,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/lib.rs","byte_start":63,"byte_end":66,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ - `Reader`: a low level xml pull-reader where buffer allocation/clearing is left to user","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/lib.rs","byte_start":67,"byte_end":159,"line_start":5,"line_end":5,"column_start":1,"column_end":93}},{"value":"/ - `Writer`: a xml writer. Can be nested with readers if you want to transform xmls","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/lib.rs","byte_start":160,"byte_end":246,"line_start":6,"line_end":6,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/lib.rs","byte_start":247,"byte_end":250,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/lib.rs","byte_start":251,"byte_end":266,"line_start":8,"line_end":8,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/lib.rs","byte_start":267,"byte_end":270,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ ### Reader","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/lib.rs","byte_start":271,"byte_end":285,"line_start":10,"line_end":10,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/lib.rs","byte_start":286,"byte_end":289,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/lib.rs","byte_start":290,"byte_end":301,"line_start":12,"line_end":12,"column_start":1,"column_end":12}},{"value":"/ use quick_xml::Reader;","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/lib.rs","byte_start":302,"byte_end":328,"line_start":13,"line_end":13,"column_start":1,"column_end":27}},{"value":"/ use quick_xml::events::Event;","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/lib.rs","byte_start":329,"byte_end":362,"line_start":14,"line_end":14,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/lib.rs","byte_start":363,"byte_end":366,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ let xml = r#\"<tag1 att1 = \"test\">","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/lib.rs","byte_start":367,"byte_end":404,"line_start":16,"line_end":16,"column_start":1,"column_end":38}},{"value":"/                 <tag2><!--Test comment-->Test</tag2>","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/lib.rs","byte_start":405,"byte_end":461,"line_start":17,"line_end":17,"column_start":1,"column_end":57}},{"value":"/                 <tag2>","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/lib.rs","byte_start":462,"byte_end":488,"line_start":18,"line_end":18,"column_start":1,"column_end":27}},{"value":"/                     Test 2","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/lib.rs","byte_start":489,"byte_end":519,"line_start":19,"line_end":19,"column_start":1,"column_end":31}},{"value":"/                 </tag2>","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/lib.rs","byte_start":520,"byte_end":547,"line_start":20,"line_end":20,"column_start":1,"column_end":28}},{"value":"/             </tag1>\"#;","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/lib.rs","byte_start":548,"byte_end":574,"line_start":21,"line_end":21,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/lib.rs","byte_start":575,"byte_end":578,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ let mut reader = Reader::from_str(xml);","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/lib.rs","byte_start":579,"byte_end":622,"line_start":23,"line_end":23,"column_start":1,"column_end":44}},{"value":"/ reader.trim_text(true);","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/lib.rs","byte_start":623,"byte_end":650,"line_start":24,"line_end":24,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/lib.rs","byte_start":651,"byte_end":654,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ let mut count = 0;","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/lib.rs","byte_start":655,"byte_end":677,"line_start":26,"line_end":26,"column_start":1,"column_end":23}},{"value":"/ let mut txt = Vec::new();","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/lib.rs","byte_start":678,"byte_end":707,"line_start":27,"line_end":27,"column_start":1,"column_end":30}},{"value":"/ let mut buf = Vec::new();","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/lib.rs","byte_start":708,"byte_end":737,"line_start":28,"line_end":28,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/lib.rs","byte_start":738,"byte_end":741,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ // The `Reader` does not implement `Iterator` because it outputs borrowed data (`Cow`s)","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/lib.rs","byte_start":742,"byte_end":833,"line_start":30,"line_end":30,"column_start":1,"column_end":92}},{"value":"/ loop {","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/lib.rs","byte_start":834,"byte_end":844,"line_start":31,"line_end":31,"column_start":1,"column_end":11}},{"value":"/     match reader.read_event(&mut buf) {","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/lib.rs","byte_start":845,"byte_end":888,"line_start":32,"line_end":32,"column_start":1,"column_end":44}},{"value":"/     // for triggering namespaced events, use this instead:","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/lib.rs","byte_start":889,"byte_end":951,"line_start":33,"line_end":33,"column_start":1,"column_end":63}},{"value":"/     // match reader.read_namespaced_event(&mut buf) {","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/lib.rs","byte_start":952,"byte_end":1009,"line_start":34,"line_end":34,"column_start":1,"column_end":58}},{"value":"/         Ok(Event::Start(ref e)) => {","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/lib.rs","byte_start":1010,"byte_end":1050,"line_start":35,"line_end":35,"column_start":1,"column_end":41}},{"value":"/         // for namespaced:","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/lib.rs","byte_start":1051,"byte_end":1081,"line_start":36,"line_end":36,"column_start":1,"column_end":31}},{"value":"/         // Ok((ref namespace_value, Event::Start(ref e)))","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/lib.rs","byte_start":1082,"byte_end":1143,"line_start":37,"line_end":37,"column_start":1,"column_end":62}},{"value":"/             match e.name() {","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/lib.rs","byte_start":1144,"byte_end":1176,"line_start":38,"line_end":38,"column_start":1,"column_end":33}},{"value":"/                 b\"tag1\" => println!(\"attributes values: {:?}\",","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/lib.rs","byte_start":1177,"byte_end":1243,"line_start":39,"line_end":39,"column_start":1,"column_end":67}},{"value":"/                                     e.attributes().map(|a| a.unwrap().value)","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/lib.rs","byte_start":1244,"byte_end":1324,"line_start":40,"line_end":40,"column_start":1,"column_end":81}},{"value":"/                                     .collect::<Vec<_>>()),","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/lib.rs","byte_start":1325,"byte_end":1387,"line_start":41,"line_end":41,"column_start":1,"column_end":63}},{"value":"/                 b\"tag2\" => count += 1,","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/lib.rs","byte_start":1388,"byte_end":1430,"line_start":42,"line_end":42,"column_start":1,"column_end":43}},{"value":"/                 _ => (),","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/lib.rs","byte_start":1431,"byte_end":1459,"line_start":43,"line_end":43,"column_start":1,"column_end":29}},{"value":"/             }","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/lib.rs","byte_start":1460,"byte_end":1477,"line_start":44,"line_end":44,"column_start":1,"column_end":18}},{"value":"/         },","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/lib.rs","byte_start":1478,"byte_end":1492,"line_start":45,"line_end":45,"column_start":1,"column_end":15}},{"value":"/         // unescape and decode the text event using the reader encoding","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/lib.rs","byte_start":1493,"byte_end":1568,"line_start":46,"line_end":46,"column_start":1,"column_end":76}},{"value":"/         Ok(Event::Text(e)) => txt.push(e.unescape_and_decode(&reader).unwrap()),","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/lib.rs","byte_start":1569,"byte_end":1653,"line_start":47,"line_end":47,"column_start":1,"column_end":85}},{"value":"/         Ok(Event::Eof) => break, // exits the loop when reaching end of file","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/lib.rs","byte_start":1654,"byte_end":1734,"line_start":48,"line_end":48,"column_start":1,"column_end":81}},{"value":"/         Err(e) => panic!(\"Error at position {}: {:?}\", reader.buffer_position(), e),","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/lib.rs","byte_start":1735,"byte_end":1823,"line_start":49,"line_end":49,"column_start":1,"column_end":89}},{"value":"/         _ => (), // There are several other `Event`s we do not consider here","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/lib.rs","byte_start":1824,"byte_end":1904,"line_start":50,"line_end":50,"column_start":1,"column_end":81}},{"value":"/     }","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/lib.rs","byte_start":1905,"byte_end":1914,"line_start":51,"line_end":51,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/lib.rs","byte_start":1915,"byte_end":1918,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/     // if we don't keep a borrow elsewhere, we can clear the buffer to keep memory usage low","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/lib.rs","byte_start":1919,"byte_end":2015,"line_start":53,"line_end":53,"column_start":1,"column_end":97}},{"value":"/     buf.clear();","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/lib.rs","byte_start":2016,"byte_end":2036,"line_start":54,"line_end":54,"column_start":1,"column_end":21}},{"value":"/ }","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/lib.rs","byte_start":2037,"byte_end":2042,"line_start":55,"line_end":55,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/lib.rs","byte_start":2043,"byte_end":2050,"line_start":56,"line_end":56,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/lib.rs","byte_start":2051,"byte_end":2054,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ ### Writer","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/lib.rs","byte_start":2055,"byte_end":2069,"line_start":58,"line_end":58,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/lib.rs","byte_start":2070,"byte_end":2073,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/lib.rs","byte_start":2074,"byte_end":2085,"line_start":60,"line_end":60,"column_start":1,"column_end":12}},{"value":"/ use quick_xml::Writer;","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/lib.rs","byte_start":2086,"byte_end":2112,"line_start":61,"line_end":61,"column_start":1,"column_end":27}},{"value":"/ use quick_xml::events::{Event, BytesEnd, BytesStart};","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/lib.rs","byte_start":2113,"byte_end":2170,"line_start":62,"line_end":62,"column_start":1,"column_end":58}},{"value":"/ use quick_xml::Reader;","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/lib.rs","byte_start":2171,"byte_end":2197,"line_start":63,"line_end":63,"column_start":1,"column_end":27}},{"value":"/ use std::io::Cursor;","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/lib.rs","byte_start":2198,"byte_end":2222,"line_start":64,"line_end":64,"column_start":1,"column_end":25}},{"value":"/ use std::iter;","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/lib.rs","byte_start":2223,"byte_end":2241,"line_start":65,"line_end":65,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/lib.rs","byte_start":2242,"byte_end":2245,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ let xml = r#\"<this_tag k1=\"v1\" k2=\"v2\"><child>text</child></this_tag>\"#;","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/lib.rs","byte_start":2246,"byte_end":2322,"line_start":67,"line_end":67,"column_start":1,"column_end":77}},{"value":"/ let mut reader = Reader::from_str(xml);","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/lib.rs","byte_start":2323,"byte_end":2366,"line_start":68,"line_end":68,"column_start":1,"column_end":44}},{"value":"/ reader.trim_text(true);","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/lib.rs","byte_start":2367,"byte_end":2394,"line_start":69,"line_end":69,"column_start":1,"column_end":28}},{"value":"/ let mut writer = Writer::new(Cursor::new(Vec::new()));","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/lib.rs","byte_start":2395,"byte_end":2453,"line_start":70,"line_end":70,"column_start":1,"column_end":59}},{"value":"/ let mut buf = Vec::new();","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/lib.rs","byte_start":2454,"byte_end":2483,"line_start":71,"line_end":71,"column_start":1,"column_end":30}},{"value":"/ loop {","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/lib.rs","byte_start":2484,"byte_end":2494,"line_start":72,"line_end":72,"column_start":1,"column_end":11}},{"value":"/     match reader.read_event(&mut buf) {","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/lib.rs","byte_start":2495,"byte_end":2538,"line_start":73,"line_end":73,"column_start":1,"column_end":44}},{"value":"/         Ok(Event::Start(ref e)) if e.name() == b\"this_tag\" => {","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/lib.rs","byte_start":2539,"byte_end":2606,"line_start":74,"line_end":74,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/lib.rs","byte_start":2607,"byte_end":2610,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/             // crates a new element ... alternatively we could reuse `e` by calling","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/lib.rs","byte_start":2611,"byte_end":2698,"line_start":76,"line_end":76,"column_start":1,"column_end":88}},{"value":"/             // `e.into_owned()`","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/lib.rs","byte_start":2699,"byte_end":2734,"line_start":77,"line_end":77,"column_start":1,"column_end":36}},{"value":"/             let mut elem = BytesStart::owned(b\"my_elem\".to_vec(), \"my_elem\".len());","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/lib.rs","byte_start":2735,"byte_end":2822,"line_start":78,"line_end":78,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/lib.rs","byte_start":2823,"byte_end":2826,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/             // collect existing attributes","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/lib.rs","byte_start":2827,"byte_end":2873,"line_start":80,"line_end":80,"column_start":1,"column_end":47}},{"value":"/             elem.extend_attributes(e.attributes().map(|attr| attr.unwrap()));","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/lib.rs","byte_start":2874,"byte_end":2955,"line_start":81,"line_end":81,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/lib.rs","byte_start":2956,"byte_end":2959,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/             // copy existing attributes, adds a new my-key=\"some value\" attribute","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/lib.rs","byte_start":2960,"byte_end":3045,"line_start":83,"line_end":83,"column_start":1,"column_end":86}},{"value":"/             elem.push_attribute((\"my-key\", \"some value\"));","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/lib.rs","byte_start":3046,"byte_end":3108,"line_start":84,"line_end":84,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/lib.rs","byte_start":3109,"byte_end":3112,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/             // writes the event to the writer","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/lib.rs","byte_start":3113,"byte_end":3162,"line_start":86,"line_end":86,"column_start":1,"column_end":50}},{"value":"/             assert!(writer.write_event(Event::Start(elem)).is_ok());","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/lib.rs","byte_start":3163,"byte_end":3235,"line_start":87,"line_end":87,"column_start":1,"column_end":73}},{"value":"/         },","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/lib.rs","byte_start":3236,"byte_end":3250,"line_start":88,"line_end":88,"column_start":1,"column_end":15}},{"value":"/         Ok(Event::End(ref e)) if e.name() == b\"this_tag\" => {","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/lib.rs","byte_start":3251,"byte_end":3316,"line_start":89,"line_end":89,"column_start":1,"column_end":66}},{"value":"/             assert!(writer.write_event(Event::End(BytesEnd::borrowed(b\"my_elem\"))).is_ok());","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/lib.rs","byte_start":3317,"byte_end":3413,"line_start":90,"line_end":90,"column_start":1,"column_end":97}},{"value":"/         },","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/lib.rs","byte_start":3414,"byte_end":3428,"line_start":91,"line_end":91,"column_start":1,"column_end":15}},{"value":"/         Ok(Event::Eof) => break,","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/lib.rs","byte_start":3429,"byte_end":3465,"line_start":92,"line_end":92,"column_start":1,"column_end":37}},{"value":"/         Ok(e) => assert!(writer.write_event(e).is_ok()),","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/lib.rs","byte_start":3466,"byte_end":3526,"line_start":93,"line_end":93,"column_start":1,"column_end":61}},{"value":"/         // or using the buffer","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/lib.rs","byte_start":3527,"byte_end":3561,"line_start":94,"line_end":94,"column_start":1,"column_end":35}},{"value":"/         // Ok(e) => assert!(writer.write(&buf).is_ok()),","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/lib.rs","byte_start":3562,"byte_end":3622,"line_start":95,"line_end":95,"column_start":1,"column_end":61}},{"value":"/         Err(e) => panic!(\"Error at position {}: {:?}\", reader.buffer_position(), e),","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/lib.rs","byte_start":3623,"byte_end":3711,"line_start":96,"line_end":96,"column_start":1,"column_end":89}},{"value":"/     }","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/lib.rs","byte_start":3712,"byte_end":3721,"line_start":97,"line_end":97,"column_start":1,"column_end":10}},{"value":"/     buf.clear();","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/lib.rs","byte_start":3722,"byte_end":3742,"line_start":98,"line_end":98,"column_start":1,"column_end":21}},{"value":"/ }","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/lib.rs","byte_start":3743,"byte_end":3748,"line_start":99,"line_end":99,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/lib.rs","byte_start":3749,"byte_end":3752,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ let result = writer.into_inner().into_inner();","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/lib.rs","byte_start":3753,"byte_end":3803,"line_start":101,"line_end":101,"column_start":1,"column_end":51}},{"value":"/ let expected = r#\"<my_elem k1=\"v1\" k2=\"v2\" my-key=\"some value\"><child>text</child></my_elem>\"#;","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/lib.rs","byte_start":3804,"byte_end":3903,"line_start":102,"line_end":102,"column_start":1,"column_end":100}},{"value":"/ assert_eq!(result, expected.as_bytes());","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/lib.rs","byte_start":3904,"byte_end":3948,"line_start":103,"line_end":103,"column_start":1,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/lib.rs","byte_start":3949,"byte_end":3956,"line_start":104,"line_end":104,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/lib.rs","byte_start":3957,"byte_end":3960,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ # Features","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/lib.rs","byte_start":3961,"byte_end":3975,"line_start":106,"line_end":106,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/lib.rs","byte_start":3976,"byte_end":3979,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ quick-xml supports 2 additional features, non activated by default:","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/lib.rs","byte_start":3980,"byte_end":4051,"line_start":108,"line_end":108,"column_start":1,"column_end":72}},{"value":"/ - `encoding`: support non utf8 xmls","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/lib.rs","byte_start":4052,"byte_end":4091,"line_start":109,"line_end":109,"column_start":1,"column_end":40}},{"value":"/ - `serialize`: support serde `Serialize`/`Deserialize`","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/lib.rs","byte_start":4092,"byte_end":4150,"line_start":110,"line_end":110,"column_start":1,"column_end":59}},{"value":"forbid(unsafe_code)","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/lib.rs","byte_start":4151,"byte_end":4174,"line_start":111,"line_end":111,"column_start":1,"column_end":24}},{"value":"deny(missing_docs)","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/lib.rs","byte_start":4175,"byte_end":4197,"line_start":112,"line_end":112,"column_start":1,"column_end":23}},{"value":"recursion_limit = \"1024\"","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/lib.rs","byte_start":4198,"byte_end":4226,"line_start":113,"line_end":113,"column_start":1,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":364},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/errors.rs","byte_start":5008,"byte_end":5010,"line_start":7,"line_end":7,"column_start":5,"column_end":7},"name":"Io","qualname":"::errors::Error::Io","value":"Error::Io(::std::io::Error)","parent":{"krate":0,"index":363},"children":[],"decl_id":null,"docs":" IO error\n","sig":null,"attributes":[{"value":"/ IO error","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/errors.rs","byte_start":4991,"byte_end":5003,"line_start":6,"line_end":6,"column_start":5,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":367},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/errors.rs","byte_start":5053,"byte_end":5057,"line_start":9,"line_end":9,"column_start":5,"column_end":9},"name":"Utf8","qualname":"::errors::Error::Utf8","value":"Error::Utf8(::std::str::Utf8Error)","parent":{"krate":0,"index":363},"children":[],"decl_id":null,"docs":" Utf8 error\n","sig":null,"attributes":[{"value":"/ Utf8 error","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/errors.rs","byte_start":5034,"byte_end":5048,"line_start":8,"line_end":8,"column_start":5,"column_end":19}}]},{"kind":"TupleVariant","id":{"krate":0,"index":370},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/errors.rs","byte_start":5117,"byte_end":5130,"line_start":11,"line_end":11,"column_start":5,"column_end":18},"name":"UnexpectedEof","qualname":"::errors::Error::UnexpectedEof","value":"Error::UnexpectedEof(String)","parent":{"krate":0,"index":363},"children":[],"decl_id":null,"docs":" Unexpected End of File\n","sig":null,"attributes":[{"value":"/ Unexpected End of File","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/errors.rs","byte_start":5086,"byte_end":5112,"line_start":10,"line_end":10,"column_start":5,"column_end":31}}]},{"kind":"StructVariant","id":{"krate":0,"index":373},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/errors.rs","byte_start":5171,"byte_end":5187,"line_start":13,"line_end":13,"column_start":5,"column_end":21},"name":"EndEventMismatch","qualname":"::errors::Error::EndEventMismatch","value":"Error::EndEventMismatch { expected, found }","parent":{"krate":0,"index":363},"children":[],"decl_id":null,"docs":" End event mismatch\n","sig":null,"attributes":[{"value":"/ End event mismatch","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/errors.rs","byte_start":5144,"byte_end":5166,"line_start":12,"line_end":12,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":376},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/errors.rs","byte_start":5334,"byte_end":5349,"line_start":20,"line_end":20,"column_start":5,"column_end":20},"name":"UnexpectedToken","qualname":"::errors::Error::UnexpectedToken","value":"Error::UnexpectedToken(String)","parent":{"krate":0,"index":363},"children":[],"decl_id":null,"docs":" Unexpected token\n","sig":null,"attributes":[{"value":"/ Unexpected token","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/errors.rs","byte_start":5309,"byte_end":5329,"line_start":19,"line_end":19,"column_start":5,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":379},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/errors.rs","byte_start":5386,"byte_end":5400,"line_start":22,"line_end":22,"column_start":5,"column_end":19},"name":"UnexpectedBang","qualname":"::errors::Error::UnexpectedBang","value":"Error::UnexpectedBang","parent":{"krate":0,"index":363},"children":[],"decl_id":null,"docs":" Unexpected <!>\n","sig":null,"attributes":[{"value":"/ Unexpected <!>","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/errors.rs","byte_start":5363,"byte_end":5381,"line_start":21,"line_end":21,"column_start":5,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":381},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/errors.rs","byte_start":5453,"byte_end":5465,"line_start":24,"line_end":24,"column_start":5,"column_end":17},"name":"TextNotFound","qualname":"::errors::Error::TextNotFound","value":"Error::TextNotFound","parent":{"krate":0,"index":363},"children":[],"decl_id":null,"docs":" Text not found, expected `Event::Text`\n","sig":null,"attributes":[{"value":"/ Text not found, expected `Event::Text`","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/errors.rs","byte_start":5406,"byte_end":5448,"line_start":23,"line_end":23,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":383},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/errors.rs","byte_start":5532,"byte_end":5553,"line_start":26,"line_end":26,"column_start":5,"column_end":26},"name":"XmlDeclWithoutVersion","qualname":"::errors::Error::XmlDeclWithoutVersion","value":"Error::XmlDeclWithoutVersion(Option<String>)","parent":{"krate":0,"index":363},"children":[],"decl_id":null,"docs":" `Event::XmlDecl` must start with *version* attribute\n","sig":null,"attributes":[{"value":"/ `Event::XmlDecl` must start with *version* attribute","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/errors.rs","byte_start":5471,"byte_end":5527,"line_start":25,"line_end":25,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":386},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/errors.rs","byte_start":5613,"byte_end":5626,"line_start":28,"line_end":28,"column_start":5,"column_end":18},"name":"NameWithQuote","qualname":"::errors::Error::NameWithQuote","value":"Error::NameWithQuote(usize)","parent":{"krate":0,"index":363},"children":[],"decl_id":null,"docs":" Attribute Name contains quote\n","sig":null,"attributes":[{"value":"/ Attribute Name contains quote","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/errors.rs","byte_start":5575,"byte_end":5608,"line_start":27,"line_end":27,"column_start":5,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":389},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/errors.rs","byte_start":5686,"byte_end":5699,"line_start":30,"line_end":30,"column_start":5,"column_end":18},"name":"NoEqAfterName","qualname":"::errors::Error::NoEqAfterName","value":"Error::NoEqAfterName(usize)","parent":{"krate":0,"index":363},"children":[],"decl_id":null,"docs":" Attribute key not followed by with `=`\n","sig":null,"attributes":[{"value":"/ Attribute key not followed by with `=`","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/errors.rs","byte_start":5639,"byte_end":5681,"line_start":29,"line_end":29,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":392},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/errors.rs","byte_start":5747,"byte_end":5760,"line_start":32,"line_end":32,"column_start":5,"column_end":18},"name":"UnquotedValue","qualname":"::errors::Error::UnquotedValue","value":"Error::UnquotedValue(usize)","parent":{"krate":0,"index":363},"children":[],"decl_id":null,"docs":" Attribute value not quoted\n","sig":null,"attributes":[{"value":"/ Attribute value not quoted","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/errors.rs","byte_start":5712,"byte_end":5742,"line_start":31,"line_end":31,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":395},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/errors.rs","byte_start":5801,"byte_end":5820,"line_start":34,"line_end":34,"column_start":5,"column_end":24},"name":"DuplicatedAttribute","qualname":"::errors::Error::DuplicatedAttribute","value":"Error::DuplicatedAttribute(usize, usize)","parent":{"krate":0,"index":363},"children":[],"decl_id":null,"docs":" Duplicate attribute\n","sig":null,"attributes":[{"value":"/ Duplicate attribute","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/errors.rs","byte_start":5773,"byte_end":5796,"line_start":33,"line_end":33,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":399},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/errors.rs","byte_start":5861,"byte_end":5872,"line_start":36,"line_end":36,"column_start":5,"column_end":16},"name":"EscapeError","qualname":"::errors::Error::EscapeError","value":"Error::EscapeError(::escape::EscapeError)","parent":{"krate":0,"index":363},"children":[],"decl_id":null,"docs":" Escape error\n","sig":null,"attributes":[{"value":"/ Escape error","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/errors.rs","byte_start":5840,"byte_end":5856,"line_start":35,"line_end":35,"column_start":5,"column_end":21}}]},{"kind":"Enum","id":{"krate":0,"index":363},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/errors.rs","byte_start":4979,"byte_end":4984,"line_start":5,"line_end":5,"column_start":10,"column_end":15},"name":"Error","qualname":"::errors::Error","value":"pub enum Error {\n\n    /// IO error\n    Io(::std::io::Error),\n\n    /// Utf8 error\n    Utf8(::std::str::Utf8Error),\n\n    /// Unexpected End of File\n    UnexpectedEof(String),\n\n    /// End event mismatch\n    EndEventMismatch {\n        /// Expected end event\n        expected: String,\n        /// Found end event\n        found: String,\n    },\n\n    /// Unexpected token\n    UnexpectedToken(String),\n\n    /// Unexpected <!>\n    UnexpectedBang,\n\n    /// Text not found, expected `Event::Text`\n    TextNotFound,\n\n    /// `Event::XmlDecl` must start with *version* attribute\n    XmlDeclWithoutVersion(Option<String>),\n\n    /// Attribute Name contains quote\n    NameWithQuote(usize),\n\n    /// Attribute key not followed by with `=`\n    NoEqAfterName(usize),\n\n    /// Attribute value not quoted\n    UnquotedValue(usize),\n\n    /// Duplicate attribute\n    DuplicatedAttribute(usize, usize),\n\n    /// Escape error\n    EscapeError(::escape::EscapeError),\n}","parent":null,"children":[{"krate":0,"index":364},{"krate":0,"index":367},{"krate":0,"index":370},{"krate":0,"index":373},{"krate":0,"index":376},{"krate":0,"index":379},{"krate":0,"index":381},{"krate":0,"index":383},{"krate":0,"index":386},{"krate":0,"index":389},{"krate":0,"index":392},{"krate":0,"index":395},{"krate":0,"index":399}],"decl_id":null,"docs":" The error type used by this crate.\n","sig":null,"attributes":[{"value":"/ The error type used by this crate.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/errors.rs","byte_start":4914,"byte_end":4952,"line_start":3,"line_end":3,"column_start":1,"column_end":39}}]},{"kind":"Type","id":{"krate":0,"index":9},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/errors.rs","byte_start":6416,"byte_end":6422,"line_start":58,"line_end":58,"column_start":10,"column_end":16},"name":"Result","qualname":"::errors::Result","value":"::std::result::Result<T, Error>","parent":null,"children":[],"decl_id":null,"docs":" A specialized `Result` type where the error is hard-wired to [`Error`].","sig":null,"attributes":[{"value":"/ A specialized `Result` type where the error is hard-wired to [`Error`].","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/errors.rs","byte_start":6296,"byte_end":6371,"line_start":55,"line_end":55,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/errors.rs","byte_start":6372,"byte_end":6375,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ [`Error`]: enum.Error.html","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/errors.rs","byte_start":6376,"byte_end":6406,"line_start":57,"line_end":57,"column_start":1,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":405},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/escapei.rs","byte_start":12272,"byte_end":12286,"line_start":9,"line_end":9,"column_start":5,"column_end":19},"name":"EntityWithNull","qualname":"::escapei::EscapeError::EntityWithNull","value":"EscapeError::EntityWithNull(::std::ops::Range<usize>)","parent":{"krate":0,"index":404},"children":[],"decl_id":null,"docs":" Entity with Null character\n","sig":null,"attributes":[{"value":"/ Entity with Null character","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/escapei.rs","byte_start":12237,"byte_end":12267,"line_start":8,"line_end":8,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":408},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/escapei.rs","byte_start":12353,"byte_end":12371,"line_start":11,"line_end":11,"column_start":5,"column_end":23},"name":"UnrecognizedSymbol","qualname":"::escapei::EscapeError::UnrecognizedSymbol","value":"EscapeError::UnrecognizedSymbol(::std::ops::Range<usize>, ::std::result::Result<String, ::std::string::FromUtf8Error>)","parent":{"krate":0,"index":404},"children":[],"decl_id":null,"docs":" Unrecognized escape symbol\n","sig":null,"attributes":[{"value":"/ Unrecognized escape symbol","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/escapei.rs","byte_start":12318,"byte_end":12348,"line_start":10,"line_end":10,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":412},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/escapei.rs","byte_start":12521,"byte_end":12539,"line_start":16,"line_end":16,"column_start":5,"column_end":23},"name":"UnterminatedEntity","qualname":"::escapei::EscapeError::UnterminatedEntity","value":"EscapeError::UnterminatedEntity(::std::ops::Range<usize>)","parent":{"krate":0,"index":404},"children":[],"decl_id":null,"docs":" Cannot find `;` after `&`\n","sig":null,"attributes":[{"value":"/ Cannot find `;` after `&`","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/escapei.rs","byte_start":12487,"byte_end":12516,"line_start":15,"line_end":15,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":415},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/escapei.rs","byte_start":12607,"byte_end":12625,"line_start":18,"line_end":18,"column_start":5,"column_end":23},"name":"TooLongHexadecimal","qualname":"::escapei::EscapeError::TooLongHexadecimal","value":"EscapeError::TooLongHexadecimal","parent":{"krate":0,"index":404},"children":[],"decl_id":null,"docs":" Cannot convert Hexa to utf8\n","sig":null,"attributes":[{"value":"/ Cannot convert Hexa to utf8","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/escapei.rs","byte_start":12571,"byte_end":12602,"line_start":17,"line_end":17,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":417},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/escapei.rs","byte_start":12682,"byte_end":12700,"line_start":20,"line_end":20,"column_start":5,"column_end":23},"name":"InvalidHexadecimal","qualname":"::escapei::EscapeError::InvalidHexadecimal","value":"EscapeError::InvalidHexadecimal(char)","parent":{"krate":0,"index":404},"children":[],"decl_id":null,"docs":" Character is not a valid hexadecimal value\n","sig":null,"attributes":[{"value":"/ Character is not a valid hexadecimal value","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/escapei.rs","byte_start":12631,"byte_end":12677,"line_start":19,"line_end":19,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":420},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/escapei.rs","byte_start":12751,"byte_end":12765,"line_start":22,"line_end":22,"column_start":5,"column_end":19},"name":"TooLongDecimal","qualname":"::escapei::EscapeError::TooLongDecimal","value":"EscapeError::TooLongDecimal","parent":{"krate":0,"index":404},"children":[],"decl_id":null,"docs":" Cannot convert decimal to hexa\n","sig":null,"attributes":[{"value":"/ Cannot convert decimal to hexa","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/escapei.rs","byte_start":12712,"byte_end":12746,"line_start":21,"line_end":21,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":422},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/escapei.rs","byte_start":12818,"byte_end":12832,"line_start":24,"line_end":24,"column_start":5,"column_end":19},"name":"InvalidDecimal","qualname":"::escapei::EscapeError::InvalidDecimal","value":"EscapeError::InvalidDecimal(char)","parent":{"krate":0,"index":404},"children":[],"decl_id":null,"docs":" Character is not a valid decimal value\n","sig":null,"attributes":[{"value":"/ Character is not a valid decimal value","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/escapei.rs","byte_start":12771,"byte_end":12813,"line_start":23,"line_end":23,"column_start":5,"column_end":47}}]},{"kind":"Enum","id":{"krate":0,"index":404},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/escapei.rs","byte_start":12219,"byte_end":12230,"line_start":7,"line_end":7,"column_start":10,"column_end":21},"name":"EscapeError","qualname":"::escapei::EscapeError","value":"pub enum EscapeError {\n\n    /// Entity with Null character\n    EntityWithNull(::std::ops::Range<usize>),\n\n    /// Unrecognized escape symbol\n    UnrecognizedSymbol(::std::ops::Range<usize>,\n                       ::std::result::Result<String,\n                                             ::std::string::FromUtf8Error>),\n\n    /// Cannot find `;` after `&`\n    UnterminatedEntity(::std::ops::Range<usize>),\n\n    /// Cannot convert Hexa to utf8\n    TooLongHexadecimal,\n\n    /// Character is not a valid hexadecimal value\n    InvalidHexadecimal(char),\n\n    /// Cannot convert decimal to hexa\n    TooLongDecimal,\n\n    /// Character is not a valid decimal value\n    InvalidDecimal(char),\n}","parent":null,"children":[{"krate":0,"index":405},{"krate":0,"index":408},{"krate":0,"index":412},{"krate":0,"index":415},{"krate":0,"index":417},{"krate":0,"index":420},{"krate":0,"index":422}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":28},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/escapei.rs","byte_start":14507,"byte_end":14513,"line_start":68,"line_end":68,"column_start":8,"column_end":14},"name":"escape","qualname":"::escapei::escape","value":"pub fn escape(&[u8]) -> Cow<, [u8]>","parent":null,"children":[],"decl_id":null,"docs":" Escapes a `&[u8]` and replaces all xml special characters (<, >, &, ', \") with their\n corresponding xml escaped value.\n","sig":null,"attributes":[{"value":"/ Escapes a `&[u8]` and replaces all xml special characters (<, >, &, ', \") with their","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/escapei.rs","byte_start":14374,"byte_end":14462,"line_start":66,"line_end":66,"column_start":1,"column_end":89}},{"value":"/ corresponding xml escaped value.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/escapei.rs","byte_start":14463,"byte_end":14499,"line_start":67,"line_end":67,"column_start":1,"column_end":37}}]},{"kind":"Function","id":{"krate":0,"index":31},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/escapei.rs","byte_start":15846,"byte_end":15854,"line_start":109,"line_end":109,"column_start":8,"column_end":16},"name":"unescape","qualname":"::escapei::unescape","value":"pub fn unescape(&[u8]) -> Result<Cow<, [u8]>, EscapeError>","parent":null,"children":[],"decl_id":null,"docs":" Unescape a `&[u8]` and replaces all xml escaped characters ('&...;') into their corresponding\n value\n","sig":null,"attributes":[{"value":"/ Unescape a `&[u8]` and replaces all xml escaped characters ('&...;') into their corresponding","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/escapei.rs","byte_start":15731,"byte_end":15828,"line_start":107,"line_end":107,"column_start":1,"column_end":98}},{"value":"/ value","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/escapei.rs","byte_start":15829,"byte_end":15838,"line_start":108,"line_end":108,"column_start":1,"column_end":10}}]},{"kind":"Mod","id":{"krate":0,"index":36},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/lib.rs","byte_start":4500,"byte_end":4506,"line_start":127,"line_end":127,"column_start":9,"column_end":15},"name":"escape","qualname":"::escape","value":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":40}],"decl_id":null,"docs":" Manage xml character escapes\n","sig":null,"attributes":[{"value":"/ Manage xml character escapes","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/lib.rs","byte_start":4513,"byte_end":4545,"line_start":128,"line_end":128,"column_start":5,"column_end":37}}]},{"kind":"Mod","id":{"krate":0,"index":41},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"events","qualname":"::events","value":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","parent":null,"children":[{"krate":0,"index":42},{"krate":0,"index":96},{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":450},{"krate":0,"index":454},{"krate":0,"index":111},{"krate":0,"index":144},{"krate":0,"index":457},{"krate":0,"index":463},{"krate":0,"index":460},{"krate":0,"index":148},{"krate":0,"index":466},{"krate":0,"index":469},{"krate":0,"index":156},{"krate":0,"index":164},{"krate":0,"index":472},{"krate":0,"index":475},{"krate":0,"index":168},{"krate":0,"index":185},{"krate":0,"index":478},{"krate":0,"index":512},{"krate":0,"index":509},{"krate":0,"index":189},{"krate":0,"index":192},{"krate":0,"index":196},{"krate":0,"index":200},{"krate":0,"index":204},{"krate":0,"index":208},{"krate":0,"index":212}],"decl_id":null,"docs":" Defines zero-copy XML events used throughout this library.\n","sig":null,"attributes":[{"value":"/ Defines zero-copy XML events used throughout this library.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":20258,"byte_end":20320,"line_start":1,"line_end":1,"column_start":1,"column_end":63}}]},{"kind":"Mod","id":{"krate":0,"index":42},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/attributes.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"attributes","qualname":"::events::attributes","value":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/attributes.rs","parent":null,"children":[{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":51},{"krate":0,"index":52},{"krate":0,"index":53},{"krate":0,"index":54},{"krate":0,"index":427},{"krate":0,"index":434},{"krate":0,"index":55},{"krate":0,"index":437},{"krate":0,"index":447},{"krate":0,"index":441},{"krate":0,"index":443},{"krate":0,"index":60},{"krate":0,"index":69},{"krate":0,"index":73},{"krate":0,"index":76},{"krate":0,"index":79}],"decl_id":null,"docs":" Xml Attributes module","sig":null,"attributes":[{"value":"/ Xml Attributes module","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/attributes.rs","byte_start":45147,"byte_end":45172,"line_start":1,"line_end":1,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/attributes.rs","byte_start":45173,"byte_end":45176,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Provides an iterator over attributes key/value pairs","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/attributes.rs","byte_start":45177,"byte_end":45233,"line_start":3,"line_end":3,"column_start":1,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":427},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/attributes.rs","byte_start":45695,"byte_end":45705,"line_start":19,"line_end":19,"column_start":12,"column_end":22},"name":"Attributes","qualname":"::events::attributes::Attributes","value":"Attributes {  }","parent":null,"children":[{"krate":0,"index":429},{"krate":0,"index":430},{"krate":0,"index":431},{"krate":0,"index":432},{"krate":0,"index":433}],"decl_id":null,"docs":" Iterator over XML attributes.","sig":null,"attributes":[{"value":"/ Iterator over XML attributes.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/attributes.rs","byte_start":45399,"byte_end":45432,"line_start":12,"line_end":12,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/attributes.rs","byte_start":45433,"byte_end":45436,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Yields `Result<Attribute>`. An `Err` will be yielded if an attribute is malformed or duplicated.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/attributes.rs","byte_start":45437,"byte_end":45537,"line_start":14,"line_end":14,"column_start":1,"column_end":101}},{"value":"/ The duplicate check can be turned off by calling [`with_checks(false)`].","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/attributes.rs","byte_start":45538,"byte_end":45614,"line_start":15,"line_end":15,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/attributes.rs","byte_start":45615,"byte_end":45618,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ [`with_checks(false)`]: #method.with_checks","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/attributes.rs","byte_start":45619,"byte_end":45666,"line_start":17,"line_end":17,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":57},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/attributes.rs","byte_start":46243,"byte_end":46246,"line_start":35,"line_end":35,"column_start":12,"column_end":15},"name":"new","qualname":"<Attributes>::new","value":"pub fn new(&'a [u8], usize) -> Attributes","parent":null,"children":[],"decl_id":null,"docs":" Creates a new attribute iterator from a buffer.\n","sig":null,"attributes":[{"value":"/ Creates a new attribute iterator from a buffer.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/attributes.rs","byte_start":46180,"byte_end":46231,"line_start":34,"line_end":34,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":58},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/attributes.rs","byte_start":46572,"byte_end":46576,"line_start":46,"line_end":46,"column_start":12,"column_end":16},"name":"html","qualname":"<Attributes>::html","value":"pub fn html(&'a [u8], usize) -> Attributes","parent":null,"children":[],"decl_id":null,"docs":" Creates a new attribute iterator from a buffer, allowing HTML attribute syntax.\n","sig":null,"attributes":[{"value":"/ Creates a new attribute iterator from a buffer, allowing HTML attribute syntax.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/attributes.rs","byte_start":46477,"byte_end":46560,"line_start":45,"line_end":45,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":59},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/attributes.rs","byte_start":47082,"byte_end":47093,"line_start":62,"line_end":62,"column_start":12,"column_end":23},"name":"with_checks","qualname":"<Attributes>::with_checks","value":"pub fn with_checks(&mut Self, bool) -> &mut Attributes","parent":null,"children":[],"decl_id":null,"docs":" Changes whether attributes should be checked for uniqueness.","sig":null,"attributes":[{"value":"/ Changes whether attributes should be checked for uniqueness.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/attributes.rs","byte_start":46806,"byte_end":46870,"line_start":56,"line_end":56,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/attributes.rs","byte_start":46875,"byte_end":46878,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ The XML specification requires attribute keys in the same element to be unique. This check","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/attributes.rs","byte_start":46883,"byte_end":46977,"line_start":58,"line_end":58,"column_start":5,"column_end":99}},{"value":"/ can be disabled to improve performance slightly.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/attributes.rs","byte_start":46982,"byte_end":47034,"line_start":59,"line_end":59,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/attributes.rs","byte_start":47039,"byte_end":47042,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ (`true` by default)","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/attributes.rs","byte_start":47047,"byte_end":47070,"line_start":61,"line_end":61,"column_start":5,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":437},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/attributes.rs","byte_start":47625,"byte_end":47634,"line_start":77,"line_end":77,"column_start":12,"column_end":21},"name":"Attribute","qualname":"::events::attributes::Attribute","value":"Attribute { key, value }","parent":null,"children":[{"krate":0,"index":439},{"krate":0,"index":440}],"decl_id":null,"docs":" A struct representing a key/value XML attribute.","sig":null,"attributes":[{"value":"/ A struct representing a key/value XML attribute.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/attributes.rs","byte_start":47195,"byte_end":47247,"line_start":68,"line_end":68,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/attributes.rs","byte_start":47248,"byte_end":47251,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ Field `value` stores raw bytes, possibly containing escape-sequences. Most users will likely","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/attributes.rs","byte_start":47252,"byte_end":47348,"line_start":70,"line_end":70,"column_start":1,"column_end":97}},{"value":"/ want to access the value using one of the [`unescaped_value`] and [`unescape_and_decode_value`]","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/attributes.rs","byte_start":47349,"byte_end":47448,"line_start":71,"line_end":71,"column_start":1,"column_end":100}},{"value":"/ functions.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/attributes.rs","byte_start":47449,"byte_end":47463,"line_start":72,"line_end":72,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/attributes.rs","byte_start":47464,"byte_end":47467,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ [`unescaped_value`]: #method.unescaped_value","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/attributes.rs","byte_start":47468,"byte_end":47516,"line_start":74,"line_end":74,"column_start":1,"column_end":49}},{"value":"/ [`unescape_and_decode_value`]: #method.unescape_and_decode_value","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/attributes.rs","byte_start":47517,"byte_end":47585,"line_start":75,"line_end":75,"column_start":1,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":439},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/attributes.rs","byte_start":47877,"byte_end":47880,"line_start":83,"line_end":83,"column_start":9,"column_end":12},"name":"key","qualname":"::events::attributes::Attribute::key","value":"&'a [u8]","parent":{"krate":0,"index":437},"children":[],"decl_id":null,"docs":" The key to uniquely define the attribute.","sig":null,"attributes":[{"value":"/ The key to uniquely define the attribute.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/attributes.rs","byte_start":47645,"byte_end":47690,"line_start":78,"line_end":78,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/attributes.rs","byte_start":47695,"byte_end":47698,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ If [`Attributes::with_checks`] is turned off, the key might not be unique.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/attributes.rs","byte_start":47703,"byte_end":47781,"line_start":80,"line_end":80,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/attributes.rs","byte_start":47786,"byte_end":47789,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ [`Attributes::with_checks`]: struct.Attributes.html#method.with_checks","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/attributes.rs","byte_start":47794,"byte_end":47868,"line_start":82,"line_end":82,"column_start":5,"column_end":79}}]},{"kind":"Field","id":{"krate":0,"index":440},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/attributes.rs","byte_start":47940,"byte_end":47945,"line_start":85,"line_end":85,"column_start":9,"column_end":14},"name":"value","qualname":"::events::attributes::Attribute::value","value":"std::borrow::Cow<'a, [u8]>","parent":{"krate":0,"index":437},"children":[],"decl_id":null,"docs":" The raw value of the attribute.\n","sig":null,"attributes":[{"value":"/ The raw value of the attribute.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/attributes.rs","byte_start":47896,"byte_end":47931,"line_start":84,"line_end":84,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":62},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/attributes.rs","byte_start":48282,"byte_end":48297,"line_start":95,"line_end":95,"column_start":12,"column_end":27},"name":"unescaped_value","qualname":"<Attribute>::unescaped_value","value":"pub fn unescaped_value(&Self) -> Result<Cow<, [u8]>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the unescaped value.","sig":null,"attributes":[{"value":"/ Returns the unescaped value.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/attributes.rs","byte_start":47994,"byte_end":48026,"line_start":89,"line_end":89,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/attributes.rs","byte_start":48031,"byte_end":48034,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ This is normally the value you are interested in. Escape sequences such as `&gt;` are","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/attributes.rs","byte_start":48039,"byte_end":48128,"line_start":91,"line_end":91,"column_start":5,"column_end":94}},{"value":"/ replaced with their unescaped equivalents such as `>`.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/attributes.rs","byte_start":48133,"byte_end":48191,"line_start":92,"line_end":92,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/attributes.rs","byte_start":48196,"byte_end":48199,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ This will allocate if the value contains any escape sequences.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/attributes.rs","byte_start":48204,"byte_end":48270,"line_start":94,"line_end":94,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":63},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/attributes.rs","byte_start":49836,"byte_end":49861,"line_start":127,"line_end":127,"column_start":12,"column_end":37},"name":"unescape_and_decode_value","qualname":"<Attribute>::unescape_and_decode_value","value":"pub fn unescape_and_decode_value<B: BufRead>(&Self, &Reader<B>)\n-> Result<String>","parent":null,"children":[],"decl_id":null,"docs":" Decode then unescapes the value","sig":null,"attributes":[{"value":"/ Decode then unescapes the value","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/attributes.rs","byte_start":49275,"byte_end":49310,"line_start":116,"line_end":116,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/attributes.rs","byte_start":49315,"byte_end":49318,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ This allocates a `String` in all cases. For performance reasons it might be a better idea to","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/attributes.rs","byte_start":49323,"byte_end":49419,"line_start":118,"line_end":118,"column_start":5,"column_end":101}},{"value":"/ instead use one of:","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/attributes.rs","byte_start":49424,"byte_end":49447,"line_start":119,"line_end":119,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/attributes.rs","byte_start":49452,"byte_end":49455,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ * [`Reader::decode()`], as it only allocates when the decoding can't be performed otherwise.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/attributes.rs","byte_start":49460,"byte_end":49556,"line_start":121,"line_end":121,"column_start":5,"column_end":101}},{"value":"/ * [`unescaped_value()`], as it doesn't allocate when no escape sequences are used.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/attributes.rs","byte_start":49561,"byte_end":49647,"line_start":122,"line_end":122,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/attributes.rs","byte_start":49652,"byte_end":49655,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ [`unescaped_value()`]: #method.unescaped_value","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/attributes.rs","byte_start":49660,"byte_end":49710,"line_start":124,"line_end":124,"column_start":5,"column_end":55}},{"value":"/ [`Reader::decode()`]: ../../reader/struct.Reader.html#method.decode","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/attributes.rs","byte_start":49715,"byte_end":49786,"line_start":125,"line_end":125,"column_start":5,"column_end":76}},{"value":"cfg(not(feature = \"encoding\"))","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/attributes.rs","byte_start":49791,"byte_end":49824,"line_start":126,"line_end":126,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":66},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/attributes.rs","byte_start":51215,"byte_end":51246,"line_start":158,"line_end":158,"column_start":12,"column_end":43},"name":"unescape_and_decode_without_bom","qualname":"<Attribute>::unescape_and_decode_without_bom","value":"pub fn unescape_and_decode_without_bom<B: BufRead>(&Self, &Reader<B>)\n-> Result<String>","parent":null,"children":[],"decl_id":null,"docs":" helper method to unescape then decode self using the reader encoding\n but without BOM (Byte order mark)","sig":null,"attributes":[{"value":"/ helper method to unescape then decode self using the reader encoding","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/attributes.rs","byte_start":50867,"byte_end":50939,"line_start":150,"line_end":150,"column_start":5,"column_end":77}},{"value":"/ but without BOM (Byte order mark)","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/attributes.rs","byte_start":50944,"byte_end":50981,"line_start":151,"line_end":151,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/attributes.rs","byte_start":50986,"byte_end":50989,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ for performance reasons (could avoid allocating a `String`),","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/attributes.rs","byte_start":50994,"byte_end":51058,"line_start":153,"line_end":153,"column_start":5,"column_end":69}},{"value":"/ it might be wiser to manually use","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/attributes.rs","byte_start":51063,"byte_end":51100,"line_start":154,"line_end":154,"column_start":5,"column_end":42}},{"value":"/ 1. BytesText::unescaped()","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/attributes.rs","byte_start":51105,"byte_end":51134,"line_start":155,"line_end":155,"column_start":5,"column_end":34}},{"value":"/ 2. Reader::decode(...)","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/attributes.rs","byte_start":51139,"byte_end":51165,"line_start":156,"line_end":156,"column_start":5,"column_end":31}},{"value":"cfg(not(feature = \"encoding\"))","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/attributes.rs","byte_start":51170,"byte_end":51203,"line_start":157,"line_end":157,"column_start":5,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":450},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":21077,"byte_end":21087,"line_start":31,"line_end":31,"column_start":12,"column_end":22},"name":"BytesStart","qualname":"::events::BytesStart","value":"BytesStart {  }","parent":null,"children":[{"krate":0,"index":452},{"krate":0,"index":453}],"decl_id":null,"docs":" Opening tag data (`Event::Start`), with optional attributes.","sig":null,"attributes":[{"value":"/ Opening tag data (`Event::Start`), with optional attributes.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":20635,"byte_end":20699,"line_start":19,"line_end":19,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":20700,"byte_end":20703,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ `<name attr=\"value\">`.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":20704,"byte_end":20730,"line_start":21,"line_end":21,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":20731,"byte_end":20734,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ The name can be accessed using the [`name`], [`local_name`] or [`unescaped`] methods. An","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":20735,"byte_end":20827,"line_start":23,"line_end":23,"column_start":1,"column_end":93}},{"value":"/ iterator over the attributes is returned by the [`attributes`] method.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":20828,"byte_end":20902,"line_start":24,"line_end":24,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":20903,"byte_end":20906,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ [`name`]: #method.name","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":20907,"byte_end":20933,"line_start":26,"line_end":26,"column_start":1,"column_end":27}},{"value":"/ [`local_name`]: #method.local_name","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":20934,"byte_end":20972,"line_start":27,"line_end":27,"column_start":1,"column_end":39}},{"value":"/ [`unescaped`]: #method.unescaped","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":20973,"byte_end":21009,"line_start":28,"line_end":28,"column_start":1,"column_end":37}},{"value":"/ [`attributes`]: #method.attributes","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":21010,"byte_end":21048,"line_start":29,"line_end":29,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":113},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":21506,"byte_end":21514,"line_start":45,"line_end":45,"column_start":12,"column_end":20},"name":"borrowed","qualname":"<BytesStart>::borrowed","value":"pub fn borrowed(&'a [u8], usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BytesStart` from the given content (name + attributes).","sig":null,"attributes":[{"value":"/ Creates a new `BytesStart` from the given content (name + attributes).","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":21307,"byte_end":21381,"line_start":39,"line_end":39,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":21386,"byte_end":21389,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ # Warning","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":21394,"byte_end":21407,"line_start":41,"line_end":41,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":21412,"byte_end":21415,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ `&content[..name_len]` is not checked to be a valid name","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":21420,"byte_end":21480,"line_start":43,"line_end":43,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":21485,"byte_end":21494,"line_start":44,"line_end":44,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":21830,"byte_end":21843,"line_start":58,"line_end":58,"column_start":12,"column_end":25},"name":"borrowed_name","qualname":"<BytesStart>::borrowed_name","value":"pub fn borrowed_name(&'a [u8]) -> BytesStart","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BytesStart` from the given name.","sig":null,"attributes":[{"value":"/ Creates a new `BytesStart` from the given name.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":21666,"byte_end":21717,"line_start":52,"line_end":52,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":21722,"byte_end":21725,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ # Warning","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":21730,"byte_end":21743,"line_start":54,"line_end":54,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":21748,"byte_end":21751,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ `&content` is not checked to be a valid name","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":21756,"byte_end":21804,"line_start":56,"line_end":56,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":21809,"byte_end":21818,"line_start":57,"line_end":57,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":115},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":22066,"byte_end":22071,"line_start":66,"line_end":66,"column_start":12,"column_end":17},"name":"owned","qualname":"<BytesStart>::owned","value":"pub fn owned<C: Into<Vec<u8>>>(C, usize) -> BytesStart","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BytesStart` from the given content (name + attributes)","sig":null,"attributes":[{"value":"/ Creates a new `BytesStart` from the given content (name + attributes)","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":21932,"byte_end":22005,"line_start":62,"line_end":62,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":22010,"byte_end":22013,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ Owns its contents.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":22018,"byte_end":22040,"line_start":64,"line_end":64,"column_start":5,"column_end":27}},{"value":"inline","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":22045,"byte_end":22054,"line_start":65,"line_end":65,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":117},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":22364,"byte_end":22374,"line_start":77,"line_end":77,"column_start":12,"column_end":22},"name":"owned_name","qualname":"<BytesStart>::owned_name","value":"pub fn owned_name<C: Into<Vec<u8>>>(C) -> BytesStart","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BytesStart` from the given name","sig":null,"attributes":[{"value":"/ Creates a new `BytesStart` from the given name","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":22253,"byte_end":22303,"line_start":73,"line_end":73,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":22308,"byte_end":22311,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ Owns its contents.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":22316,"byte_end":22338,"line_start":75,"line_end":75,"column_start":5,"column_end":27}},{"value":"inline","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":22343,"byte_end":22352,"line_start":76,"line_end":76,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":119},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":22634,"byte_end":22644,"line_start":86,"line_end":86,"column_start":12,"column_end":22},"name":"into_owned","qualname":"<BytesStart>::into_owned","value":"pub fn into_owned(Self) -> BytesStart","parent":null,"children":[],"decl_id":null,"docs":" Converts the event into an owned event.\n","sig":null,"attributes":[{"value":"/ Converts the event into an owned event.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":22579,"byte_end":22622,"line_start":85,"line_end":85,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":120},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":22833,"byte_end":22841,"line_start":91,"line_end":91,"column_start":12,"column_end":20},"name":"to_owned","qualname":"<BytesStart>::to_owned","value":"pub fn to_owned(&Self) -> BytesStart","parent":null,"children":[],"decl_id":null,"docs":" Converts the event into an owned event without taking ownership of Event\n","sig":null,"attributes":[{"value":"/ Converts the event into an owned event without taking ownership of Event","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":22745,"byte_end":22821,"line_start":90,"line_end":90,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":121},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":23661,"byte_end":23672,"line_start":119,"line_end":119,"column_start":12,"column_end":23},"name":"to_borrowed","qualname":"<BytesStart>::to_borrowed","value":"pub fn to_borrowed(&Self) -> BytesStart","parent":null,"children":[],"decl_id":null,"docs":" Converts the event into a borrowed event. Most useful when paired with [`to_end`].","sig":null,"attributes":[{"value":"/ Converts the event into a borrowed event. Most useful when paired with [`to_end`].","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":22941,"byte_end":23027,"line_start":95,"line_end":95,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":23032,"byte_end":23035,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":23040,"byte_end":23053,"line_start":97,"line_end":97,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":23058,"byte_end":23061,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":23066,"byte_end":23073,"line_start":99,"line_end":99,"column_start":5,"column_end":12}},{"value":"/ # use quick_xml::{Error, Writer};","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":23078,"byte_end":23115,"line_start":100,"line_end":100,"column_start":5,"column_end":42}},{"value":"/ use quick_xml::events::{BytesStart, Event};","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":23120,"byte_end":23167,"line_start":101,"line_end":101,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":23172,"byte_end":23175,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ struct SomeStruct<'a> {","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":23180,"byte_end":23207,"line_start":103,"line_end":103,"column_start":5,"column_end":32}},{"value":"/     attrs: BytesStart<'a>,","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":23212,"byte_end":23242,"line_start":104,"line_end":104,"column_start":5,"column_end":35}},{"value":"/     // ...","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":23247,"byte_end":23261,"line_start":105,"line_end":105,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":23266,"byte_end":23271,"line_start":106,"line_end":106,"column_start":5,"column_end":10}},{"value":"/ # impl<'a> SomeStruct<'a> {","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":23276,"byte_end":23307,"line_start":107,"line_end":107,"column_start":5,"column_end":36}},{"value":"/ # fn example(&self) -> Result<(), Error> {","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":23312,"byte_end":23358,"line_start":108,"line_end":108,"column_start":5,"column_end":51}},{"value":"/ # let mut writer = Writer::new(Vec::new());","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":23363,"byte_end":23410,"line_start":109,"line_end":109,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":23415,"byte_end":23418,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ writer.write_event(Event::Start(self.attrs.to_borrowed()))?;","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":23423,"byte_end":23487,"line_start":111,"line_end":111,"column_start":5,"column_end":69}},{"value":"/ // ...","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":23492,"byte_end":23502,"line_start":112,"line_end":112,"column_start":5,"column_end":15}},{"value":"/ writer.write_event(Event::End(self.attrs.to_end()))?;","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":23507,"byte_end":23564,"line_start":113,"line_end":113,"column_start":5,"column_end":62}},{"value":"/ # Ok(())","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":23569,"byte_end":23581,"line_start":114,"line_end":114,"column_start":5,"column_end":17}},{"value":"/ # }}","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":23586,"byte_end":23594,"line_start":115,"line_end":115,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":23599,"byte_end":23606,"line_start":116,"line_end":116,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":23611,"byte_end":23614,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ [`to_end`]: #method.to_end","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":23619,"byte_end":23649,"line_start":118,"line_end":118,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":122},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":23806,"byte_end":23812,"line_start":124,"line_end":124,"column_start":12,"column_end":18},"name":"to_end","qualname":"<BytesStart>::to_end","value":"pub fn to_end(&Self) -> BytesEnd","parent":null,"children":[],"decl_id":null,"docs":" Creates new paired close tag\n","sig":null,"attributes":[{"value":"/ Creates new paired close tag","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":23762,"byte_end":23794,"line_start":123,"line_end":123,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":123},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":24140,"byte_end":24155,"line_start":133,"line_end":133,"column_start":12,"column_end":27},"name":"with_attributes","qualname":"<BytesStart>::with_attributes","value":"pub fn with_attributes<'b, I>(Self, I) -> Self where I: IntoIterator,\nI::Item: Into<Attribute>","parent":null,"children":[],"decl_id":null,"docs":" Consumes `self` and yield a new `BytesStart` with additional attributes from an iterator.","sig":null,"attributes":[{"value":"/ Consumes `self` and yield a new `BytesStart` with additional attributes from an iterator.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":23885,"byte_end":23978,"line_start":128,"line_end":128,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":23983,"byte_end":23986,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ The yielded items must be convertible to [`Attribute`] using `Into`.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":23991,"byte_end":24063,"line_start":130,"line_end":130,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":24068,"byte_end":24071,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ [`Attribute`]: attributes/struct.Attributes.html","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":24076,"byte_end":24128,"line_start":132,"line_end":132,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":126},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":24418,"byte_end":24422,"line_start":144,"line_end":144,"column_start":12,"column_end":16},"name":"name","qualname":"<BytesStart>::name","value":"pub fn name(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Gets the undecoded raw tag name as a `&[u8]`.\n","sig":null,"attributes":[{"value":"/ Gets the undecoded raw tag name as a `&[u8]`.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":24343,"byte_end":24392,"line_start":142,"line_end":142,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":24397,"byte_end":24406,"line_start":143,"line_end":143,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":127},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":24692,"byte_end":24702,"line_start":152,"line_end":152,"column_start":12,"column_end":22},"name":"local_name","qualname":"<BytesStart>::local_name","value":"pub fn local_name(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Gets the undecoded raw local tag name (excluding namespace) as a `&[u8]`.","sig":null,"attributes":[{"value":"/ Gets the undecoded raw local tag name (excluding namespace) as a `&[u8]`.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":24487,"byte_end":24564,"line_start":148,"line_end":148,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":24569,"byte_end":24572,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ All content up to and including the first `:` character is removed from the tag name.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":24577,"byte_end":24666,"line_start":150,"line_end":150,"column_start":5,"column_end":94}},{"value":"inline","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":24671,"byte_end":24680,"line_start":151,"line_end":151,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":129},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":25008,"byte_end":25017,"line_start":162,"line_end":162,"column_start":12,"column_end":21},"name":"unescaped","qualname":"<BytesStart>::unescaped","value":"pub fn unescaped(&Self) -> Result<Cow<, [u8]>>","parent":null,"children":[],"decl_id":null,"docs":" Gets the unescaped tag name.","sig":null,"attributes":[{"value":"/ Gets the unescaped tag name.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":24832,"byte_end":24864,"line_start":157,"line_end":157,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":24869,"byte_end":24872,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ XML escape sequences like \"`&lt;`\" will be replaced by their unescaped characters like","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":24877,"byte_end":24967,"line_start":159,"line_end":159,"column_start":5,"column_end":95}},{"value":"/ \"`<`\".","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":24972,"byte_end":24982,"line_start":160,"line_end":160,"column_start":5,"column_end":15}},{"value":"inline","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":24987,"byte_end":24996,"line_start":161,"line_end":161,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":130},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":25184,"byte_end":25194,"line_start":167,"line_end":167,"column_start":12,"column_end":22},"name":"attributes","qualname":"<BytesStart>::attributes","value":"pub fn attributes(&Self) -> Attributes","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the attributes of this tag.\n","sig":null,"attributes":[{"value":"/ Returns an iterator over the attributes of this tag.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":25116,"byte_end":25172,"line_start":166,"line_end":166,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":131},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":25381,"byte_end":25396,"line_start":172,"line_end":172,"column_start":12,"column_end":27},"name":"html_attributes","qualname":"<BytesStart>::html_attributes","value":"pub fn html_attributes(&Self) -> Attributes","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the HTML-like attributes of this tag (no mandatory quotes or `=`).\n","sig":null,"attributes":[{"value":"/ Returns an iterator over the HTML-like attributes of this tag (no mandatory quotes or `=`).","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":25274,"byte_end":25369,"line_start":171,"line_end":171,"column_start":5,"column_end":100}}]},{"kind":"Method","id":{"krate":0,"index":132},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":25651,"byte_end":25665,"line_start":179,"line_end":179,"column_start":12,"column_end":26},"name":"attributes_raw","qualname":"<BytesStart>::attributes_raw","value":"pub fn attributes_raw(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Gets the undecoded raw string with the attributes of this tag as a `&[u8]`,\n including the whitespace after the tag name if there is any.\n","sig":null,"attributes":[{"value":"/ Gets the undecoded raw string with the attributes of this tag as a `&[u8]`,","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":25477,"byte_end":25556,"line_start":176,"line_end":176,"column_start":5,"column_end":84}},{"value":"/ including the whitespace after the tag name if there is any.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":25561,"byte_end":25625,"line_start":177,"line_end":177,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":25630,"byte_end":25639,"line_start":178,"line_end":178,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":133},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":25952,"byte_end":25969,"line_start":188,"line_end":188,"column_start":12,"column_end":29},"name":"extend_attributes","qualname":"<BytesStart>::extend_attributes","value":"pub fn extend_attributes<'b, I>(&mut Self, I) -> &mut BytesStart where\nI: IntoIterator, I::Item: Into<Attribute>","parent":null,"children":[],"decl_id":null,"docs":" Add additional attributes to this tag using an iterator.","sig":null,"attributes":[{"value":"/ Add additional attributes to this tag using an iterator.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":25730,"byte_end":25790,"line_start":183,"line_end":183,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":25795,"byte_end":25798,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ The yielded items must be convertible to [`Attribute`] using `Into`.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":25803,"byte_end":25875,"line_start":185,"line_end":185,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":25880,"byte_end":25883,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ [`Attribute`]: attributes/struct.Attributes.html","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":25888,"byte_end":25940,"line_start":187,"line_end":187,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":136},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":27655,"byte_end":27674,"line_start":229,"line_end":229,"column_start":12,"column_end":31},"name":"unescape_and_decode","qualname":"<BytesStart>::unescape_and_decode","value":"pub fn unescape_and_decode<B: BufRead>(&Self, &Reader<B>) -> Result<String>","parent":null,"children":[],"decl_id":null,"docs":" Returns the unescaped and decoded string value.","sig":null,"attributes":[{"value":"/ Returns the unescaped and decoded string value.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":27085,"byte_end":27136,"line_start":217,"line_end":217,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":27141,"byte_end":27144,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ This allocates a `String` in all cases. For performance reasons it might be a better idea to","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":27149,"byte_end":27245,"line_start":219,"line_end":219,"column_start":5,"column_end":101}},{"value":"/ instead use one of:","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":27250,"byte_end":27273,"line_start":220,"line_end":220,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":27278,"byte_end":27281,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ * [`unescaped()`], as it doesn't allocate when no escape sequences are used.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":27286,"byte_end":27366,"line_start":222,"line_end":222,"column_start":5,"column_end":85}},{"value":"/ * [`Reader::decode()`], as it only allocates when the decoding can't be performed otherwise.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":27371,"byte_end":27467,"line_start":223,"line_end":223,"column_start":5,"column_end":101}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":27472,"byte_end":27475,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ [`unescaped()`]: #method.unescaped","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":27480,"byte_end":27518,"line_start":225,"line_end":225,"column_start":5,"column_end":43}},{"value":"/ [`Reader::decode()`]: ../reader/struct.Reader.html#method.decode","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":27523,"byte_end":27591,"line_start":226,"line_end":226,"column_start":5,"column_end":73}},{"value":"cfg(not(feature = \"encoding\"))","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":27596,"byte_end":27629,"line_start":227,"line_end":227,"column_start":5,"column_end":38}},{"value":"inline","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":27634,"byte_end":27643,"line_start":228,"line_end":228,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":139},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":28015,"byte_end":28029,"line_start":236,"line_end":236,"column_start":12,"column_end":26},"name":"push_attribute","qualname":"<BytesStart>::push_attribute","value":"pub fn push_attribute<'b, A: Into<Attribute>>(&mut Self, A)","parent":null,"children":[],"decl_id":null,"docs":" Adds an attribute to this element.\n","sig":null,"attributes":[{"value":"/ Adds an attribute to this element.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":27965,"byte_end":28003,"line_start":235,"line_end":235,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":142},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":28475,"byte_end":28483,"line_start":251,"line_end":251,"column_start":12,"column_end":20},"name":"set_name","qualname":"<BytesStart>::set_name","value":"pub fn set_name(&mut Self, &[u8]) -> &mut BytesStart","parent":null,"children":[],"decl_id":null,"docs":" Edit the name of the BytesStart in-place","sig":null,"attributes":[{"value":"/ Edit the name of the BytesStart in-place","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":28336,"byte_end":28380,"line_start":246,"line_end":246,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":28385,"byte_end":28388,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ # Warning","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":28393,"byte_end":28406,"line_start":248,"line_end":248,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":28411,"byte_end":28414,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ `name` is not checked to be a valid name","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":28419,"byte_end":28463,"line_start":250,"line_end":250,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":143},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":28749,"byte_end":28765,"line_start":259,"line_end":259,"column_start":12,"column_end":28},"name":"clear_attributes","qualname":"<BytesStart>::clear_attributes","value":"pub fn clear_attributes(&mut Self) -> &mut BytesStart","parent":null,"children":[],"decl_id":null,"docs":" Remove all attributes from the ByteStart\n","sig":null,"attributes":[{"value":"/ Remove all attributes from the ByteStart","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":28693,"byte_end":28737,"line_start":258,"line_end":258,"column_start":5,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":457},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":29358,"byte_end":29367,"line_start":279,"line_end":279,"column_start":12,"column_end":21},"name":"BytesDecl","qualname":"::events::BytesDecl","value":"BytesDecl {  }","parent":null,"children":[{"krate":0,"index":459}],"decl_id":null,"docs":" An XML declaration (`Event::Decl`).","sig":null,"attributes":[{"value":"/ An XML declaration (`Event::Decl`).","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":29184,"byte_end":29223,"line_start":275,"line_end":275,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":29224,"byte_end":29227,"line_start":276,"line_end":276,"column_start":1,"column_end":4}},{"value":"/ [W3C XML 1.1 Prolog and Document Type Declaration](http://w3.org/TR/xml11/#sec-prolog-dtd)","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":29228,"byte_end":29322,"line_start":277,"line_end":277,"column_start":1,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":150},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":29492,"byte_end":29502,"line_start":285,"line_end":285,"column_start":12,"column_end":22},"name":"from_start","qualname":"<BytesDecl>::from_start","value":"pub fn from_start(BytesStart) -> BytesDecl","parent":null,"children":[],"decl_id":null,"docs":" Creates a `BytesDecl` from a `BytesStart`\n","sig":null,"attributes":[{"value":"/ Creates a `BytesDecl` from a `BytesStart`","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":29435,"byte_end":29480,"line_start":284,"line_end":284,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":151},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":29652,"byte_end":29659,"line_start":290,"line_end":290,"column_start":12,"column_end":19},"name":"version","qualname":"<BytesDecl>::version","value":"pub fn version(&Self) -> Result<Cow<, [u8]>>","parent":null,"children":[],"decl_id":null,"docs":" Gets xml version, including quotes (' or \")\n","sig":null,"attributes":[{"value":"/ Gets xml version, including quotes (' or \")","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":29593,"byte_end":29640,"line_start":289,"line_end":289,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":152},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":30289,"byte_end":30297,"line_start":307,"line_end":307,"column_start":12,"column_end":20},"name":"encoding","qualname":"<BytesDecl>::encoding","value":"pub fn encoding(&Self) -> Option<Result<Cow<, [u8]>>>","parent":null,"children":[],"decl_id":null,"docs":" Gets xml encoding, including quotes (' or \")\n","sig":null,"attributes":[{"value":"/ Gets xml encoding, including quotes (' or \")","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":30229,"byte_end":30277,"line_start":306,"line_end":306,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":153},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":30726,"byte_end":30736,"line_start":322,"line_end":322,"column_start":12,"column_end":22},"name":"standalone","qualname":"<BytesDecl>::standalone","value":"pub fn standalone(&Self) -> Option<Result<Cow<, [u8]>>>","parent":null,"children":[],"decl_id":null,"docs":" Gets xml standalone, including quotes (' or \")\n","sig":null,"attributes":[{"value":"/ Gets xml standalone, including quotes (' or \")","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":30664,"byte_end":30714,"line_start":321,"line_end":321,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":154},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":31609,"byte_end":31612,"line_start":343,"line_end":343,"column_start":12,"column_end":15},"name":"new","qualname":"<BytesDecl>::new","value":"pub fn new(&[u8], Option<&[u8]>, Option<&[u8]>) -> BytesDecl","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `XmlDecl` from the (mandatory) _version_ (should be `1.0` or `1.1`),\n the optional _encoding_ (e.g., `UTF-8`) and the optional _standalone_ (`yes` or `no`)\n attribute.","sig":null,"attributes":[{"value":"/ Constructs a new `XmlDecl` from the (mandatory) _version_ (should be `1.0` or `1.1`),","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":31105,"byte_end":31194,"line_start":336,"line_end":336,"column_start":5,"column_end":94}},{"value":"/ the optional _encoding_ (e.g., `UTF-8`) and the optional _standalone_ (`yes` or `no`)","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":31199,"byte_end":31288,"line_start":337,"line_end":337,"column_start":5,"column_end":94}},{"value":"/ attribute.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":31293,"byte_end":31307,"line_start":338,"line_end":338,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":31312,"byte_end":31315,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ Does not escape any of its inputs. Always uses double quotes to wrap the attribute values.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":31320,"byte_end":31414,"line_start":340,"line_end":340,"column_start":5,"column_end":99}},{"value":"/ The caller is responsible for escaping attribute values. Shouldn't usually be relevant since","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":31419,"byte_end":31515,"line_start":341,"line_end":341,"column_start":5,"column_end":101}},{"value":"/ the double quote character is not allowed in any of the attribute values.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":31520,"byte_end":31597,"line_start":342,"line_end":342,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":155},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":33089,"byte_end":33099,"line_start":392,"line_end":392,"column_start":12,"column_end":22},"name":"into_owned","qualname":"<BytesDecl>::into_owned","value":"pub fn into_owned(Self) -> BytesDecl","parent":null,"children":[],"decl_id":null,"docs":" Converts the event into an owned event.\n","sig":null,"attributes":[{"value":"/ Converts the event into an owned event.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":33034,"byte_end":33077,"line_start":391,"line_end":391,"column_start":5,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":466},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":33288,"byte_end":33296,"line_start":401,"line_end":401,"column_start":12,"column_end":20},"name":"BytesEnd","qualname":"::events::BytesEnd","value":"BytesEnd {  }","parent":null,"children":[{"krate":0,"index":468}],"decl_id":null,"docs":" A struct to manage `Event::End` events\n","sig":null,"attributes":[{"value":"/ A struct to manage `Event::End` events","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":33217,"byte_end":33259,"line_start":399,"line_end":399,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":158},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":33431,"byte_end":33439,"line_start":408,"line_end":408,"column_start":12,"column_end":20},"name":"borrowed","qualname":"<BytesEnd>::borrowed","value":"pub fn borrowed(&'a [u8]) -> BytesEnd","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BytesEnd` borrowing a slice\n","sig":null,"attributes":[{"value":"/ Creates a new `BytesEnd` borrowing a slice","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":33359,"byte_end":33405,"line_start":406,"line_end":406,"column_start":5,"column_end":51}},{"value":"inline","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":33410,"byte_end":33419,"line_start":407,"line_end":407,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":159},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":33623,"byte_end":33628,"line_start":416,"line_end":416,"column_start":12,"column_end":17},"name":"owned","qualname":"<BytesEnd>::owned","value":"pub fn owned(Vec<u8>) -> BytesEnd","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BytesEnd` owning its name\n","sig":null,"attributes":[{"value":"/ Creates a new `BytesEnd` owning its name","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":33553,"byte_end":33597,"line_start":414,"line_end":414,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":33602,"byte_end":33611,"line_start":415,"line_end":415,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":33798,"byte_end":33808,"line_start":423,"line_end":423,"column_start":12,"column_end":22},"name":"into_owned","qualname":"<BytesEnd>::into_owned","value":"pub fn into_owned(Self) -> BytesEnd","parent":null,"children":[],"decl_id":null,"docs":" Converts the event into an owned event.\n","sig":null,"attributes":[{"value":"/ Converts the event into an owned event.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":33743,"byte_end":33786,"line_start":422,"line_end":422,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":161},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":33988,"byte_end":33992,"line_start":431,"line_end":431,"column_start":12,"column_end":16},"name":"name","qualname":"<BytesEnd>::name","value":"pub fn name(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Gets `BytesEnd` event name\n","sig":null,"attributes":[{"value":"/ Gets `BytesEnd` event name","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":33932,"byte_end":33962,"line_start":429,"line_end":429,"column_start":5,"column_end":35}},{"value":"inline","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":33967,"byte_end":33976,"line_start":430,"line_end":430,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":162},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":34271,"byte_end":34281,"line_start":439,"line_end":439,"column_start":12,"column_end":22},"name":"local_name","qualname":"<BytesEnd>::local_name","value":"pub fn local_name(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" local name (excluding namespace) as &[u8] (without eventual attributes)\n returns the name() with any leading namespace removed (all content up to\n and including the first ':' character)\n","sig":null,"attributes":[{"value":"/ local name (excluding namespace) as &[u8] (without eventual attributes)","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":34042,"byte_end":34117,"line_start":435,"line_end":435,"column_start":5,"column_end":80}},{"value":"/ returns the name() with any leading namespace removed (all content up to","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":34122,"byte_end":34198,"line_start":436,"line_end":436,"column_start":5,"column_end":81}},{"value":"/ and including the first ':' character)","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":34203,"byte_end":34245,"line_start":437,"line_end":437,"column_start":5,"column_end":47}},{"value":"inline","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":34250,"byte_end":34259,"line_start":438,"line_end":438,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":472},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":34831,"byte_end":34840,"line_start":460,"line_end":460,"column_start":12,"column_end":21},"name":"BytesText","qualname":"::events::BytesText","value":"BytesText {  }","parent":null,"children":[{"krate":0,"index":474}],"decl_id":null,"docs":" Data from various events (most notably, `Event::Text`).\n","sig":null,"attributes":[{"value":"/ Data from various events (most notably, `Event::Text`).","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":34743,"byte_end":34802,"line_start":458,"line_end":458,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":170},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":35042,"byte_end":35054,"line_start":468,"line_end":468,"column_start":12,"column_end":24},"name":"from_escaped","qualname":"<BytesText>::from_escaped","value":"pub fn from_escaped<C: Into<Cow>>(C) -> BytesText","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BytesText` from an escaped byte sequence.\n","sig":null,"attributes":[{"value":"/ Creates a new `BytesText` from an escaped byte sequence.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":34956,"byte_end":35016,"line_start":466,"line_end":466,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":35021,"byte_end":35030,"line_start":467,"line_end":467,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":172},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":35322,"byte_end":35332,"line_start":477,"line_end":477,"column_start":12,"column_end":22},"name":"from_plain","qualname":"<BytesText>::from_plain","value":"pub fn from_plain(&'a [u8]) -> BytesText","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BytesText` from a byte sequence. The byte sequence is\n expected not to be escaped.\n","sig":null,"attributes":[{"value":"/ Creates a new `BytesText` from a byte sequence. The byte sequence is","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":35188,"byte_end":35260,"line_start":474,"line_end":474,"column_start":5,"column_end":77}},{"value":"/ expected not to be escaped.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":35265,"byte_end":35296,"line_start":475,"line_end":475,"column_start":5,"column_end":36}},{"value":"inline","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":35301,"byte_end":35310,"line_start":476,"line_end":476,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":173},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":35529,"byte_end":35545,"line_start":485,"line_end":485,"column_start":12,"column_end":28},"name":"from_escaped_str","qualname":"<BytesText>::from_escaped_str","value":"pub fn from_escaped_str<C: Into<Cow>>(C) -> BytesText","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BytesText` from an escaped string.\n","sig":null,"attributes":[{"value":"/ Creates a new `BytesText` from an escaped string.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":35450,"byte_end":35503,"line_start":483,"line_end":483,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":35508,"byte_end":35517,"line_start":484,"line_end":484,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":175},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":35910,"byte_end":35924,"line_start":495,"line_end":495,"column_start":12,"column_end":26},"name":"from_plain_str","qualname":"<BytesText>::from_plain_str","value":"pub fn from_plain_str(&'a str) -> BytesText","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BytesText` from a string. The string is expected not to\n be escaped.\n","sig":null,"attributes":[{"value":"/ Creates a new `BytesText` from a string. The string is expected not to","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":35790,"byte_end":35864,"line_start":492,"line_end":492,"column_start":5,"column_end":79}},{"value":"/ be escaped.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":35869,"byte_end":35884,"line_start":493,"line_end":493,"column_start":5,"column_end":20}},{"value":"inline","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":35889,"byte_end":35898,"line_start":494,"line_end":494,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":176},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":36132,"byte_end":36142,"line_start":502,"line_end":502,"column_start":12,"column_end":22},"name":"into_owned","qualname":"<BytesText>::into_owned","value":"pub fn into_owned(Self) -> BytesText","parent":null,"children":[],"decl_id":null,"docs":" Ensures that all data is owned to extend the object's lifetime if\n necessary.\n","sig":null,"attributes":[{"value":"/ Ensures that all data is owned to extend the object's lifetime if","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":36018,"byte_end":36087,"line_start":499,"line_end":499,"column_start":5,"column_end":74}},{"value":"/ necessary.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":36092,"byte_end":36106,"line_start":500,"line_end":500,"column_start":5,"column_end":19}},{"value":"inline","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":36111,"byte_end":36120,"line_start":501,"line_end":501,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":177},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":36690,"byte_end":36699,"line_start":519,"line_end":519,"column_start":12,"column_end":21},"name":"unescaped","qualname":"<BytesText>::unescaped","value":"pub fn unescaped(&Self) -> Result<Cow<, [u8]>>","parent":null,"children":[],"decl_id":null,"docs":" gets escaped content","sig":null,"attributes":[{"value":"/ gets escaped content","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":36470,"byte_end":36494,"line_start":515,"line_end":515,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":36499,"byte_end":36502,"line_start":516,"line_end":516,"column_start":5,"column_end":8}},{"value":"/ Searches for '&' into content and try to escape the coded character if possible","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":36507,"byte_end":36590,"line_start":517,"line_end":517,"column_start":5,"column_end":88}},{"value":"/ returns Malformed error with index within element if '&' is not followed by ';'","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":36595,"byte_end":36678,"line_start":518,"line_end":518,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":178},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":37843,"byte_end":37874,"line_start":548,"line_end":548,"column_start":12,"column_end":43},"name":"unescape_and_decode_without_bom","qualname":"<BytesText>::unescape_and_decode_without_bom","value":"pub fn unescape_and_decode_without_bom<B: BufRead>(&Self, &Reader<B>)\n-> Result<String>","parent":null,"children":[],"decl_id":null,"docs":" helper method to unescape then decode self using the reader encoding\n but without BOM (Byte order mark)","sig":null,"attributes":[{"value":"/ helper method to unescape then decode self using the reader encoding","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":37495,"byte_end":37567,"line_start":540,"line_end":540,"column_start":5,"column_end":77}},{"value":"/ but without BOM (Byte order mark)","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":37572,"byte_end":37609,"line_start":541,"line_end":541,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":37614,"byte_end":37617,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ for performance reasons (could avoid allocating a `String`),","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":37622,"byte_end":37686,"line_start":543,"line_end":543,"column_start":5,"column_end":69}},{"value":"/ it might be wiser to manually use","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":37691,"byte_end":37728,"line_start":544,"line_end":544,"column_start":5,"column_end":42}},{"value":"/ 1. BytesText::unescaped()","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":37733,"byte_end":37762,"line_start":545,"line_end":545,"column_start":5,"column_end":34}},{"value":"/ 2. Reader::decode(...)","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":37767,"byte_end":37793,"line_start":546,"line_end":546,"column_start":5,"column_end":31}},{"value":"cfg(not(feature = \"encoding\"))","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":37798,"byte_end":37831,"line_start":547,"line_end":547,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":181},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":39116,"byte_end":39135,"line_start":577,"line_end":577,"column_start":12,"column_end":31},"name":"unescape_and_decode","qualname":"<BytesText>::unescape_and_decode","value":"pub fn unescape_and_decode<B: BufRead>(&Self, &Reader<B>) -> Result<String>","parent":null,"children":[],"decl_id":null,"docs":" helper method to unescape then decode self using the reader encoding","sig":null,"attributes":[{"value":"/ helper method to unescape then decode self using the reader encoding","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":38810,"byte_end":38882,"line_start":570,"line_end":570,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":38887,"byte_end":38890,"line_start":571,"line_end":571,"column_start":5,"column_end":8}},{"value":"/ for performance reasons (could avoid allocating a `String`),","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":38895,"byte_end":38959,"line_start":572,"line_end":572,"column_start":5,"column_end":69}},{"value":"/ it might be wiser to manually use","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":38964,"byte_end":39001,"line_start":573,"line_end":573,"column_start":5,"column_end":42}},{"value":"/ 1. BytesText::unescaped()","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":39006,"byte_end":39035,"line_start":574,"line_end":574,"column_start":5,"column_end":34}},{"value":"/ 2. Reader::decode(...)","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":39040,"byte_end":39066,"line_start":575,"line_end":575,"column_start":5,"column_end":31}},{"value":"cfg(not(feature = \"encoding\"))","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":39071,"byte_end":39104,"line_start":576,"line_end":576,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":184},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":39463,"byte_end":39470,"line_start":584,"line_end":584,"column_start":12,"column_end":19},"name":"escaped","qualname":"<BytesText>::escaped","value":"pub fn escaped(&Self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Gets escaped content.\n","sig":null,"attributes":[{"value":"/ Gets escaped content.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":39426,"byte_end":39451,"line_start":583,"line_end":583,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":480},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":40045,"byte_end":40050,"line_start":605,"line_end":605,"column_start":5,"column_end":10},"name":"Start","qualname":"::events::Event::Start","value":"Event::Start(BytesStart)","parent":{"krate":0,"index":478},"children":[],"decl_id":null,"docs":" Start tag (with attributes) `<tag attr=\"value\">`.\n","sig":null,"attributes":[{"value":"/ Start tag (with attributes) `<tag attr=\"value\">`.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":39987,"byte_end":40040,"line_start":604,"line_end":604,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":483},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":40098,"byte_end":40101,"line_start":607,"line_end":607,"column_start":5,"column_end":8},"name":"End","qualname":"::events::Event::End","value":"Event::End(BytesEnd)","parent":{"krate":0,"index":478},"children":[],"decl_id":null,"docs":" End tag `</tag>`.\n","sig":null,"attributes":[{"value":"/ End tag `</tag>`.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":40072,"byte_end":40093,"line_start":606,"line_end":606,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":486},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":40189,"byte_end":40194,"line_start":609,"line_end":609,"column_start":5,"column_end":10},"name":"Empty","qualname":"::events::Event::Empty","value":"Event::Empty(BytesStart)","parent":{"krate":0,"index":478},"children":[],"decl_id":null,"docs":" Empty element tag (with attributes) `<tag attr=\"value\" />`.\n","sig":null,"attributes":[{"value":"/ Empty element tag (with attributes) `<tag attr=\"value\" />`.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":40121,"byte_end":40184,"line_start":608,"line_end":608,"column_start":5,"column_end":68}}]},{"kind":"TupleVariant","id":{"krate":0,"index":489},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":40274,"byte_end":40278,"line_start":611,"line_end":611,"column_start":5,"column_end":9},"name":"Text","qualname":"::events::Event::Text","value":"Event::Text(BytesText)","parent":{"krate":0,"index":478},"children":[],"decl_id":null,"docs":" Character data between `Start` and `End` element.\n","sig":null,"attributes":[{"value":"/ Character data between `Start` and `End` element.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":40216,"byte_end":40269,"line_start":610,"line_end":610,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":492},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":40331,"byte_end":40338,"line_start":613,"line_end":613,"column_start":5,"column_end":12},"name":"Comment","qualname":"::events::Event::Comment","value":"Event::Comment(BytesText)","parent":{"krate":0,"index":478},"children":[],"decl_id":null,"docs":" Comment `<!-- ... -->`.\n","sig":null,"attributes":[{"value":"/ Comment `<!-- ... -->`.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":40299,"byte_end":40326,"line_start":612,"line_end":612,"column_start":5,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":495},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":40392,"byte_end":40397,"line_start":615,"line_end":615,"column_start":5,"column_end":10},"name":"CData","qualname":"::events::Event::CData","value":"Event::CData(BytesText)","parent":{"krate":0,"index":478},"children":[],"decl_id":null,"docs":" CData `<![CDATA[...]]>`.\n","sig":null,"attributes":[{"value":"/ CData `<![CDATA[...]]>`.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":40359,"byte_end":40387,"line_start":614,"line_end":614,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":498},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":40457,"byte_end":40461,"line_start":617,"line_end":617,"column_start":5,"column_end":9},"name":"Decl","qualname":"::events::Event::Decl","value":"Event::Decl(BytesDecl)","parent":{"krate":0,"index":478},"children":[],"decl_id":null,"docs":" XML declaration `<?xml ...?>`.\n","sig":null,"attributes":[{"value":"/ XML declaration `<?xml ...?>`.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":40418,"byte_end":40452,"line_start":616,"line_end":616,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":501},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":40524,"byte_end":40526,"line_start":619,"line_end":619,"column_start":5,"column_end":7},"name":"PI","qualname":"::events::Event::PI","value":"Event::PI(BytesText)","parent":{"krate":0,"index":478},"children":[],"decl_id":null,"docs":" Processing instruction `<?...?>`.\n","sig":null,"attributes":[{"value":"/ Processing instruction `<?...?>`.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":40482,"byte_end":40519,"line_start":618,"line_end":618,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":504},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":40580,"byte_end":40587,"line_start":621,"line_end":621,"column_start":5,"column_end":12},"name":"DocType","qualname":"::events::Event::DocType","value":"Event::DocType(BytesText)","parent":{"krate":0,"index":478},"children":[],"decl_id":null,"docs":" Doctype `<!DOCTYPE...>`.\n","sig":null,"attributes":[{"value":"/ Doctype `<!DOCTYPE...>`.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":40547,"byte_end":40575,"line_start":620,"line_end":620,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":507},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":40637,"byte_end":40640,"line_start":623,"line_end":623,"column_start":5,"column_end":8},"name":"Eof","qualname":"::events::Event::Eof","value":"Event::Eof","parent":{"krate":0,"index":478},"children":[],"decl_id":null,"docs":" End of XML document.\n","sig":null,"attributes":[{"value":"/ End of XML document.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":40608,"byte_end":40632,"line_start":622,"line_end":622,"column_start":5,"column_end":29}}]},{"kind":"Enum","id":{"krate":0,"index":478},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":39971,"byte_end":39976,"line_start":603,"line_end":603,"column_start":10,"column_end":15},"name":"Event","qualname":"::events::Event","value":"pub enum Event<'a> {\n\n    /// Start tag (with attributes) `<tag attr=\"value\">`.\n    Start(BytesStart),\n\n    /// End tag `</tag>`.\n    End(BytesEnd),\n\n    /// Empty element tag (with attributes) `<tag attr=\"value\" />`.\n    Empty(BytesStart),\n\n    /// Character data between `Start` and `End` element.\n    Text(BytesText),\n\n    /// Comment `<!-- ... -->`.\n    Comment(BytesText),\n\n    /// CData `<![CDATA[...]]>`.\n    CData(BytesText),\n\n    /// XML declaration `<?xml ...?>`.\n    Decl(BytesDecl),\n\n    /// Processing instruction `<?...?>`.\n    PI(BytesText),\n\n    /// Doctype `<!DOCTYPE...>`.\n    DocType(BytesText),\n\n    /// End of XML document.\n    Eof,\n}","parent":null,"children":[{"krate":0,"index":480},{"krate":0,"index":483},{"krate":0,"index":486},{"krate":0,"index":489},{"krate":0,"index":492},{"krate":0,"index":495},{"krate":0,"index":498},{"krate":0,"index":501},{"krate":0,"index":504},{"krate":0,"index":507}],"decl_id":null,"docs":" Event emitted by [`Reader::read_event`].","sig":null,"attributes":[{"value":"/ Event emitted by [`Reader::read_event`].","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":39814,"byte_end":39858,"line_start":599,"line_end":599,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":39859,"byte_end":39862,"line_start":600,"line_end":600,"column_start":1,"column_end":4}},{"value":"/ [`Reader::read_event`]: ../reader/struct.Reader.html#method.read_event","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":39863,"byte_end":39937,"line_start":601,"line_end":601,"column_start":1,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":191},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":40826,"byte_end":40836,"line_start":629,"line_end":629,"column_start":12,"column_end":22},"name":"into_owned","qualname":"<Event>::into_owned","value":"pub fn into_owned(Self) -> Event","parent":null,"children":[],"decl_id":null,"docs":" Converts the event to an owned version, untied to the lifetime of\n buffer used when reading but incurring a new, seperate allocation.\n","sig":null,"attributes":[{"value":"/ Converts the event to an owned version, untied to the lifetime of","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":40670,"byte_end":40739,"line_start":627,"line_end":627,"column_start":5,"column_end":74}},{"value":"/ buffer used when reading but incurring a new, seperate allocation.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":40744,"byte_end":40814,"line_start":628,"line_end":628,"column_start":5,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":526},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":61142,"byte_end":61148,"line_start":66,"line_end":66,"column_start":12,"column_end":18},"name":"Reader","qualname":"::reader::Reader","value":"Reader {  }","parent":null,"children":[{"krate":0,"index":528},{"krate":0,"index":529},{"krate":0,"index":530},{"krate":0,"index":531},{"krate":0,"index":532},{"krate":0,"index":533},{"krate":0,"index":534},{"krate":0,"index":535},{"krate":0,"index":536},{"krate":0,"index":537},{"krate":0,"index":538}],"decl_id":null,"docs":" A low level encoding-agnostic XML event reader.","sig":null,"attributes":[{"value":"/ A low level encoding-agnostic XML event reader.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":59872,"byte_end":59923,"line_start":27,"line_end":27,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":59924,"byte_end":59927,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ Consumes a `BufRead` and streams XML `Event`s.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":59928,"byte_end":59978,"line_start":29,"line_end":29,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":59979,"byte_end":59982,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":59983,"byte_end":59997,"line_start":31,"line_end":31,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":59998,"byte_end":60001,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":60002,"byte_end":60009,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"/ use quick_xml::Reader;","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":60010,"byte_end":60036,"line_start":34,"line_end":34,"column_start":1,"column_end":27}},{"value":"/ use quick_xml::events::Event;","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":60037,"byte_end":60070,"line_start":35,"line_end":35,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":60071,"byte_end":60074,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ let xml = r#\"<tag1 att1 = \"test\">","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":60075,"byte_end":60112,"line_start":37,"line_end":37,"column_start":1,"column_end":38}},{"value":"/                 <tag2><!--Test comment-->Test</tag2>","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":60113,"byte_end":60169,"line_start":38,"line_end":38,"column_start":1,"column_end":57}},{"value":"/                 <tag2>Test 2</tag2>","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":60170,"byte_end":60209,"line_start":39,"line_end":39,"column_start":1,"column_end":40}},{"value":"/             </tag1>\"#;","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":60210,"byte_end":60236,"line_start":40,"line_end":40,"column_start":1,"column_end":27}},{"value":"/ let mut reader = Reader::from_str(xml);","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":60237,"byte_end":60280,"line_start":41,"line_end":41,"column_start":1,"column_end":44}},{"value":"/ reader.trim_text(true);","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":60281,"byte_end":60308,"line_start":42,"line_end":42,"column_start":1,"column_end":28}},{"value":"/ let mut count = 0;","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":60309,"byte_end":60331,"line_start":43,"line_end":43,"column_start":1,"column_end":23}},{"value":"/ let mut txt = Vec::new();","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":60332,"byte_end":60361,"line_start":44,"line_end":44,"column_start":1,"column_end":30}},{"value":"/ let mut buf = Vec::new();","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":60362,"byte_end":60391,"line_start":45,"line_end":45,"column_start":1,"column_end":30}},{"value":"/ loop {","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":60392,"byte_end":60402,"line_start":46,"line_end":46,"column_start":1,"column_end":11}},{"value":"/     match reader.read_event(&mut buf) {","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":60403,"byte_end":60446,"line_start":47,"line_end":47,"column_start":1,"column_end":44}},{"value":"/         Ok(Event::Start(ref e)) => {","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":60447,"byte_end":60487,"line_start":48,"line_end":48,"column_start":1,"column_end":41}},{"value":"/             match e.name() {","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":60488,"byte_end":60520,"line_start":49,"line_end":49,"column_start":1,"column_end":33}},{"value":"/                 b\"tag1\" => println!(\"attributes values: {:?}\",","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":60521,"byte_end":60587,"line_start":50,"line_end":50,"column_start":1,"column_end":67}},{"value":"/                                     e.attributes().map(|a| a.unwrap().value)","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":60588,"byte_end":60668,"line_start":51,"line_end":51,"column_start":1,"column_end":81}},{"value":"/                                     .collect::<Vec<_>>()),","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":60669,"byte_end":60731,"line_start":52,"line_end":52,"column_start":1,"column_end":63}},{"value":"/                 b\"tag2\" => count += 1,","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":60732,"byte_end":60774,"line_start":53,"line_end":53,"column_start":1,"column_end":43}},{"value":"/                 _ => (),","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":60775,"byte_end":60803,"line_start":54,"line_end":54,"column_start":1,"column_end":29}},{"value":"/             }","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":60804,"byte_end":60821,"line_start":55,"line_end":55,"column_start":1,"column_end":18}},{"value":"/         },","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":60822,"byte_end":60836,"line_start":56,"line_end":56,"column_start":1,"column_end":15}},{"value":"/         Ok(Event::Text(e)) => txt.push(e.unescape_and_decode(&reader).unwrap()),","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":60837,"byte_end":60921,"line_start":57,"line_end":57,"column_start":1,"column_end":85}},{"value":"/         Err(e) => panic!(\"Error at position {}: {:?}\", reader.buffer_position(), e),","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":60922,"byte_end":61010,"line_start":58,"line_end":58,"column_start":1,"column_end":89}},{"value":"/         Ok(Event::Eof) => break,","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":61011,"byte_end":61047,"line_start":59,"line_end":59,"column_start":1,"column_end":37}},{"value":"/         _ => (),","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":61048,"byte_end":61068,"line_start":60,"line_end":60,"column_start":1,"column_end":21}},{"value":"/     }","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":61069,"byte_end":61078,"line_start":61,"line_end":61,"column_start":1,"column_end":10}},{"value":"/     buf.clear();","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":61079,"byte_end":61099,"line_start":62,"line_end":62,"column_start":1,"column_end":21}},{"value":"/ }","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":61100,"byte_end":61105,"line_start":63,"line_end":63,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":61106,"byte_end":61113,"line_start":64,"line_end":64,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":236},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":62419,"byte_end":62430,"line_start":100,"line_end":100,"column_start":12,"column_end":23},"name":"from_reader","qualname":"<Reader<B>>::from_reader","value":"pub fn from_reader(B) -> Reader<B>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `Reader` that reads from a reader implementing `BufRead`.\n","sig":null,"attributes":[{"value":"/ Creates a `Reader` that reads from a reader implementing `BufRead`.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":62336,"byte_end":62407,"line_start":99,"line_end":99,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":237},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":63659,"byte_end":63680,"line_start":131,"line_end":131,"column_start":12,"column_end":33},"name":"expand_empty_elements","qualname":"<Reader<B>>::expand_empty_elements","value":"pub fn expand_empty_elements(&mut Self, bool) -> &mut Reader<B>","parent":null,"children":[],"decl_id":null,"docs":" Changes whether empty elements should be split into an `Open` and a `Close` event.","sig":null,"attributes":[{"value":"/ Changes whether empty elements should be split into an `Open` and a `Close` event.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":63076,"byte_end":63162,"line_start":120,"line_end":120,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":63167,"byte_end":63170,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ When set to `true`, all [`Empty`] events produced by a self-closing tag like `<tag/>` are","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":63175,"byte_end":63268,"line_start":122,"line_end":122,"column_start":5,"column_end":98}},{"value":"/ expanded into a [`Start`] event followed by a [`End`] event. When set to `false` (the","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":63273,"byte_end":63362,"line_start":123,"line_end":123,"column_start":5,"column_end":94}},{"value":"/ default), those tags are represented by an [`Empty`] event instead.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":63367,"byte_end":63438,"line_start":124,"line_end":124,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":63443,"byte_end":63446,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ (`false` by default)","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":63451,"byte_end":63475,"line_start":126,"line_end":126,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":63480,"byte_end":63483,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ [`Empty`]: events/enum.Event.html#variant.Empty","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":63488,"byte_end":63539,"line_start":128,"line_end":128,"column_start":5,"column_end":56}},{"value":"/ [`Start`]: events/enum.Event.html#variant.Start","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":63544,"byte_end":63595,"line_start":129,"line_end":129,"column_start":5,"column_end":56}},{"value":"/ [`End`]: events/enum.Event.html#variant.End","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":63600,"byte_end":63647,"line_start":130,"line_end":130,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":238},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":64102,"byte_end":64111,"line_start":144,"line_end":144,"column_start":12,"column_end":21},"name":"trim_text","qualname":"<Reader<B>>::trim_text","value":"pub fn trim_text(&mut Self, bool) -> &mut Reader<B>","parent":null,"children":[],"decl_id":null,"docs":" Changes whether whitespace before and after character data should be removed.","sig":null,"attributes":[{"value":"/ Changes whether whitespace before and after character data should be removed.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":63789,"byte_end":63870,"line_start":136,"line_end":136,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":63875,"byte_end":63878,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ When set to `true`, all [`Text`] events are trimmed. If they are empty, no event will be","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":63883,"byte_end":63975,"line_start":138,"line_end":138,"column_start":5,"column_end":97}},{"value":"/ pushed.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":63980,"byte_end":63991,"line_start":139,"line_end":139,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":63996,"byte_end":63999,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ (`false` by default)","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":64004,"byte_end":64028,"line_start":141,"line_end":141,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":64033,"byte_end":64036,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ [`Text`]: events/enum.Event.html#variant.Text","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":64041,"byte_end":64090,"line_start":143,"line_end":143,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":239},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":64719,"byte_end":64752,"line_start":160,"line_end":160,"column_start":12,"column_end":45},"name":"trim_markup_names_in_closing_tags","qualname":"<Reader<B>>::trim_markup_names_in_closing_tags","value":"pub fn trim_markup_names_in_closing_tags(&mut Self, bool) -> &mut Reader<B>","parent":null,"children":[],"decl_id":null,"docs":" Changes wether trailing whitespaces after the markup name are trimmed in closing tags\n `</a >`.","sig":null,"attributes":[{"value":"/ Changes wether trailing whitespaces after the markup name are trimmed in closing tags","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":64208,"byte_end":64297,"line_start":149,"line_end":149,"column_start":5,"column_end":94}},{"value":"/ `</a >`.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":64302,"byte_end":64314,"line_start":150,"line_end":150,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":64319,"byte_end":64322,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ If true the emitted [`End`] event is stripped of trailing whitespace after the markup name.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":64327,"byte_end":64422,"line_start":152,"line_end":152,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":64427,"byte_end":64430,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ Note that if set to `false` and `check_end_names` is true the comparison of markup names is","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":64435,"byte_end":64530,"line_start":154,"line_end":154,"column_start":5,"column_end":100}},{"value":"/ going to fail erronously if a closing tag contains trailing whitespaces.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":64535,"byte_end":64611,"line_start":155,"line_end":155,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":64616,"byte_end":64619,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ (`true` by default)","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":64624,"byte_end":64647,"line_start":157,"line_end":157,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":64652,"byte_end":64655,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ [`End`]: events/enum.Event.html#variant.End","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":64660,"byte_end":64707,"line_start":159,"line_end":159,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":240},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":65477,"byte_end":65492,"line_start":178,"line_end":178,"column_start":12,"column_end":27},"name":"check_end_names","qualname":"<Reader<B>>::check_end_names","value":"pub fn check_end_names(&mut Self, bool) -> &mut Reader<B>","parent":null,"children":[],"decl_id":null,"docs":" Changes whether mismatched closing tag names should be detected.","sig":null,"attributes":[{"value":"/ Changes whether mismatched closing tag names should be detected.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":64873,"byte_end":64941,"line_start":165,"line_end":165,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":64946,"byte_end":64949,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ When set to `false`, it won't check if a closing tag matches the corresponding opening tag.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":64954,"byte_end":65049,"line_start":167,"line_end":167,"column_start":5,"column_end":100}},{"value":"/ For example, `<mytag></different_tag>` will be permitted.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":65054,"byte_end":65115,"line_start":168,"line_end":168,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":65120,"byte_end":65123,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ If the XML is known to be sane (already processed, etc.) this saves extra time.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":65128,"byte_end":65211,"line_start":170,"line_end":170,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":65216,"byte_end":65219,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ Note that the emitted [`End`] event will not be modified if this is disabled, ie. it will","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":65224,"byte_end":65317,"line_start":172,"line_end":172,"column_start":5,"column_end":98}},{"value":"/ contain the data of the mismatched end tag.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":65322,"byte_end":65369,"line_start":173,"line_end":173,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":65374,"byte_end":65377,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ (`true` by default)","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":65382,"byte_end":65405,"line_start":175,"line_end":175,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":65410,"byte_end":65413,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ [`End`]: events/enum.Event.html#variant.End","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":65418,"byte_end":65465,"line_start":177,"line_end":177,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":241},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":66080,"byte_end":66094,"line_start":193,"line_end":193,"column_start":12,"column_end":26},"name":"check_comments","qualname":"<Reader<B>>::check_comments","value":"pub fn check_comments(&mut Self, bool) -> &mut Reader<B>","parent":null,"children":[],"decl_id":null,"docs":" Changes whether comments should be validated.","sig":null,"attributes":[{"value":"/ Changes whether comments should be validated.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":65595,"byte_end":65644,"line_start":183,"line_end":183,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":65649,"byte_end":65652,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ When set to `true`, every [`Comment`] event will be checked for not containing `--`, which","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":65657,"byte_end":65751,"line_start":185,"line_end":185,"column_start":5,"column_end":99}},{"value":"/ is not allowed in XML comments. Most of the time we don't want comments at all so we don't","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":65756,"byte_end":65850,"line_start":186,"line_end":186,"column_start":5,"column_end":99}},{"value":"/ really care about comment correctness, thus the default value is `false` to improve","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":65855,"byte_end":65942,"line_start":187,"line_end":187,"column_start":5,"column_end":92}},{"value":"/ performance.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":65947,"byte_end":65963,"line_start":188,"line_end":188,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":65968,"byte_end":65971,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ (`false` by default)","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":65976,"byte_end":66000,"line_start":190,"line_end":190,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":66005,"byte_end":66008,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ [`Comment`]: events/enum.Event.html#variant.Comment","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":66013,"byte_end":66068,"line_start":192,"line_end":192,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":242},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":66307,"byte_end":66322,"line_start":201,"line_end":201,"column_start":12,"column_end":27},"name":"buffer_position","qualname":"<Reader<B>>::buffer_position","value":"pub fn buffer_position(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Gets the current byte position in the input data.","sig":null,"attributes":[{"value":"/ Gets the current byte position in the input data.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":66196,"byte_end":66249,"line_start":198,"line_end":198,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":66254,"byte_end":66257,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ Useful when debugging errors.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":66262,"byte_end":66295,"line_start":200,"line_end":200,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":272},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":79936,"byte_end":79946,"line_start":525,"line_end":525,"column_start":12,"column_end":22},"name":"read_event","qualname":"<Reader<B>>::read_event","value":"pub fn read_event<'a, 'b>(&'a mut Self, &'b mut Vec<u8>) -> Result<Event>","parent":null,"children":[],"decl_id":null,"docs":" Reads the next `Event`.","sig":null,"attributes":[{"value":"/ Reads the next `Event`.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":78253,"byte_end":78280,"line_start":482,"line_end":482,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":78285,"byte_end":78288,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ This is the main entry point for reading XML `Event`s.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":78293,"byte_end":78351,"line_start":484,"line_end":484,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":78356,"byte_end":78359,"line_start":485,"line_end":485,"column_start":5,"column_end":8}},{"value":"/ `Event`s borrow `buf` and can be converted to own their data if needed (uses `Cow`","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":78364,"byte_end":78450,"line_start":486,"line_end":486,"column_start":5,"column_end":91}},{"value":"/ internally).","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":78455,"byte_end":78471,"line_start":487,"line_end":487,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":78476,"byte_end":78479,"line_start":488,"line_end":488,"column_start":5,"column_end":8}},{"value":"/ Having the possibility to control the internal buffers gives you some additional benefits","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":78484,"byte_end":78577,"line_start":489,"line_end":489,"column_start":5,"column_end":98}},{"value":"/ such as:","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":78582,"byte_end":78594,"line_start":490,"line_end":490,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":78599,"byte_end":78602,"line_start":491,"line_end":491,"column_start":5,"column_end":8}},{"value":"/ - Reduce the number of allocations by reusing the same buffer. For constrained systems,","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":78607,"byte_end":78698,"line_start":492,"line_end":492,"column_start":5,"column_end":96}},{"value":"/   you can call `buf.clear()` once you are done with processing the event (typically at the","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":78703,"byte_end":78797,"line_start":493,"line_end":493,"column_start":5,"column_end":99}},{"value":"/   end of your loop).","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":78802,"byte_end":78826,"line_start":494,"line_end":494,"column_start":5,"column_end":29}},{"value":"/ - Reserve the buffer length if you know the file size (using `Vec::with_capacity`).","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":78831,"byte_end":78918,"line_start":495,"line_end":495,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":78923,"byte_end":78926,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":78931,"byte_end":78945,"line_start":497,"line_end":497,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":78950,"byte_end":78953,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":78958,"byte_end":78965,"line_start":499,"line_end":499,"column_start":5,"column_end":12}},{"value":"/ use quick_xml::Reader;","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":78970,"byte_end":78996,"line_start":500,"line_end":500,"column_start":5,"column_end":31}},{"value":"/ use quick_xml::events::Event;","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":79001,"byte_end":79034,"line_start":501,"line_end":501,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":79039,"byte_end":79042,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/ let xml = r#\"<tag1 att1 = \"test\">","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":79047,"byte_end":79084,"line_start":503,"line_end":503,"column_start":5,"column_end":42}},{"value":"/                 <tag2><!--Test comment-->Test</tag2>","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":79089,"byte_end":79145,"line_start":504,"line_end":504,"column_start":5,"column_end":61}},{"value":"/                 <tag2>Test 2</tag2>","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":79150,"byte_end":79189,"line_start":505,"line_end":505,"column_start":5,"column_end":44}},{"value":"/             </tag1>\"#;","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":79194,"byte_end":79220,"line_start":506,"line_end":506,"column_start":5,"column_end":31}},{"value":"/ let mut reader = Reader::from_str(xml);","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":79225,"byte_end":79268,"line_start":507,"line_end":507,"column_start":5,"column_end":48}},{"value":"/ reader.trim_text(true);","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":79273,"byte_end":79300,"line_start":508,"line_end":508,"column_start":5,"column_end":32}},{"value":"/ let mut count = 0;","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":79305,"byte_end":79327,"line_start":509,"line_end":509,"column_start":5,"column_end":27}},{"value":"/ let mut buf = Vec::new();","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":79332,"byte_end":79361,"line_start":510,"line_end":510,"column_start":5,"column_end":34}},{"value":"/ let mut txt = Vec::new();","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":79366,"byte_end":79395,"line_start":511,"line_end":511,"column_start":5,"column_end":34}},{"value":"/ loop {","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":79400,"byte_end":79410,"line_start":512,"line_end":512,"column_start":5,"column_end":15}},{"value":"/     match reader.read_event(&mut buf) {","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":79415,"byte_end":79458,"line_start":513,"line_end":513,"column_start":5,"column_end":48}},{"value":"/         Ok(Event::Start(ref e)) => count += 1,","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":79463,"byte_end":79513,"line_start":514,"line_end":514,"column_start":5,"column_end":55}},{"value":"/         Ok(Event::Text(e)) => txt.push(e.unescape_and_decode(&reader).expect(\"Error!\")),","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":79518,"byte_end":79610,"line_start":515,"line_end":515,"column_start":5,"column_end":97}},{"value":"/         Err(e) => panic!(\"Error at position {}: {:?}\", reader.buffer_position(), e),","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":79615,"byte_end":79703,"line_start":516,"line_end":516,"column_start":5,"column_end":93}},{"value":"/         Ok(Event::Eof) => break,","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":79708,"byte_end":79744,"line_start":517,"line_end":517,"column_start":5,"column_end":41}},{"value":"/         _ => (),","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":79749,"byte_end":79769,"line_start":518,"line_end":518,"column_start":5,"column_end":25}},{"value":"/     }","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":79774,"byte_end":79783,"line_start":519,"line_end":519,"column_start":5,"column_end":14}},{"value":"/     buf.clear();","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":79788,"byte_end":79808,"line_start":520,"line_end":520,"column_start":5,"column_end":25}},{"value":"/ }","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":79813,"byte_end":79818,"line_start":521,"line_end":521,"column_start":5,"column_end":10}},{"value":"/ println!(\"Found {} start events\", count);","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":79823,"byte_end":79868,"line_start":522,"line_end":522,"column_start":5,"column_end":50}},{"value":"/ println!(\"Text events: {:?}\", txt);","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":79873,"byte_end":79912,"line_start":523,"line_end":523,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":79917,"byte_end":79924,"line_start":524,"line_end":524,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":275},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":80918,"byte_end":80933,"line_start":547,"line_end":547,"column_start":12,"column_end":27},"name":"event_namespace","qualname":"<Reader<B>>::event_namespace","value":"pub fn event_namespace<'a, 'b, 'c>(&'a Self, &'b [u8], &'c [u8])\n-> (Option<&'c [u8]>, &'b [u8])","parent":null,"children":[],"decl_id":null,"docs":" Resolves a potentially qualified **event name** into (namespace name, local name).","sig":null,"attributes":[{"value":"/ Resolves a potentially qualified **event name** into (namespace name, local name).","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":80449,"byte_end":80535,"line_start":539,"line_end":539,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":80540,"byte_end":80543,"line_start":540,"line_end":540,"column_start":5,"column_end":8}},{"value":"/ *Qualified* attribute names have the form `prefix:local-name` where the`prefix` is defined","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":80548,"byte_end":80642,"line_start":541,"line_end":541,"column_start":5,"column_end":99}},{"value":"/ on any containing XML element via `xmlns:prefix=\"the:namespace:uri\"`. The namespace prefix","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":80647,"byte_end":80741,"line_start":542,"line_end":542,"column_start":5,"column_end":99}},{"value":"/ can be defined on the same element as the attribute in question.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":80746,"byte_end":80814,"line_start":543,"line_end":543,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":80819,"byte_end":80822,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/ *Unqualified* event inherits the current *default namespace*.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":80827,"byte_end":80892,"line_start":545,"line_end":545,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":80897,"byte_end":80906,"line_start":546,"line_end":546,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":279},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":81653,"byte_end":81672,"line_start":564,"line_end":564,"column_start":12,"column_end":31},"name":"attribute_namespace","qualname":"<Reader<B>>::attribute_namespace","value":"pub fn attribute_namespace<'a, 'b, 'c>(&'a Self, &'b [u8], &'c [u8])\n-> (Option<&'c [u8]>, &'b [u8])","parent":null,"children":[],"decl_id":null,"docs":" Resolves a potentially qualified **attribute name** into (namespace name, local name).","sig":null,"attributes":[{"value":"/ Resolves a potentially qualified **attribute name** into (namespace name, local name).","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":81162,"byte_end":81252,"line_start":556,"line_end":556,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":81257,"byte_end":81260,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ *Qualified* attribute names have the form `prefix:local-name` where the`prefix` is defined","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":81265,"byte_end":81359,"line_start":558,"line_end":558,"column_start":5,"column_end":99}},{"value":"/ on any containing XML element via `xmlns:prefix=\"the:namespace:uri\"`. The namespace prefix","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":81364,"byte_end":81458,"line_start":559,"line_end":559,"column_start":5,"column_end":99}},{"value":"/ can be defined on the same element as the attribute in question.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":81463,"byte_end":81531,"line_start":560,"line_end":560,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":81536,"byte_end":81539,"line_start":561,"line_end":561,"column_start":5,"column_end":8}},{"value":"/ *Unqualified* attribute names do *not* inherit the current *default namespace*.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":81544,"byte_end":81627,"line_start":562,"line_end":562,"column_start":5,"column_end":88}},{"value":"inline","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":81632,"byte_end":81641,"line_start":563,"line_end":563,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":283},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":83600,"byte_end":83621,"line_start":615,"line_end":615,"column_start":12,"column_end":33},"name":"read_namespaced_event","qualname":"<Reader<B>>::read_namespaced_event","value":"pub fn read_namespaced_event<'a, 'b,\n                             'c>(&'a mut Self, &'b mut Vec<u8>,\n                                 &'c mut Vec<u8>)\n-> Result<(Option<&'c [u8]>, Event)>","parent":null,"children":[],"decl_id":null,"docs":" Reads the next event and resolves its namespace (if applicable).","sig":null,"attributes":[{"value":"/ Reads the next event and resolves its namespace (if applicable).","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":81902,"byte_end":81970,"line_start":573,"line_end":573,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":81975,"byte_end":81978,"line_start":574,"line_end":574,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":81983,"byte_end":81997,"line_start":575,"line_end":575,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":82002,"byte_end":82005,"line_start":576,"line_end":576,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":82010,"byte_end":82017,"line_start":577,"line_end":577,"column_start":5,"column_end":12}},{"value":"/ use std::str::from_utf8;","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":82022,"byte_end":82050,"line_start":578,"line_end":578,"column_start":5,"column_end":33}},{"value":"/ use quick_xml::Reader;","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":82055,"byte_end":82081,"line_start":579,"line_end":579,"column_start":5,"column_end":31}},{"value":"/ use quick_xml::events::Event;","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":82086,"byte_end":82119,"line_start":580,"line_end":580,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":82124,"byte_end":82127,"line_start":581,"line_end":581,"column_start":5,"column_end":8}},{"value":"/ let xml = r#\"<x:tag1 xmlns:x=\"www.xxxx\" xmlns:y=\"www.yyyy\" att1 = \"test\">","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":82132,"byte_end":82209,"line_start":582,"line_end":582,"column_start":5,"column_end":82}},{"value":"/                 <y:tag2><!--Test comment-->Test</y:tag2>","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":82214,"byte_end":82274,"line_start":583,"line_end":583,"column_start":5,"column_end":65}},{"value":"/                 <y:tag2>Test 2</y:tag2>","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":82279,"byte_end":82322,"line_start":584,"line_end":584,"column_start":5,"column_end":48}},{"value":"/             </x:tag1>\"#;","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":82327,"byte_end":82355,"line_start":585,"line_end":585,"column_start":5,"column_end":33}},{"value":"/ let mut reader = Reader::from_str(xml);","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":82360,"byte_end":82403,"line_start":586,"line_end":586,"column_start":5,"column_end":48}},{"value":"/ reader.trim_text(true);","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":82408,"byte_end":82435,"line_start":587,"line_end":587,"column_start":5,"column_end":32}},{"value":"/ let mut count = 0;","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":82440,"byte_end":82462,"line_start":588,"line_end":588,"column_start":5,"column_end":27}},{"value":"/ let mut buf = Vec::new();","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":82467,"byte_end":82496,"line_start":589,"line_end":589,"column_start":5,"column_end":34}},{"value":"/ let mut ns_buf = Vec::new();","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":82501,"byte_end":82533,"line_start":590,"line_end":590,"column_start":5,"column_end":37}},{"value":"/ let mut txt = Vec::new();","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":82538,"byte_end":82567,"line_start":591,"line_end":591,"column_start":5,"column_end":34}},{"value":"/ loop {","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":82572,"byte_end":82582,"line_start":592,"line_end":592,"column_start":5,"column_end":15}},{"value":"/     match reader.read_namespaced_event(&mut buf, &mut ns_buf) {","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":82587,"byte_end":82654,"line_start":593,"line_end":593,"column_start":5,"column_end":72}},{"value":"/         Ok((ref ns, Event::Start(ref e))) => {","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":82659,"byte_end":82709,"line_start":594,"line_end":594,"column_start":5,"column_end":55}},{"value":"/             count += 1;","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":82714,"byte_end":82741,"line_start":595,"line_end":595,"column_start":5,"column_end":32}},{"value":"/             match (*ns, e.local_name()) {","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":82746,"byte_end":82791,"line_start":596,"line_end":596,"column_start":5,"column_end":50}},{"value":"/                 (Some(b\"www.xxxx\"), b\"tag1\") => (),","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":82796,"byte_end":82851,"line_start":597,"line_end":597,"column_start":5,"column_end":60}},{"value":"/                 (Some(b\"www.yyyy\"), b\"tag2\") => (),","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":82856,"byte_end":82911,"line_start":598,"line_end":598,"column_start":5,"column_end":60}},{"value":"/                 (ns, n) => panic!(\"Namespace and local name mismatch\"),","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":82916,"byte_end":82991,"line_start":599,"line_end":599,"column_start":5,"column_end":80}},{"value":"/             }","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":82996,"byte_end":83013,"line_start":600,"line_end":600,"column_start":5,"column_end":22}},{"value":"/             println!(\"Resolved namespace: {:?}\", ns.and_then(|ns| from_utf8(ns).ok()));","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":83018,"byte_end":83109,"line_start":601,"line_end":601,"column_start":5,"column_end":96}},{"value":"/         }","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":83114,"byte_end":83127,"line_start":602,"line_end":602,"column_start":5,"column_end":18}},{"value":"/         Ok((_, Event::Text(e))) => {","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":83132,"byte_end":83172,"line_start":603,"line_end":603,"column_start":5,"column_end":45}},{"value":"/             txt.push(e.unescape_and_decode(&reader).expect(\"Error!\"))","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":83177,"byte_end":83250,"line_start":604,"line_end":604,"column_start":5,"column_end":78}},{"value":"/         },","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":83255,"byte_end":83269,"line_start":605,"line_end":605,"column_start":5,"column_end":19}},{"value":"/         Err(e) => panic!(\"Error at position {}: {:?}\", reader.buffer_position(), e),","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":83274,"byte_end":83362,"line_start":606,"line_end":606,"column_start":5,"column_end":93}},{"value":"/         Ok((_, Event::Eof)) => break,","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":83367,"byte_end":83408,"line_start":607,"line_end":607,"column_start":5,"column_end":46}},{"value":"/         _ => (),","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":83413,"byte_end":83433,"line_start":608,"line_end":608,"column_start":5,"column_end":25}},{"value":"/     }","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":83438,"byte_end":83447,"line_start":609,"line_end":609,"column_start":5,"column_end":14}},{"value":"/     buf.clear();","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":83452,"byte_end":83472,"line_start":610,"line_end":610,"column_start":5,"column_end":25}},{"value":"/ }","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":83477,"byte_end":83482,"line_start":611,"line_end":611,"column_start":5,"column_end":10}},{"value":"/ println!(\"Found {} start events\", count);","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":83487,"byte_end":83532,"line_start":612,"line_end":612,"column_start":5,"column_end":50}},{"value":"/ println!(\"Text events: {:?}\", txt);","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":83537,"byte_end":83576,"line_start":613,"line_end":613,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":83581,"byte_end":83588,"line_start":614,"line_end":614,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":287},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":86833,"byte_end":86851,"line_start":696,"line_end":696,"column_start":12,"column_end":30},"name":"decode_without_bom","qualname":"<Reader<B>>::decode_without_bom","value":"pub fn decode_without_bom<'c>(&Self, &'c [u8]) -> Result<&'c str>","parent":null,"children":[],"decl_id":null,"docs":" Decodes a UTF8 slice without BOM (Byte order mark) regardless of XML declaration.","sig":null,"attributes":[{"value":"/ Decodes a UTF8 slice without BOM (Byte order mark) regardless of XML declaration.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":86438,"byte_end":86523,"line_start":686,"line_end":686,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":86528,"byte_end":86531,"line_start":687,"line_end":687,"column_start":5,"column_end":8}},{"value":"/ Decode `bytes` without BOM and with malformed sequences replaced with the","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":86536,"byte_end":86613,"line_start":688,"line_end":688,"column_start":5,"column_end":82}},{"value":"/ `U+FFFD REPLACEMENT CHARACTER`.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":86618,"byte_end":86653,"line_start":689,"line_end":689,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":86658,"byte_end":86661,"line_start":690,"line_end":690,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":86666,"byte_end":86676,"line_start":691,"line_end":691,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":86681,"byte_end":86684,"line_start":692,"line_end":692,"column_start":5,"column_end":8}},{"value":"/ If you instead want to use XML declared encoding, use the `encoding` feature","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":86689,"byte_end":86769,"line_start":693,"line_end":693,"column_start":5,"column_end":85}},{"value":"inline","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":86774,"byte_end":86783,"line_start":694,"line_end":694,"column_start":5,"column_end":14}},{"value":"cfg(not(feature = \"encoding\"))","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":86788,"byte_end":86821,"line_start":695,"line_end":695,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":289},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":88539,"byte_end":88545,"line_start":741,"line_end":741,"column_start":12,"column_end":18},"name":"decode","qualname":"<Reader<B>>::decode","value":"pub fn decode<'c>(&Self, &'c [u8]) -> Result<&'c str>","parent":null,"children":[],"decl_id":null,"docs":" Decodes a UTF8 slice regardless of XML declaration.","sig":null,"attributes":[{"value":"/ Decodes a UTF8 slice regardless of XML declaration.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":88168,"byte_end":88223,"line_start":731,"line_end":731,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":88228,"byte_end":88231,"line_start":732,"line_end":732,"column_start":5,"column_end":8}},{"value":"/ Decode `bytes` with BOM sniffing and with malformed sequences replaced with the","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":88236,"byte_end":88319,"line_start":733,"line_end":733,"column_start":5,"column_end":88}},{"value":"/ `U+FFFD REPLACEMENT CHARACTER`.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":88324,"byte_end":88359,"line_start":734,"line_end":734,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":88364,"byte_end":88367,"line_start":735,"line_end":735,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":88372,"byte_end":88382,"line_start":736,"line_end":736,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":88387,"byte_end":88390,"line_start":737,"line_end":737,"column_start":5,"column_end":8}},{"value":"/ If you instead want to use XML declared encoding, use the `encoding` feature","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":88395,"byte_end":88475,"line_start":738,"line_end":738,"column_start":5,"column_end":85}},{"value":"inline","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":88480,"byte_end":88489,"line_start":739,"line_end":739,"column_start":5,"column_end":14}},{"value":"cfg(not(feature = \"encoding\"))","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":88494,"byte_end":88527,"line_start":740,"line_end":740,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":291},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":88891,"byte_end":88898,"line_start":755,"line_end":755,"column_start":12,"column_end":19},"name":"decoder","qualname":"<Reader<B>>::decoder","value":"pub fn decoder(&Self) -> Decoder","parent":null,"children":[],"decl_id":null,"docs":" Get utf8 decoder\n","sig":null,"attributes":[{"value":"/ Get utf8 decoder","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":88821,"byte_end":88841,"line_start":753,"line_end":753,"column_start":5,"column_end":25}},{"value":"cfg(not(feature = \"encoding\"))","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":88846,"byte_end":88879,"line_start":754,"line_end":754,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":292},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":89082,"byte_end":89093,"line_start":762,"line_end":762,"column_start":12,"column_end":23},"name":"read_to_end","qualname":"<Reader<B>>::read_to_end","value":"pub fn read_to_end<K: AsRef<[u8]>>(&mut Self, K, &mut Vec<u8>) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Reads until end element is found","sig":null,"attributes":[{"value":"/ Reads until end element is found","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":88946,"byte_end":88982,"line_start":759,"line_end":759,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":88987,"byte_end":88990,"line_start":760,"line_end":760,"column_start":5,"column_end":8}},{"value":"/ Manages nested cases where parent and child elements have the same name","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":88995,"byte_end":89070,"line_start":761,"line_end":761,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":294},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":91046,"byte_end":91055,"line_start":818,"line_end":818,"column_start":12,"column_end":21},"name":"read_text","qualname":"<Reader<B>>::read_text","value":"pub fn read_text<K: AsRef<[u8]>>(&mut Self, K, &mut Vec<u8>) -> Result<String>","parent":null,"children":[],"decl_id":null,"docs":" Reads optional text between start and end tags.","sig":null,"attributes":[{"value":"/ Reads optional text between start and end tags.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":89832,"byte_end":89883,"line_start":784,"line_end":784,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":89888,"byte_end":89891,"line_start":785,"line_end":785,"column_start":5,"column_end":8}},{"value":"/ If the next event is a [`Text`] event, returns the decoded and unescaped content as a","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":89896,"byte_end":89985,"line_start":786,"line_end":786,"column_start":5,"column_end":94}},{"value":"/ `String`. If the next event is an [`End`] event, returns the empty string. In all other","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":89990,"byte_end":90081,"line_start":787,"line_end":787,"column_start":5,"column_end":96}},{"value":"/ cases, returns an error.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":90086,"byte_end":90114,"line_start":788,"line_end":788,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":90119,"byte_end":90122,"line_start":789,"line_end":789,"column_start":5,"column_end":8}},{"value":"/ Any text will be decoded using the XML encoding specified in the XML declaration (or UTF-8","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":90127,"byte_end":90221,"line_start":790,"line_end":790,"column_start":5,"column_end":99}},{"value":"/ if none is specified).","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":90226,"byte_end":90252,"line_start":791,"line_end":791,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":90257,"byte_end":90260,"line_start":792,"line_end":792,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":90265,"byte_end":90279,"line_start":793,"line_end":793,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":90284,"byte_end":90287,"line_start":794,"line_end":794,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":90292,"byte_end":90299,"line_start":795,"line_end":795,"column_start":5,"column_end":12}},{"value":"/ use quick_xml::Reader;","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":90304,"byte_end":90330,"line_start":796,"line_end":796,"column_start":5,"column_end":31}},{"value":"/ use quick_xml::events::Event;","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":90335,"byte_end":90368,"line_start":797,"line_end":797,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":90373,"byte_end":90376,"line_start":798,"line_end":798,"column_start":5,"column_end":8}},{"value":"/ let mut xml = Reader::from_reader(b\"","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":90381,"byte_end":90421,"line_start":799,"line_end":799,"column_start":5,"column_end":45}},{"value":"/     <a>&lt;b&gt;</a>","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":90426,"byte_end":90450,"line_start":800,"line_end":800,"column_start":5,"column_end":29}},{"value":"/     <a></a>","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":90455,"byte_end":90470,"line_start":801,"line_end":801,"column_start":5,"column_end":20}},{"value":"/ \" as &[u8]);","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":90475,"byte_end":90491,"line_start":802,"line_end":802,"column_start":5,"column_end":21}},{"value":"/ xml.trim_text(true);","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":90496,"byte_end":90520,"line_start":803,"line_end":803,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":90525,"byte_end":90528,"line_start":804,"line_end":804,"column_start":5,"column_end":8}},{"value":"/ let expected = [\"<b>\", \"\"];","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":90533,"byte_end":90564,"line_start":805,"line_end":805,"column_start":5,"column_end":36}},{"value":"/ for &content in expected.iter() {","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":90569,"byte_end":90606,"line_start":806,"line_end":806,"column_start":5,"column_end":42}},{"value":"/     match xml.read_event(&mut Vec::new()) {","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":90611,"byte_end":90658,"line_start":807,"line_end":807,"column_start":5,"column_end":52}},{"value":"/         Ok(Event::Start(ref e)) => {","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":90663,"byte_end":90703,"line_start":808,"line_end":808,"column_start":5,"column_end":45}},{"value":"/             assert_eq!(&xml.read_text(e.name(), &mut Vec::new()).unwrap(), content);","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":90708,"byte_end":90796,"line_start":809,"line_end":809,"column_start":5,"column_end":93}},{"value":"/         },","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":90801,"byte_end":90815,"line_start":810,"line_end":810,"column_start":5,"column_end":19}},{"value":"/         e => panic!(\"Expecting Start event, found {:?}\", e),","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":90820,"byte_end":90884,"line_start":811,"line_end":811,"column_start":5,"column_end":69}},{"value":"/     }","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":90889,"byte_end":90898,"line_start":812,"line_end":812,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":90903,"byte_end":90908,"line_start":813,"line_end":813,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":90913,"byte_end":90920,"line_start":814,"line_end":814,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":90925,"byte_end":90928,"line_start":815,"line_end":815,"column_start":5,"column_end":8}},{"value":"/ [`Text`]: events/enum.Event.html#variant.Text","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":90933,"byte_end":90982,"line_start":816,"line_end":816,"column_start":5,"column_end":54}},{"value":"/ [`End`]: events/enum.Event.html#variant.End","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":90987,"byte_end":91034,"line_start":817,"line_end":817,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":296},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":93354,"byte_end":93376,"line_start":882,"line_end":882,"column_start":12,"column_end":34},"name":"into_underlying_reader","qualname":"<Reader<B>>::into_underlying_reader","value":"pub fn into_underlying_reader(Self) -> B","parent":null,"children":[],"decl_id":null,"docs":" Consumes `Reader` returning the underlying reader","sig":null,"attributes":[{"value":"/ Consumes `Reader` returning the underlying reader","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":91570,"byte_end":91623,"line_start":830,"line_end":830,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":91628,"byte_end":91631,"line_start":831,"line_end":831,"column_start":5,"column_end":8}},{"value":"/ Can be used to compute line and column of a parsing error position","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":91636,"byte_end":91706,"line_start":832,"line_end":832,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":91711,"byte_end":91714,"line_start":833,"line_end":833,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":91719,"byte_end":91733,"line_start":834,"line_end":834,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":91738,"byte_end":91741,"line_start":835,"line_end":835,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":91746,"byte_end":91753,"line_start":836,"line_end":836,"column_start":5,"column_end":12}},{"value":"/ use std::{str, io::Cursor};","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":91758,"byte_end":91789,"line_start":837,"line_end":837,"column_start":5,"column_end":36}},{"value":"/ use quick_xml::Reader;","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":91794,"byte_end":91820,"line_start":838,"line_end":838,"column_start":5,"column_end":31}},{"value":"/ use quick_xml::events::Event;","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":91825,"byte_end":91858,"line_start":839,"line_end":839,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":91863,"byte_end":91866,"line_start":840,"line_end":840,"column_start":5,"column_end":8}},{"value":"/ let xml = r#\"<tag1 att1 = \"test\">","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":91871,"byte_end":91908,"line_start":841,"line_end":841,"column_start":5,"column_end":42}},{"value":"/                 <tag2><!--Test comment-->Test</tag2>","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":91913,"byte_end":91969,"line_start":842,"line_end":842,"column_start":5,"column_end":61}},{"value":"/                 <tag3>Test 2</tag3>","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":91974,"byte_end":92013,"line_start":843,"line_end":843,"column_start":5,"column_end":44}},{"value":"/             </tag1>\"#;","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":92018,"byte_end":92044,"line_start":844,"line_end":844,"column_start":5,"column_end":31}},{"value":"/ let mut reader = Reader::from_reader(Cursor::new(xml.as_bytes()));","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":92049,"byte_end":92119,"line_start":845,"line_end":845,"column_start":5,"column_end":75}},{"value":"/ let mut buf = Vec::new();","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":92124,"byte_end":92153,"line_start":846,"line_end":846,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":92158,"byte_end":92161,"line_start":847,"line_end":847,"column_start":5,"column_end":8}},{"value":"/ fn into_line_and_column(reader: Reader<Cursor<&[u8]>>) -> (usize, usize) {","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":92166,"byte_end":92244,"line_start":848,"line_end":848,"column_start":5,"column_end":83}},{"value":"/     let end_pos = reader.buffer_position();","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":92249,"byte_end":92296,"line_start":849,"line_end":849,"column_start":5,"column_end":52}},{"value":"/     let mut cursor = reader.into_underlying_reader();","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":92301,"byte_end":92358,"line_start":850,"line_end":850,"column_start":5,"column_end":62}},{"value":"/     let s = String::from_utf8(cursor.into_inner()[0..end_pos].to_owned())","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":92363,"byte_end":92440,"line_start":851,"line_end":851,"column_start":5,"column_end":82}},{"value":"/         .expect(\"can't make a string\");","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":92445,"byte_end":92488,"line_start":852,"line_end":852,"column_start":5,"column_end":48}},{"value":"/     let mut line = 1;","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":92493,"byte_end":92518,"line_start":853,"line_end":853,"column_start":5,"column_end":30}},{"value":"/     let mut column = 0;","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":92523,"byte_end":92550,"line_start":854,"line_end":854,"column_start":5,"column_end":32}},{"value":"/     for c in s.chars() {","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":92555,"byte_end":92583,"line_start":855,"line_end":855,"column_start":5,"column_end":33}},{"value":"/         if c == '\\n' {","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":92588,"byte_end":92614,"line_start":856,"line_end":856,"column_start":5,"column_end":31}},{"value":"/             line += 1;","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":92619,"byte_end":92645,"line_start":857,"line_end":857,"column_start":5,"column_end":31}},{"value":"/             column = 0;","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":92650,"byte_end":92677,"line_start":858,"line_end":858,"column_start":5,"column_end":32}},{"value":"/         } else {","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":92682,"byte_end":92702,"line_start":859,"line_end":859,"column_start":5,"column_end":25}},{"value":"/             column += 1;","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":92707,"byte_end":92735,"line_start":860,"line_end":860,"column_start":5,"column_end":33}},{"value":"/         }","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":92740,"byte_end":92753,"line_start":861,"line_end":861,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":92758,"byte_end":92767,"line_start":862,"line_end":862,"column_start":5,"column_end":14}},{"value":"/     (line, column)","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":92772,"byte_end":92794,"line_start":863,"line_end":863,"column_start":5,"column_end":27}},{"value":"/ }","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":92799,"byte_end":92804,"line_start":864,"line_end":864,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":92809,"byte_end":92812,"line_start":865,"line_end":865,"column_start":5,"column_end":8}},{"value":"/ loop {","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":92817,"byte_end":92827,"line_start":866,"line_end":866,"column_start":5,"column_end":15}},{"value":"/     match reader.read_event(&mut buf) {","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":92832,"byte_end":92875,"line_start":867,"line_end":867,"column_start":5,"column_end":48}},{"value":"/         Ok(Event::Start(ref e)) => match e.name() {","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":92880,"byte_end":92935,"line_start":868,"line_end":868,"column_start":5,"column_end":60}},{"value":"/             b\"tag1\" | b\"tag2\" => (),","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":92940,"byte_end":92980,"line_start":869,"line_end":869,"column_start":5,"column_end":45}},{"value":"/             tag => {","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":92985,"byte_end":93009,"line_start":870,"line_end":870,"column_start":5,"column_end":29}},{"value":"/                 assert_eq!(b\"tag3\", tag);","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":93014,"byte_end":93059,"line_start":871,"line_end":871,"column_start":5,"column_end":50}},{"value":"/                 assert_eq!((3, 22), into_line_and_column(reader));","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":93064,"byte_end":93134,"line_start":872,"line_end":872,"column_start":5,"column_end":75}},{"value":"/                 break;","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":93139,"byte_end":93165,"line_start":873,"line_end":873,"column_start":5,"column_end":31}},{"value":"/             }","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":93170,"byte_end":93187,"line_start":874,"line_end":874,"column_start":5,"column_end":22}},{"value":"/         },","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":93192,"byte_end":93206,"line_start":875,"line_end":875,"column_start":5,"column_end":19}},{"value":"/         Ok(Event::Eof) => unreachable!(),","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":93211,"byte_end":93256,"line_start":876,"line_end":876,"column_start":5,"column_end":50}},{"value":"/         _ => (),","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":93261,"byte_end":93281,"line_start":877,"line_end":877,"column_start":5,"column_end":25}},{"value":"/     }","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":93286,"byte_end":93295,"line_start":878,"line_end":878,"column_start":5,"column_end":14}},{"value":"/     buf.clear();","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":93300,"byte_end":93320,"line_start":879,"line_end":879,"column_start":5,"column_end":25}},{"value":"/ }","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":93325,"byte_end":93330,"line_start":880,"line_end":880,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":93335,"byte_end":93342,"line_start":881,"line_end":881,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":298},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":93509,"byte_end":93518,"line_start":889,"line_end":889,"column_start":12,"column_end":21},"name":"from_file","qualname":"<Reader<BufReader<File>>>::from_file","value":"pub fn from_file<P: AsRef<Path>>(P) -> Result<Reader<BufReader<File>>>","parent":null,"children":[],"decl_id":null,"docs":" Creates an XML reader from a file path.\n","sig":null,"attributes":[{"value":"/ Creates an XML reader from a file path.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":93454,"byte_end":93497,"line_start":888,"line_end":888,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":302},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":93820,"byte_end":93828,"line_start":898,"line_end":898,"column_start":12,"column_end":20},"name":"from_str","qualname":"<Reader<&'a [u8]>>::from_str","value":"pub fn from_str(&'a str) -> Reader<&'a [u8]>","parent":null,"children":[],"decl_id":null,"docs":" Creates an XML reader from a string slice.\n","sig":null,"attributes":[{"value":"/ Creates an XML reader from a string slice.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":93762,"byte_end":93808,"line_start":897,"line_end":897,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":571},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":104845,"byte_end":104852,"line_start":1208,"line_end":1208,"column_start":12,"column_end":19},"name":"Decoder","qualname":"::reader::Decoder","value":"","parent":null,"children":[],"decl_id":null,"docs":" Utf8 Decoder\n","sig":null,"attributes":[{"value":"/ Utf8 Decoder","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":104760,"byte_end":104776,"line_start":1205,"line_end":1205,"column_start":1,"column_end":17}},{"value":"cfg(not(feature = \"encoding\"))","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":104777,"byte_end":104810,"line_start":1206,"line_end":1206,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":332},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":105045,"byte_end":105051,"line_start":1219,"line_end":1219,"column_start":12,"column_end":18},"name":"decode","qualname":"<Decoder>::decode","value":"pub fn decode<'c>(&Self, &'c [u8]) -> Result<&'c str>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(not(feature = \"encoding\"))","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":105000,"byte_end":105033,"line_start":1218,"line_end":1218,"column_start":5,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":576},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/writer.rs","byte_start":108827,"byte_end":108833,"line_start":60,"line_end":60,"column_start":12,"column_end":18},"name":"Writer","qualname":"::writer::Writer","value":"Writer {  }","parent":null,"children":[{"krate":0,"index":578},{"krate":0,"index":579}],"decl_id":null,"docs":" XML writer.","sig":null,"attributes":[{"value":"/ XML writer.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/writer.rs","byte_start":106857,"byte_end":106872,"line_start":8,"line_end":8,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/writer.rs","byte_start":106873,"byte_end":106876,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Writes XML `Event`s to a `Write` implementor.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/writer.rs","byte_start":106877,"byte_end":106926,"line_start":10,"line_end":10,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/writer.rs","byte_start":106927,"byte_end":106930,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/writer.rs","byte_start":106931,"byte_end":106945,"line_start":12,"line_end":12,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/writer.rs","byte_start":106946,"byte_end":106949,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/writer.rs","byte_start":106950,"byte_end":106961,"line_start":14,"line_end":14,"column_start":1,"column_end":12}},{"value":"/ # extern crate quick_xml;","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/writer.rs","byte_start":106962,"byte_end":106991,"line_start":15,"line_end":15,"column_start":1,"column_end":30}},{"value":"/ # fn main() {","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/writer.rs","byte_start":106992,"byte_end":107009,"line_start":16,"line_end":16,"column_start":1,"column_end":18}},{"value":"/ use quick_xml::{Reader, Writer};","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/writer.rs","byte_start":107010,"byte_end":107046,"line_start":17,"line_end":17,"column_start":1,"column_end":37}},{"value":"/ use quick_xml::events::{Event, BytesEnd, BytesStart};","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/writer.rs","byte_start":107047,"byte_end":107104,"line_start":18,"line_end":18,"column_start":1,"column_end":58}},{"value":"/ use std::io::Cursor;","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/writer.rs","byte_start":107105,"byte_end":107129,"line_start":19,"line_end":19,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/writer.rs","byte_start":107130,"byte_end":107133,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ let xml = r#\"<this_tag k1=\"v1\" k2=\"v2\"><child>text</child></this_tag>\"#;","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/writer.rs","byte_start":107134,"byte_end":107210,"line_start":21,"line_end":21,"column_start":1,"column_end":77}},{"value":"/ let mut reader = Reader::from_str(xml);","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/writer.rs","byte_start":107211,"byte_end":107254,"line_start":22,"line_end":22,"column_start":1,"column_end":44}},{"value":"/ reader.trim_text(true);","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/writer.rs","byte_start":107255,"byte_end":107282,"line_start":23,"line_end":23,"column_start":1,"column_end":28}},{"value":"/ let mut writer = Writer::new(Cursor::new(Vec::new()));","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/writer.rs","byte_start":107283,"byte_end":107341,"line_start":24,"line_end":24,"column_start":1,"column_end":59}},{"value":"/ let mut buf = Vec::new();","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/writer.rs","byte_start":107342,"byte_end":107371,"line_start":25,"line_end":25,"column_start":1,"column_end":30}},{"value":"/ loop {","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/writer.rs","byte_start":107372,"byte_end":107382,"line_start":26,"line_end":26,"column_start":1,"column_end":11}},{"value":"/     match reader.read_event(&mut buf) {","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/writer.rs","byte_start":107383,"byte_end":107426,"line_start":27,"line_end":27,"column_start":1,"column_end":44}},{"value":"/         Ok(Event::Start(ref e)) if e.name() == b\"this_tag\" => {","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/writer.rs","byte_start":107427,"byte_end":107494,"line_start":28,"line_end":28,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/writer.rs","byte_start":107495,"byte_end":107498,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/             // crates a new element ... alternatively we could reuse `e` by calling","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/writer.rs","byte_start":107499,"byte_end":107586,"line_start":30,"line_end":30,"column_start":1,"column_end":88}},{"value":"/             // `e.into_owned()`","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/writer.rs","byte_start":107587,"byte_end":107622,"line_start":31,"line_end":31,"column_start":1,"column_end":36}},{"value":"/             let mut elem = BytesStart::owned(b\"my_elem\".to_vec(), \"my_elem\".len());","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/writer.rs","byte_start":107623,"byte_end":107710,"line_start":32,"line_end":32,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/writer.rs","byte_start":107711,"byte_end":107714,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/             // collect existing attributes","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/writer.rs","byte_start":107715,"byte_end":107761,"line_start":34,"line_end":34,"column_start":1,"column_end":47}},{"value":"/             elem.extend_attributes(e.attributes().map(|attr| attr.unwrap()));","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/writer.rs","byte_start":107762,"byte_end":107843,"line_start":35,"line_end":35,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/writer.rs","byte_start":107844,"byte_end":107847,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/             // copy existing attributes, adds a new my-key=\"some value\" attribute","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/writer.rs","byte_start":107848,"byte_end":107933,"line_start":37,"line_end":37,"column_start":1,"column_end":86}},{"value":"/             elem.push_attribute((\"my-key\", \"some value\"));","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/writer.rs","byte_start":107934,"byte_end":107996,"line_start":38,"line_end":38,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/writer.rs","byte_start":107997,"byte_end":108000,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/             // writes the event to the writer","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/writer.rs","byte_start":108001,"byte_end":108050,"line_start":40,"line_end":40,"column_start":1,"column_end":50}},{"value":"/             assert!(writer.write_event(Event::Start(elem)).is_ok());","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/writer.rs","byte_start":108051,"byte_end":108123,"line_start":41,"line_end":41,"column_start":1,"column_end":73}},{"value":"/         },","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/writer.rs","byte_start":108124,"byte_end":108138,"line_start":42,"line_end":42,"column_start":1,"column_end":15}},{"value":"/         Ok(Event::End(ref e)) if e.name() == b\"this_tag\" => {","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/writer.rs","byte_start":108139,"byte_end":108204,"line_start":43,"line_end":43,"column_start":1,"column_end":66}},{"value":"/             assert!(writer.write_event(Event::End(BytesEnd::borrowed(b\"my_elem\"))).is_ok());","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/writer.rs","byte_start":108205,"byte_end":108301,"line_start":44,"line_end":44,"column_start":1,"column_end":97}},{"value":"/         },","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/writer.rs","byte_start":108302,"byte_end":108316,"line_start":45,"line_end":45,"column_start":1,"column_end":15}},{"value":"/         Ok(Event::Eof) => break,","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/writer.rs","byte_start":108317,"byte_end":108353,"line_start":46,"line_end":46,"column_start":1,"column_end":37}},{"value":"/         // we can either move or borrow the event to write, depending on your use-case","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/writer.rs","byte_start":108354,"byte_end":108444,"line_start":47,"line_end":47,"column_start":1,"column_end":91}},{"value":"/         Ok(e) => assert!(writer.write_event(&e).is_ok()),","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/writer.rs","byte_start":108445,"byte_end":108506,"line_start":48,"line_end":48,"column_start":1,"column_end":62}},{"value":"/         Err(e) => panic!(\"{}\", e),","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/writer.rs","byte_start":108507,"byte_end":108545,"line_start":49,"line_end":49,"column_start":1,"column_end":39}},{"value":"/     }","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/writer.rs","byte_start":108546,"byte_end":108555,"line_start":50,"line_end":50,"column_start":1,"column_end":10}},{"value":"/     buf.clear();","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/writer.rs","byte_start":108556,"byte_end":108576,"line_start":51,"line_end":51,"column_start":1,"column_end":21}},{"value":"/ }","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/writer.rs","byte_start":108577,"byte_end":108582,"line_start":52,"line_end":52,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/writer.rs","byte_start":108583,"byte_end":108586,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ let result = writer.into_inner().into_inner();","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/writer.rs","byte_start":108587,"byte_end":108637,"line_start":54,"line_end":54,"column_start":1,"column_end":51}},{"value":"/ let expected = r#\"<my_elem k1=\"v1\" k2=\"v2\" my-key=\"some value\"><child>text</child></my_elem>\"#;","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/writer.rs","byte_start":108638,"byte_end":108737,"line_start":55,"line_end":55,"column_start":1,"column_end":100}},{"value":"/ assert_eq!(result, expected.as_bytes());","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/writer.rs","byte_start":108738,"byte_end":108782,"line_start":56,"line_end":56,"column_start":1,"column_end":45}},{"value":"/ # }","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/writer.rs","byte_start":108783,"byte_end":108790,"line_start":57,"line_end":57,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/writer.rs","byte_start":108791,"byte_end":108798,"line_start":58,"line_end":58,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":344},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/writer.rs","byte_start":109007,"byte_end":109010,"line_start":68,"line_end":68,"column_start":12,"column_end":15},"name":"new","qualname":"<Writer<W>>::new","value":"pub fn new(W) -> Writer<W>","parent":null,"children":[],"decl_id":null,"docs":" Creates a Writer from a generic Write\n","sig":null,"attributes":[{"value":"/ Creates a Writer from a generic Write","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/writer.rs","byte_start":108954,"byte_end":108995,"line_start":67,"line_end":67,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":345},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/writer.rs","byte_start":109215,"byte_end":109230,"line_start":76,"line_end":76,"column_start":12,"column_end":27},"name":"new_with_indent","qualname":"<Writer<W>>::new_with_indent","value":"pub fn new_with_indent(W, u8, usize) -> Writer<W>","parent":null,"children":[],"decl_id":null,"docs":" Creates a Writer with configured whitespace indents from a generic Write\n","sig":null,"attributes":[{"value":"/ Creates a Writer with configured whitespace indents from a generic Write","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/writer.rs","byte_start":109127,"byte_end":109203,"line_start":75,"line_end":75,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":346},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/writer.rs","byte_start":109500,"byte_end":109510,"line_start":84,"line_end":84,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Writer<W>>::into_inner","value":"pub fn into_inner(Self) -> W","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `Writer`, returning the underlying writer.\n","sig":null,"attributes":[{"value":"/ Consumes this `Writer`, returning the underlying writer.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/writer.rs","byte_start":109428,"byte_end":109488,"line_start":83,"line_end":83,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":347},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/writer.rs","byte_start":109606,"byte_end":109611,"line_start":89,"line_end":89,"column_start":12,"column_end":17},"name":"inner","qualname":"<Writer<W>>::inner","value":"pub fn inner(&mut Self) -> &mut W","parent":null,"children":[],"decl_id":null,"docs":" Get inner writer, keeping ownership\n","sig":null,"attributes":[{"value":"/ Get inner writer, keeping ownership","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/writer.rs","byte_start":109555,"byte_end":109594,"line_start":88,"line_end":88,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":348},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/writer.rs","byte_start":109735,"byte_end":109746,"line_start":94,"line_end":94,"column_start":12,"column_end":23},"name":"write_event","qualname":"<Writer<W>>::write_event","value":"pub fn write_event<'a, E: AsRef<Event>>(&mut Self, E) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Writes the given event to the underlying writer.\n","sig":null,"attributes":[{"value":"/ Writes the given event to the underlying writer.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/writer.rs","byte_start":109671,"byte_end":109723,"line_start":93,"line_end":93,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":351},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/writer.rs","byte_start":111165,"byte_end":111170,"line_start":130,"line_end":130,"column_start":12,"column_end":17},"name":"write","qualname":"<Writer<W>>::write","value":"pub fn write(&mut Self, &[u8]) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Writes bytes\n","sig":null,"attributes":[{"value":"/ Writes bytes","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/writer.rs","byte_start":111123,"byte_end":111139,"line_start":128,"line_end":128,"column_start":5,"column_end":21}},{"value":"inline","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/writer.rs","byte_start":111144,"byte_end":111153,"line_start":129,"line_end":129,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":353},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/writer.rs","byte_start":112294,"byte_end":112306,"line_start":159,"line_end":159,"column_start":12,"column_end":24},"name":"write_indent","qualname":"<Writer<W>>::write_indent","value":"pub fn write_indent(&mut Self) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Manually write a newline and indentation at the proper level.","sig":null,"attributes":[{"value":"/ Manually write a newline and indentation at the proper level.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/writer.rs","byte_start":111791,"byte_end":111856,"line_start":150,"line_end":150,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/writer.rs","byte_start":111861,"byte_end":111864,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ This can be used when the heuristic to line break and indent after any [Event] apart","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/writer.rs","byte_start":111869,"byte_end":111957,"line_start":152,"line_end":152,"column_start":5,"column_end":93}},{"value":"/ from [Text] fails such as when a [Start] occurs directly after [Text].","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/writer.rs","byte_start":111962,"byte_end":112036,"line_start":153,"line_end":153,"column_start":5,"column_end":79}},{"value":"/ This method will do nothing if `Writer` was not constructed with `new_with_indent`.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/writer.rs","byte_start":112041,"byte_end":112128,"line_start":154,"line_end":154,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/writer.rs","byte_start":112133,"byte_end":112136,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ [Event]: events/enum.Event.html","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/writer.rs","byte_start":112141,"byte_end":112176,"line_start":156,"line_end":156,"column_start":5,"column_end":40}},{"value":"/ [Text]: events/enum.Event.html#variant.Text","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/writer.rs","byte_start":112181,"byte_end":112228,"line_start":157,"line_end":157,"column_start":5,"column_end":52}},{"value":"/ [Start]: events/enum.Event.html#variant.Start","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/writer.rs","byte_start":112233,"byte_end":112282,"line_start":158,"line_end":158,"column_start":5,"column_end":54}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/errors.rs","byte_start":5932,"byte_end":5937,"line_start":39,"line_end":39,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":6}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/errors.rs","byte_start":6128,"byte_end":6133,"line_start":47,"line_end":47,"column_start":38,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":8}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/errors.rs","byte_start":6489,"byte_end":6494,"line_start":60,"line_end":60,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":12}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/errors.rs","byte_start":8489,"byte_end":8494,"line_start":109,"line_end":109,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":14}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/escapei.rs","byte_start":12870,"byte_end":12881,"line_start":27,"line_end":27,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":19}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/escapei.rs","byte_start":14073,"byte_end":14084,"line_start":55,"line_end":55,"column_start":28,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/attributes.rs","byte_start":46159,"byte_end":46169,"line_start":33,"line_end":33,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":59}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/attributes.rs","byte_start":47974,"byte_end":47983,"line_start":88,"line_end":88,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":62},{"krate":0,"index":63},{"krate":0,"index":66}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/attributes.rs","byte_start":51605,"byte_end":51614,"line_start":168,"line_end":168,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":71}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/attributes.rs","byte_start":51974,"byte_end":51983,"line_start":180,"line_end":180,"column_start":41,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":75}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/attributes.rs","byte_start":52589,"byte_end":52598,"line_start":200,"line_end":200,"column_start":39,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":78}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/attributes.rs","byte_start":53184,"byte_end":53194,"line_start":220,"line_end":220,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":81},{"krate":0,"index":82}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":21286,"byte_end":21296,"line_start":38,"line_end":38,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":113},{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":117},{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":136},{"krate":0,"index":139},{"krate":0,"index":142},{"krate":0,"index":143}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":28904,"byte_end":28914,"line_start":265,"line_end":265,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":146}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":29415,"byte_end":29424,"line_start":283,"line_end":283,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":150},{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":153},{"krate":0,"index":154},{"krate":0,"index":155}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":33340,"byte_end":33348,"line_start":405,"line_end":405,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":162}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":34494,"byte_end":34502,"line_start":448,"line_end":448,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":166}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":34936,"byte_end":34945,"line_start":465,"line_end":465,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":170},{"krate":0,"index":172},{"krate":0,"index":173},{"krate":0,"index":175},{"krate":0,"index":176},{"krate":0,"index":177},{"krate":0,"index":178},{"krate":0,"index":181},{"krate":0,"index":184}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":39557,"byte_end":39566,"line_start":589,"line_end":589,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":187}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":40654,"byte_end":40659,"line_start":626,"line_end":626,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":191}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":41503,"byte_end":41513,"line_start":645,"line_end":645,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":194},{"krate":0,"index":195}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":41622,"byte_end":41631,"line_start":652,"line_end":652,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":198},{"krate":0,"index":199}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":41744,"byte_end":41752,"line_start":659,"line_end":659,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":202},{"krate":0,"index":203}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":41862,"byte_end":41871,"line_start":666,"line_end":666,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":206},{"krate":0,"index":207}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":41984,"byte_end":41989,"line_start":673,"line_end":673,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":210},{"krate":0,"index":211}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":42492,"byte_end":42497,"line_start":690,"line_end":690,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":214}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":62320,"byte_end":62326,"line_start":98,"line_end":98,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":236},{"krate":0,"index":237},{"krate":0,"index":238},{"krate":0,"index":239},{"krate":0,"index":240},{"krate":0,"index":241},{"krate":0,"index":242},{"krate":0,"index":243},{"krate":0,"index":250},{"krate":0,"index":253},{"krate":0,"index":258},{"krate":0,"index":264},{"krate":0,"index":267},{"krate":0,"index":268},{"krate":0,"index":272},{"krate":0,"index":275},{"krate":0,"index":279},{"krate":0,"index":283},{"krate":0,"index":287},{"krate":0,"index":289},{"krate":0,"index":291},{"krate":0,"index":292},{"krate":0,"index":294},{"krate":0,"index":296}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":93424,"byte_end":93430,"line_start":887,"line_end":887,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":298}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":93739,"byte_end":93745,"line_start":896,"line_end":896,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":302}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":99261,"byte_end":99270,"line_start":1057,"line_end":1057,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":309},{"krate":0,"index":312}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":100801,"byte_end":100821,"line_start":1099,"line_end":1099,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":315},{"krate":0,"index":321},{"krate":0,"index":324},{"krate":0,"index":325}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":104986,"byte_end":104993,"line_start":1217,"line_end":1217,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":332}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/writer.rs","byte_start":108938,"byte_end":108944,"line_start":66,"line_end":66,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":344},{"krate":0,"index":345},{"krate":0,"index":346},{"krate":0,"index":347},{"krate":0,"index":348},{"krate":0,"index":351},{"krate":0,"index":352},{"krate":0,"index":353}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/writer.rs","byte_start":112757,"byte_end":112768,"line_start":179,"line_end":179,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":355},{"krate":0,"index":356},{"krate":0,"index":357}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/lib.rs","byte_start":4638,"byte_end":4644,"line_start":132,"line_end":132,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":41}},{"kind":"Mod","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":20330,"byte_end":20340,"line_start":3,"line_end":3,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":42}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/errors.rs","byte_start":5932,"byte_end":5937,"line_start":39,"line_end":39,"column_start":33,"column_end":38},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":363},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/errors.rs","byte_start":6128,"byte_end":6133,"line_start":47,"line_end":47,"column_start":38,"column_end":43},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":363},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/errors.rs","byte_start":6489,"byte_end":6494,"line_start":60,"line_end":60,"column_start":28,"column_end":33},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":363},"to":{"krate":2,"index":6836}},{"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/errors.rs","byte_start":8489,"byte_end":8494,"line_start":109,"line_end":109,"column_start":28,"column_end":33},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":363},"to":{"krate":1,"index":1724}},{"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/escapei.rs","byte_start":12870,"byte_end":12881,"line_start":27,"line_end":27,"column_start":28,"column_end":39},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":404},"to":{"krate":2,"index":6836}},{"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/escapei.rs","byte_start":14073,"byte_end":14084,"line_start":55,"line_end":55,"column_start":28,"column_end":39},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":404},"to":{"krate":1,"index":1724}},{"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/attributes.rs","byte_start":46159,"byte_end":46169,"line_start":33,"line_end":33,"column_start":10,"column_end":20},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":427},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/attributes.rs","byte_start":47974,"byte_end":47983,"line_start":88,"line_end":88,"column_start":10,"column_end":19},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":437},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/attributes.rs","byte_start":51605,"byte_end":51614,"line_start":168,"line_end":168,"column_start":30,"column_end":39},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":437},"to":{"krate":2,"index":6831}},{"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/attributes.rs","byte_start":51974,"byte_end":51983,"line_start":180,"line_end":180,"column_start":41,"column_end":50},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":437},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/attributes.rs","byte_start":52589,"byte_end":52598,"line_start":200,"line_end":200,"column_start":39,"column_end":48},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":437},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/attributes.rs","byte_start":53184,"byte_end":53194,"line_start":220,"line_end":220,"column_start":23,"column_end":33},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":427},"to":{"krate":2,"index":5536}},{"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":21286,"byte_end":21296,"line_start":38,"line_end":38,"column_start":10,"column_end":20},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":450},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":28904,"byte_end":28914,"line_start":265,"line_end":265,"column_start":30,"column_end":40},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":450},"to":{"krate":2,"index":6831}},{"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":29415,"byte_end":29424,"line_start":283,"line_end":283,"column_start":10,"column_end":19},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":457},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":33340,"byte_end":33348,"line_start":405,"line_end":405,"column_start":10,"column_end":18},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":466},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":34494,"byte_end":34502,"line_start":448,"line_end":448,"column_start":30,"column_end":38},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":466},"to":{"krate":2,"index":6831}},{"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":34936,"byte_end":34945,"line_start":465,"line_end":465,"column_start":10,"column_end":19},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":472},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":39557,"byte_end":39566,"line_start":589,"line_end":589,"column_start":30,"column_end":39},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":472},"to":{"krate":2,"index":6831}},{"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":40654,"byte_end":40659,"line_start":626,"line_end":626,"column_start":10,"column_end":15},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":478},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":41503,"byte_end":41513,"line_start":645,"line_end":645,"column_start":20,"column_end":30},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":450},"to":{"krate":2,"index":2271}},{"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":41622,"byte_end":41631,"line_start":652,"line_end":652,"column_start":20,"column_end":29},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":457},"to":{"krate":2,"index":2271}},{"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":41744,"byte_end":41752,"line_start":659,"line_end":659,"column_start":20,"column_end":28},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":466},"to":{"krate":2,"index":2271}},{"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":41862,"byte_end":41871,"line_start":666,"line_end":666,"column_start":20,"column_end":29},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":472},"to":{"krate":2,"index":2271}},{"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":41984,"byte_end":41989,"line_start":673,"line_end":673,"column_start":20,"column_end":25},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":478},"to":{"krate":2,"index":2271}},{"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/events/mod.rs","byte_start":42492,"byte_end":42497,"line_start":690,"line_end":690,"column_start":31,"column_end":36},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":478},"to":{"krate":2,"index":1980}},{"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":62320,"byte_end":62326,"line_start":98,"line_end":98,"column_start":18,"column_end":24},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":526},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":93424,"byte_end":93430,"line_start":887,"line_end":887,"column_start":6,"column_end":12},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":526},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":93739,"byte_end":93745,"line_start":896,"line_end":896,"column_start":10,"column_end":16},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":526},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":99261,"byte_end":99270,"line_start":1057,"line_end":1057,"column_start":6,"column_end":15},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":552},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":100801,"byte_end":100821,"line_start":1099,"line_end":1099,"column_start":6,"column_end":26},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":561},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/reader.rs","byte_start":104986,"byte_end":104993,"line_start":1217,"line_end":1217,"column_start":6,"column_end":13},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":571},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/writer.rs","byte_start":108938,"byte_end":108944,"line_start":66,"line_end":66,"column_start":16,"column_end":22},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":576},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/quick-xml-0.20.0/src/writer.rs","byte_start":112757,"byte_end":112768,"line_start":179,"line_end":179,"column_start":6,"column_end":17},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":583},"to":{"krate":4294967295,"index":4294967295}}]}