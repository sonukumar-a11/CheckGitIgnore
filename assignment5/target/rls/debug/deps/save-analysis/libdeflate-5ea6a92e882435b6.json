{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6","program":"/home/knoldus/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","deflate","--edition=2018","/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"gzip\"","--cfg","feature=\"gzip-header\"","-C","metadata=5ea6a92e882435b6","-C","extra-filename=-5ea6a92e882435b6","--out-dir","/home/knoldus/CheckGitIgnore/assignment5/target/rls/debug/deps","-L","dependency=/home/knoldus/CheckGitIgnore/assignment5/target/rls/debug/deps","--extern","adler32=/home/knoldus/CheckGitIgnore/assignment5/target/rls/debug/deps/libadler32-e118c8eda32a33cd.rmeta","--extern","byteorder=/home/knoldus/CheckGitIgnore/assignment5/target/rls/debug/deps/libbyteorder-e707f0ae0ac9d0bc.rmeta","--extern","gzip_header=/home/knoldus/CheckGitIgnore/assignment5/target/rls/debug/deps/libgzip_header-51e44c62db3bdaa9.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/knoldus/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/knoldus/CheckGitIgnore/assignment5/target/rls/debug/deps/libdeflate-5ea6a92e882435b6.rmeta"},"prelude":{"crate_id":{"name":"deflate","disambiguator":[18121955575128128868,15004572419496300913]},"crate_root":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src","external_crates":[{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[12933703438800314702,5774803219644544316]}},{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[18134888982608726624,15478788479473023395]}},{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[6673302632599048863,4691371433878452070]}},{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[11457885127507258025,479752930606968628]}},{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[6007655421670680970,17748288058820543149]}},{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[4051320655186846034,14773827427477085591]}},{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[3672675044024306215,7179779047398453100]}},{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[14739525726177289408,3061276640434149652]}},{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[2246841610299105657,12905561680815043912]}},{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[4036557704906104068,994131407893854156]}},{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[7443407023664770875,11250036483448109314]}},{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[10148669557414888454,6400214184476534778]}},{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[4006540472161665961,15205760237192158299]}},{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[16043199729901662453,7825522302763349882]}},{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","num":15,"id":{"name":"miniz_oxide","disambiguator":[5738570549504868290,14845130516100231771]}},{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","num":16,"id":{"name":"adler","disambiguator":[6807687926185025542,9498922200428406688]}},{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[6171827839412267364,4338689175470013405]}},{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","num":18,"id":{"name":"adler32","disambiguator":[9837761547205921256,15967857327328292123]}},{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","num":19,"id":{"name":"byteorder","disambiguator":[4542419197792075086,14062656506297964355]}},{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","num":20,"id":{"name":"gzip_header","disambiguator":[14253494216122018940,11354928925529204251]}},{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","num":21,"id":{"name":"crc32fast","disambiguator":[347137084524080687,16513383032079802120]}},{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","num":22,"id":{"name":"cfg_if","disambiguator":[11748229077813686416,18120593503603249335]}}],"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":0,"byte_end":14962,"line_start":1,"line_end":492,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":732},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":3031,"byte_end":3042,"line_start":102,"line_end":102,"column_start":31,"column_end":42},"alias_span":null,"name":"Compression","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":778},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":3044,"byte_end":3062,"line_start":102,"line_end":102,"column_start":44,"column_end":62},"alias_span":null,"name":"CompressionOptions","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":757},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":3064,"byte_end":3078,"line_start":102,"line_end":102,"column_start":64,"column_end":78},"alias_span":null,"name":"SpecialOptions","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":851},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":3095,"byte_end":3107,"line_start":103,"line_end":103,"column_start":15,"column_end":27},"alias_span":null,"name":"MatchingType","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":620},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":3276,"byte_end":3285,"line_start":110,"line_end":110,"column_start":34,"column_end":43},"alias_span":null,"name":"GzEncoder","value":"","parent":{"krate":0,"index":689}},{"kind":"Use","ref_id":{"krate":0,"index":567},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":3315,"byte_end":3329,"line_start":111,"line_end":111,"column_start":29,"column_end":43},"alias_span":null,"name":"DeflateEncoder","value":"","parent":{"krate":0,"index":689}},{"kind":"Use","ref_id":{"krate":0,"index":584},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":3331,"byte_end":3342,"line_start":111,"line_end":111,"column_start":45,"column_end":56},"alias_span":null,"name":"ZlibEncoder","value":"","parent":{"krate":0,"index":689}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":0,"byte_end":14962,"line_start":1,"line_end":492,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":8},{"krate":0,"index":30},{"krate":0,"index":67},{"krate":0,"index":98},{"krate":0,"index":121},{"krate":0,"index":143},{"krate":0,"index":191},{"krate":0,"index":221},{"krate":0,"index":285},{"krate":0,"index":356},{"krate":0,"index":371},{"krate":0,"index":403},{"krate":0,"index":465},{"krate":0,"index":476},{"krate":0,"index":485},{"krate":0,"index":518},{"krate":0,"index":532},{"krate":0,"index":546},{"krate":0,"index":647},{"krate":0,"index":674},{"krate":0,"index":675},{"krate":0,"index":676},{"krate":0,"index":677},{"krate":0,"index":678},{"krate":0,"index":679},{"krate":0,"index":680},{"krate":0,"index":681},{"krate":0,"index":682},{"krate":0,"index":683},{"krate":0,"index":684},{"krate":0,"index":685},{"krate":0,"index":686},{"krate":0,"index":687},{"krate":0,"index":688},{"krate":0,"index":689},{"krate":0,"index":694},{"krate":0,"index":697},{"krate":0,"index":699},{"krate":0,"index":700},{"krate":0,"index":703},{"krate":0,"index":704},{"krate":0,"index":707}],"decl_id":null,"docs":" An implementation an encoder using [DEFLATE](http://www.gzip.org/zlib/rfc-deflate.html)\n compression algorithm in pure Rust.","sig":null,"attributes":[{"value":"/ An implementation an encoder using [DEFLATE](http://www.gzip.org/zlib/rfc-deflate.html)","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":0,"byte_end":91,"line_start":1,"line_end":1,"column_start":1,"column_end":92}},{"value":"/ compression algorithm in pure Rust.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":92,"byte_end":131,"line_start":2,"line_end":2,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":132,"byte_end":135,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ This library provides functions to compress data using the DEFLATE algorithm,","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":136,"byte_end":217,"line_start":4,"line_end":4,"column_start":1,"column_end":82}},{"value":"/ optionally wrapped using the [zlib](https://tools.ietf.org/html/rfc1950) or","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":218,"byte_end":297,"line_start":5,"line_end":5,"column_start":1,"column_end":80}},{"value":"/ [gzip](http://www.gzip.org/zlib/rfc-gzip.html) formats.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":298,"byte_end":357,"line_start":6,"line_end":6,"column_start":1,"column_end":60}},{"value":"/ The current implementation is still a bit lacking speed-wise compared to C-libraries","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":358,"byte_end":446,"line_start":7,"line_end":7,"column_start":1,"column_end":89}},{"value":"/ like zlib and miniz.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":447,"byte_end":471,"line_start":8,"line_end":8,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":472,"byte_end":475,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ The deflate algorithm is an older compression algorithm that is still widely used today,","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":476,"byte_end":568,"line_start":10,"line_end":10,"column_start":1,"column_end":93}},{"value":"/ by e.g html headers, the `.png` image format, the Unix `gzip` program and commonly in `.zip`","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":569,"byte_end":665,"line_start":11,"line_end":11,"column_start":1,"column_end":97}},{"value":"/ files. The `zlib` and `gzip` formats are wrappers around DEFLATE-compressed data, containing","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":666,"byte_end":762,"line_start":12,"line_end":12,"column_start":1,"column_end":97}},{"value":"/ some extra metadata and a checksum to validate the integrity of the raw data.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":763,"byte_end":844,"line_start":13,"line_end":13,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":845,"byte_end":848,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ The deflate algorithm does not perform as well as newer algorithms used in file formats such as","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":849,"byte_end":948,"line_start":15,"line_end":15,"column_start":1,"column_end":100}},{"value":"/ `.7z`, `.rar`, `.xz` and `.bz2`, and is thus not the ideal choice for applications where","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":949,"byte_end":1041,"line_start":16,"line_end":16,"column_start":1,"column_end":93}},{"value":"/ the `DEFLATE` format (with or without wrappers) is not required.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":1042,"byte_end":1110,"line_start":17,"line_end":17,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":1111,"byte_end":1114,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Support for the gzip wrapper (the wrapper that is used in `.gz` files) is disabled by default","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":1115,"byte_end":1212,"line_start":19,"line_end":19,"column_start":1,"column_end":98}},{"value":"/ but can be enabled with the `gzip` feature.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":1213,"byte_end":1260,"line_start":20,"line_end":20,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":1261,"byte_end":1264,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ As this library is still in development, the compression output may change slightly","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":1265,"byte_end":1352,"line_start":22,"line_end":22,"column_start":1,"column_end":88}},{"value":"/ between versions.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":1353,"byte_end":1374,"line_start":23,"line_end":23,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":1375,"byte_end":1378,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":1379,"byte_end":1382,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ # Examples:","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":1383,"byte_end":1398,"line_start":26,"line_end":26,"column_start":1,"column_end":16}},{"value":"/ ## Simple compression function:","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":1399,"byte_end":1434,"line_start":27,"line_end":27,"column_start":1,"column_end":36}},{"value":"/ ``` rust","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":1435,"byte_end":1447,"line_start":28,"line_end":28,"column_start":1,"column_end":13}},{"value":"/ use deflate::deflate_bytes;","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":1448,"byte_end":1479,"line_start":29,"line_end":29,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":1480,"byte_end":1483,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ let data = b\"Some data\";","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":1484,"byte_end":1512,"line_start":31,"line_end":31,"column_start":1,"column_end":29}},{"value":"/ let compressed = deflate_bytes(data);","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":1513,"byte_end":1554,"line_start":32,"line_end":32,"column_start":1,"column_end":42}},{"value":"/ # let _ = compressed;","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":1555,"byte_end":1580,"line_start":33,"line_end":33,"column_start":1,"column_end":26}},{"value":"/ ```","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":1581,"byte_end":1588,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":1589,"byte_end":1592,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ ## Using a writer:","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":1593,"byte_end":1615,"line_start":36,"line_end":36,"column_start":1,"column_end":23}},{"value":"/ ``` rust","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":1616,"byte_end":1628,"line_start":37,"line_end":37,"column_start":1,"column_end":13}},{"value":"/ use std::io::Write;","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":1629,"byte_end":1652,"line_start":38,"line_end":38,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":1653,"byte_end":1656,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ use deflate::Compression;","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":1657,"byte_end":1686,"line_start":40,"line_end":40,"column_start":1,"column_end":30}},{"value":"/ use deflate::write::ZlibEncoder;","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":1687,"byte_end":1723,"line_start":41,"line_end":41,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":1724,"byte_end":1727,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ let data = b\"This is some test data\";","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":1728,"byte_end":1769,"line_start":43,"line_end":43,"column_start":1,"column_end":42}},{"value":"/ let mut encoder = ZlibEncoder::new(Vec::new(), Compression::Default);","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":1770,"byte_end":1843,"line_start":44,"line_end":44,"column_start":1,"column_end":74}},{"value":"/ encoder.write_all(data).expect(\"Write error!\");","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":1844,"byte_end":1895,"line_start":45,"line_end":45,"column_start":1,"column_end":52}},{"value":"/ let compressed_data = encoder.finish().expect(\"Failed to finish compression!\");","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":1896,"byte_end":1979,"line_start":46,"line_end":46,"column_start":1,"column_end":84}},{"value":"/ # let _ = compressed_data;","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":1980,"byte_end":2010,"line_start":47,"line_end":47,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":2011,"byte_end":2018,"line_start":48,"line_end":48,"column_start":1,"column_end":8}},{"value":"forbid(unsafe_code)","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":2020,"byte_end":2043,"line_start":50,"line_end":50,"column_start":1,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":733},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/compression_options.rs","byte_start":49761,"byte_end":49765,"line_start":33,"line_end":33,"column_start":5,"column_end":9},"name":"Fast","qualname":"::compression_options::Compression::Fast","value":"Compression::Fast","parent":{"krate":0,"index":732},"children":[],"decl_id":null,"docs":" Fast minimal compression (`CompressionOptions::fast()`).\n","sig":null,"attributes":[{"value":"/ Fast minimal compression (`CompressionOptions::fast()`).","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/compression_options.rs","byte_start":49696,"byte_end":49756,"line_start":32,"line_end":32,"column_start":5,"column_end":65}}]},{"kind":"TupleVariant","id":{"krate":0,"index":735},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/compression_options.rs","byte_start":49828,"byte_end":49835,"line_start":35,"line_end":35,"column_start":5,"column_end":12},"name":"Default","qualname":"::compression_options::Compression::Default","value":"Compression::Default","parent":{"krate":0,"index":732},"children":[],"decl_id":null,"docs":" Default level (`CompressionOptions::default()`).\n","sig":null,"attributes":[{"value":"/ Default level (`CompressionOptions::default()`).","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/compression_options.rs","byte_start":49771,"byte_end":49823,"line_start":34,"line_end":34,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":737},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/compression_options.rs","byte_start":50089,"byte_end":50093,"line_start":41,"line_end":41,"column_start":5,"column_end":9},"name":"Best","qualname":"::compression_options::Compression::Best","value":"Compression::Best","parent":{"krate":0,"index":732},"children":[],"decl_id":null,"docs":" Higher compression level (`CompressionOptions::high()`).","sig":null,"attributes":[{"value":"/ Higher compression level (`CompressionOptions::high()`).","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/compression_options.rs","byte_start":49841,"byte_end":49901,"line_start":36,"line_end":36,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/compression_options.rs","byte_start":49906,"byte_end":49909,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ Best in this context isn't actually the highest possible level","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/compression_options.rs","byte_start":49914,"byte_end":49980,"line_start":38,"line_end":38,"column_start":5,"column_end":71}},{"value":"/ the encoder can do, but is meant to emulate the `Best` setting in the `Flate2`","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/compression_options.rs","byte_start":49985,"byte_end":50067,"line_start":39,"line_end":39,"column_start":5,"column_end":87}},{"value":"/ library.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/compression_options.rs","byte_start":50072,"byte_end":50084,"line_start":40,"line_end":40,"column_start":5,"column_end":17}}]},{"kind":"Enum","id":{"krate":0,"index":732},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/compression_options.rs","byte_start":49678,"byte_end":49689,"line_start":31,"line_end":31,"column_start":10,"column_end":21},"name":"Compression","qualname":"::compression_options::Compression","value":"pub enum Compression {\n\n    /// Fast minimal compression (`CompressionOptions::fast()`).\n    Fast,\n\n    /// Default level (`CompressionOptions::default()`).\n    Default,\n\n    /// Higher compression level (`CompressionOptions::high()`).\n    ///\n    /// Best in this context isn't actually the highest possible level\n    /// the encoder can do, but is meant to emulate the `Best` setting in the `Flate2`\n    /// library.\n    Best,\n}","parent":null,"children":[{"krate":0,"index":733},{"krate":0,"index":735},{"krate":0,"index":737}],"decl_id":null,"docs":" An enum describing the level of compression to be used by the encoder","sig":null,"attributes":[{"value":"/ An enum describing the level of compression to be used by the encoder","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/compression_options.rs","byte_start":49262,"byte_end":49335,"line_start":22,"line_end":22,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/compression_options.rs","byte_start":49336,"byte_end":49339,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Higher compression ratios will take longer to encode.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/compression_options.rs","byte_start":49340,"byte_end":49397,"line_start":24,"line_end":24,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/compression_options.rs","byte_start":49398,"byte_end":49401,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ This is a simplified interface to specify a compression level.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/compression_options.rs","byte_start":49402,"byte_end":49468,"line_start":26,"line_end":26,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/compression_options.rs","byte_start":49469,"byte_end":49472,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ [See also `CompressionOptions`](./struct.CompressionOptions.html) which provides for","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/compression_options.rs","byte_start":49473,"byte_end":49561,"line_start":28,"line_end":28,"column_start":1,"column_end":89}},{"value":"/ tweaking the settings more finely.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/compression_options.rs","byte_start":49562,"byte_end":49600,"line_start":29,"line_end":29,"column_start":1,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":758},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/compression_options.rs","byte_start":50371,"byte_end":50377,"line_start":54,"line_end":54,"column_start":5,"column_end":11},"name":"Normal","qualname":"::compression_options::SpecialOptions::Normal","value":"SpecialOptions::Normal","parent":{"krate":0,"index":757},"children":[],"decl_id":null,"docs":" Compress normally.\n","sig":null,"attributes":[{"value":"/ Compress normally.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/compression_options.rs","byte_start":50344,"byte_end":50366,"line_start":53,"line_end":53,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":760},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/compression_options.rs","byte_start":50437,"byte_end":50448,"line_start":56,"line_end":56,"column_start":5,"column_end":16},"name":"_ForceFixed","qualname":"::compression_options::SpecialOptions::_ForceFixed","value":"SpecialOptions::_ForceFixed","parent":{"krate":0,"index":757},"children":[],"decl_id":null,"docs":" Force fixed Huffman tables. (Unimplemented!).\n","sig":null,"attributes":[{"value":"/ Force fixed Huffman tables. (Unimplemented!).","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/compression_options.rs","byte_start":50383,"byte_end":50432,"line_start":55,"line_end":55,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":762},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/compression_options.rs","byte_start":50521,"byte_end":50533,"line_start":58,"line_end":58,"column_start":5,"column_end":17},"name":"_ForceStored","qualname":"::compression_options::SpecialOptions::_ForceStored","value":"SpecialOptions::_ForceStored","parent":{"krate":0,"index":757},"children":[],"decl_id":null,"docs":" Force stored (uncompressed) blocks only. (Unimplemented!).\n","sig":null,"attributes":[{"value":"/ Force stored (uncompressed) blocks only. (Unimplemented!).","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/compression_options.rs","byte_start":50454,"byte_end":50516,"line_start":57,"line_end":57,"column_start":5,"column_end":67}}]},{"kind":"Enum","id":{"krate":0,"index":757},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/compression_options.rs","byte_start":50323,"byte_end":50337,"line_start":52,"line_end":52,"column_start":10,"column_end":24},"name":"SpecialOptions","qualname":"::compression_options::SpecialOptions","value":"pub enum SpecialOptions {\n\n    /// Compress normally.\n    Normal,\n\n    /// Force fixed Huffman tables. (Unimplemented!).\n    _ForceFixed,\n\n    /// Force stored (uncompressed) blocks only. (Unimplemented!).\n    _ForceStored,\n}","parent":null,"children":[{"krate":0,"index":758},{"krate":0,"index":760},{"krate":0,"index":762}],"decl_id":null,"docs":" Enum allowing some special options (not implemented yet)!\n","sig":null,"attributes":[{"value":"/ Enum allowing some special options (not implemented yet)!","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/compression_options.rs","byte_start":50201,"byte_end":50262,"line_start":50,"line_end":50,"column_start":1,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":778},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/compression_options.rs","byte_start":51099,"byte_end":51117,"line_start":78,"line_end":78,"column_start":12,"column_end":30},"name":"CompressionOptions","qualname":"::compression_options::CompressionOptions","value":"CompressionOptions { max_hash_checks, lazy_if_less_than, matching_type, special }","parent":null,"children":[{"krate":0,"index":779},{"krate":0,"index":780},{"krate":0,"index":781},{"krate":0,"index":782}],"decl_id":null,"docs":" A struct describing the options for a compressor or compression function.","sig":null,"attributes":[{"value":"/ A struct describing the options for a compressor or compression function.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/compression_options.rs","byte_start":50894,"byte_end":50971,"line_start":74,"line_end":74,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/compression_options.rs","byte_start":50972,"byte_end":50975,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ These values are not stable and still subject to change!","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/compression_options.rs","byte_start":50976,"byte_end":51036,"line_start":76,"line_end":76,"column_start":1,"column_end":61}}]},{"kind":"Field","id":{"krate":0,"index":779},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/compression_options.rs","byte_start":51555,"byte_end":51570,"line_start":87,"line_end":87,"column_start":9,"column_end":24},"name":"max_hash_checks","qualname":"::compression_options::CompressionOptions::max_hash_checks","value":"u16","parent":{"krate":0,"index":778},"children":[],"decl_id":null,"docs":" The maximum number of checks to make in the hash table for matches.","sig":null,"attributes":[{"value":"/ The maximum number of checks to make in the hash table for matches.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/compression_options.rs","byte_start":51124,"byte_end":51195,"line_start":79,"line_end":79,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/compression_options.rs","byte_start":51200,"byte_end":51203,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ Higher numbers mean slower, but better compression. Very high (say `>1024`) values","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/compression_options.rs","byte_start":51208,"byte_end":51294,"line_start":81,"line_end":81,"column_start":5,"column_end":91}},{"value":"/ will impact compression speed a lot. The maximum match length is 2^15, so values higher than","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/compression_options.rs","byte_start":51299,"byte_end":51395,"line_start":82,"line_end":82,"column_start":5,"column_end":101}},{"value":"/ this won't make any difference, and will be truncated to 2^15 by the compression","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/compression_options.rs","byte_start":51400,"byte_end":51484,"line_start":83,"line_end":83,"column_start":5,"column_end":89}},{"value":"/ function/writer.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/compression_options.rs","byte_start":51489,"byte_end":51509,"line_start":84,"line_end":84,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/compression_options.rs","byte_start":51514,"byte_end":51517,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ Default value: `128`","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/compression_options.rs","byte_start":51522,"byte_end":51546,"line_start":86,"line_end":86,"column_start":5,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":780},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/compression_options.rs","byte_start":52176,"byte_end":52193,"line_start":101,"line_end":101,"column_start":9,"column_end":26},"name":"lazy_if_less_than","qualname":"::compression_options::CompressionOptions::lazy_if_less_than","value":"u16","parent":{"krate":0,"index":778},"children":[],"decl_id":null,"docs":" Only lazy match if we have a length less than this value.","sig":null,"attributes":[{"value":"/ Only lazy match if we have a length less than this value.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/compression_options.rs","byte_start":51611,"byte_end":51672,"line_start":89,"line_end":89,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/compression_options.rs","byte_start":51677,"byte_end":51680,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ Higher values degrade compression slightly, but improve compression speed.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/compression_options.rs","byte_start":51685,"byte_end":51763,"line_start":91,"line_end":91,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/compression_options.rs","byte_start":51768,"byte_end":51771,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ * `0`: Never lazy match. (Same effect as setting `MatchingType` to greedy, but may be slower).","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/compression_options.rs","byte_start":51776,"byte_end":51874,"line_start":93,"line_end":93,"column_start":5,"column_end":103}},{"value":"/ * `1...257`: Only check for a better match if the first match was shorter than this value.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/compression_options.rs","byte_start":51879,"byte_end":51973,"line_start":94,"line_end":94,"column_start":5,"column_end":99}},{"value":"/ * `258`: Always lazy match.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/compression_options.rs","byte_start":51978,"byte_end":52009,"line_start":95,"line_end":95,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/compression_options.rs","byte_start":52014,"byte_end":52017,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ As the maximum length of a match is `258`, values higher than this will have","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/compression_options.rs","byte_start":52022,"byte_end":52102,"line_start":97,"line_end":97,"column_start":5,"column_end":85}},{"value":"/ no further effect.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/compression_options.rs","byte_start":52107,"byte_end":52129,"line_start":98,"line_end":98,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/compression_options.rs","byte_start":52134,"byte_end":52137,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ * Default value: `32`","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/compression_options.rs","byte_start":52142,"byte_end":52167,"line_start":100,"line_end":100,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":781},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/compression_options.rs","byte_start":52818,"byte_end":52831,"line_start":116,"line_end":116,"column_start":9,"column_end":22},"name":"matching_type","qualname":"::compression_options::CompressionOptions::matching_type","value":"lz77::MatchingType","parent":{"krate":0,"index":778},"children":[],"decl_id":null,"docs":" Whether to use lazy or greedy matching.","sig":null,"attributes":[{"value":"/ Whether to use lazy or greedy matching.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/compression_options.rs","byte_start":52236,"byte_end":52279,"line_start":104,"line_end":104,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/compression_options.rs","byte_start":52284,"byte_end":52287,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ Lazy matching will provide better compression, at the expense of compression speed.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/compression_options.rs","byte_start":52292,"byte_end":52379,"line_start":106,"line_end":106,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/compression_options.rs","byte_start":52384,"byte_end":52387,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ As a special case, if max_hash_checks is set to 0, and matching_type is set to lazy,","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/compression_options.rs","byte_start":52392,"byte_end":52480,"line_start":108,"line_end":108,"column_start":5,"column_end":93}},{"value":"/ compression using only run-length encoding (i.e maximum match distance of 1) is performed.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/compression_options.rs","byte_start":52485,"byte_end":52579,"line_start":109,"line_end":109,"column_start":5,"column_end":99}},{"value":"/ (This may be changed in the future but is defined like this at the moment to avoid API","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/compression_options.rs","byte_start":52584,"byte_end":52674,"line_start":110,"line_end":110,"column_start":5,"column_end":95}},{"value":"/ breakage.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/compression_options.rs","byte_start":52679,"byte_end":52692,"line_start":111,"line_end":111,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/compression_options.rs","byte_start":52697,"byte_end":52700,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ [See `MatchingType`](./enum.MatchingType.html)","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/compression_options.rs","byte_start":52705,"byte_end":52755,"line_start":113,"line_end":113,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/compression_options.rs","byte_start":52760,"byte_end":52763,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ * Default value: `MatchingType::Lazy`","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/compression_options.rs","byte_start":52768,"byte_end":52809,"line_start":115,"line_end":115,"column_start":5,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":782},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/compression_options.rs","byte_start":52962,"byte_end":52969,"line_start":119,"line_end":119,"column_start":9,"column_end":16},"name":"special","qualname":"::compression_options::CompressionOptions::special","value":"compression_options::SpecialOptions","parent":{"krate":0,"index":778},"children":[],"decl_id":null,"docs":" Force fixed/stored blocks (Not implemented yet).\n * Default value: `SpecialOptions::Normal`\n","sig":null,"attributes":[{"value":"/ Force fixed/stored blocks (Not implemented yet).","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/compression_options.rs","byte_start":52851,"byte_end":52903,"line_start":117,"line_end":117,"column_start":5,"column_end":57}},{"value":"/ * Default value: `SpecialOptions::Normal`","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/compression_options.rs","byte_start":52908,"byte_end":52953,"line_start":118,"line_end":118,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":135},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/compression_options.rs","byte_start":53266,"byte_end":53270,"line_start":126,"line_end":126,"column_start":12,"column_end":16},"name":"high","qualname":"<CompressionOptions>::high","value":"pub fn high() -> CompressionOptions","parent":null,"children":[],"decl_id":null,"docs":" Returns compression settings roughly corresponding to the `HIGH(9)` setting in miniz.\n","sig":null,"attributes":[{"value":"/ Returns compression settings roughly corresponding to the `HIGH(9)` setting in miniz.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/compression_options.rs","byte_start":53165,"byte_end":53254,"line_start":125,"line_end":125,"column_start":5,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":136},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/compression_options.rs","byte_start":53904,"byte_end":53908,"line_start":141,"line_end":141,"column_start":12,"column_end":16},"name":"fast","qualname":"<CompressionOptions>::fast","value":"pub fn fast() -> CompressionOptions","parent":null,"children":[],"decl_id":null,"docs":" Returns  a fast set of compression settings","sig":null,"attributes":[{"value":"/ Returns  a fast set of compression settings","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/compression_options.rs","byte_start":53545,"byte_end":53592,"line_start":135,"line_end":135,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/compression_options.rs","byte_start":53597,"byte_end":53600,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ Ideally this should roughly correspond to the `FAST(1)` setting in miniz.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/compression_options.rs","byte_start":53605,"byte_end":53682,"line_start":137,"line_end":137,"column_start":5,"column_end":82}},{"value":"/ However, that setting makes miniz use a somewhat different algorithm,","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/compression_options.rs","byte_start":53687,"byte_end":53760,"line_start":138,"line_end":138,"column_start":5,"column_end":78}},{"value":"/ so currently hte fast level in this library is slower and better compressing","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/compression_options.rs","byte_start":53765,"byte_end":53845,"line_start":139,"line_end":139,"column_start":5,"column_end":85}},{"value":"/ than the corresponding level in miniz.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/compression_options.rs","byte_start":53850,"byte_end":53892,"line_start":140,"line_end":140,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":137},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/compression_options.rs","byte_start":54469,"byte_end":54481,"line_start":155,"line_end":155,"column_start":12,"column_end":24},"name":"huffman_only","qualname":"<CompressionOptions>::huffman_only","value":"pub fn huffman_only() -> CompressionOptions","parent":null,"children":[],"decl_id":null,"docs":" Returns a set of compression settings that makes the compressor only compress using\n Huffman coding. (Ignoring any length/distance matching)","sig":null,"attributes":[{"value":"/ Returns a set of compression settings that makes the compressor only compress using","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/compression_options.rs","byte_start":54145,"byte_end":54232,"line_start":150,"line_end":150,"column_start":5,"column_end":92}},{"value":"/ Huffman coding. (Ignoring any length/distance matching)","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/compression_options.rs","byte_start":54237,"byte_end":54296,"line_start":151,"line_end":151,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/compression_options.rs","byte_start":54301,"byte_end":54304,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ This will normally have the worst compression ratio (besides only using uncompressed data),","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/compression_options.rs","byte_start":54309,"byte_end":54404,"line_start":153,"line_end":153,"column_start":5,"column_end":100}},{"value":"/ but may be the fastest method in some cases.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/compression_options.rs","byte_start":54409,"byte_end":54457,"line_start":154,"line_end":154,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":138},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/compression_options.rs","byte_start":55159,"byte_end":55162,"line_start":171,"line_end":171,"column_start":12,"column_end":15},"name":"rle","qualname":"<CompressionOptions>::rle","value":"pub fn rle() -> CompressionOptions","parent":null,"children":[],"decl_id":null,"docs":" Returns a set of compression settings that makes the compressor compress only using\n run-length encoding (i.e only looking for matches one byte back).","sig":null,"attributes":[{"value":"/ Returns a set of compression settings that makes the compressor compress only using","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/compression_options.rs","byte_start":54718,"byte_end":54805,"line_start":164,"line_end":164,"column_start":5,"column_end":92}},{"value":"/ run-length encoding (i.e only looking for matches one byte back).","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/compression_options.rs","byte_start":54810,"byte_end":54879,"line_start":165,"line_end":165,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/compression_options.rs","byte_start":54884,"byte_end":54887,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ This is very fast, but tends to compress worse than looking for more matches using hash","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/compression_options.rs","byte_start":54892,"byte_end":54983,"line_start":167,"line_end":167,"column_start":5,"column_end":96}},{"value":"/ chains that the slower settings do.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/compression_options.rs","byte_start":54988,"byte_end":55027,"line_start":168,"line_end":168,"column_start":5,"column_end":44}},{"value":"/ Works best on data that has runs of equivalent bytes, like binary or simple images,","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/compression_options.rs","byte_start":55032,"byte_end":55119,"line_start":169,"line_end":169,"column_start":5,"column_end":92}},{"value":"/ less good for text.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/compression_options.rs","byte_start":55124,"byte_end":55147,"line_start":170,"line_end":170,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":852},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lz77.rs","byte_start":132114,"byte_end":132120,"line_start":30,"line_end":30,"column_start":5,"column_end":11},"name":"Greedy","qualname":"::lz77::MatchingType::Greedy","value":"MatchingType::Greedy","parent":{"krate":0,"index":851},"children":[],"decl_id":null,"docs":" Use greedy matching: the matching algorithm simply uses a match right away\n if found.\n","sig":null,"attributes":[{"value":"/ Use greedy matching: the matching algorithm simply uses a match right away","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lz77.rs","byte_start":132013,"byte_end":132091,"line_start":28,"line_end":28,"column_start":5,"column_end":83}},{"value":"/ if found.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lz77.rs","byte_start":132096,"byte_end":132109,"line_start":29,"line_end":29,"column_start":5,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":854},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lz77.rs","byte_start":132438,"byte_end":132442,"line_start":36,"line_end":36,"column_start":5,"column_end":9},"name":"Lazy","qualname":"::lz77::MatchingType::Lazy","value":"MatchingType::Lazy","parent":{"krate":0,"index":851},"children":[],"decl_id":null,"docs":" Use lazy matching: after finding a match, the next input byte is checked, to see\n if there is a better match starting at that byte.","sig":null,"attributes":[{"value":"/ Use lazy matching: after finding a match, the next input byte is checked, to see","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lz77.rs","byte_start":132126,"byte_end":132210,"line_start":31,"line_end":31,"column_start":5,"column_end":89}},{"value":"/ if there is a better match starting at that byte.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lz77.rs","byte_start":132215,"byte_end":132268,"line_start":32,"line_end":32,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lz77.rs","byte_start":132273,"byte_end":132276,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ As a special case, if max_hash_checks is set to 0, compression using only run-length","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lz77.rs","byte_start":132281,"byte_end":132369,"line_start":34,"line_end":34,"column_start":5,"column_end":93}},{"value":"/ (i.e maximum match distance of 1) is performed instead.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lz77.rs","byte_start":132374,"byte_end":132433,"line_start":35,"line_end":35,"column_start":5,"column_end":64}}]},{"kind":"Enum","id":{"krate":0,"index":851},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lz77.rs","byte_start":131994,"byte_end":132006,"line_start":27,"line_end":27,"column_start":10,"column_end":22},"name":"MatchingType","qualname":"::lz77::MatchingType","value":"pub enum MatchingType {\n\n    /// Use greedy matching: the matching algorithm simply uses a match right away\n    /// if found.\n    Greedy,\n\n    /// Use lazy matching: after finding a match, the next input byte is checked, to see\n    /// if there is a better match starting at that byte.\n    ///\n    /// As a special case, if max_hash_checks is set to 0, compression using only run-length\n    /// (i.e maximum match distance of 1) is performed instead.\n    Lazy,\n}","parent":null,"children":[{"krate":0,"index":852},{"krate":0,"index":854}],"decl_id":null,"docs":" An enum describing whether we use lazy or greedy matching.\n","sig":null,"attributes":[{"value":"/ An enum describing whether we use lazy or greedy matching.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lz77.rs","byte_start":131854,"byte_end":131916,"line_start":25,"line_end":25,"column_start":1,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":567},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/writer.rs","byte_start":208442,"byte_end":208456,"line_start":91,"line_end":91,"column_start":12,"column_end":26},"name":"DeflateEncoder","qualname":"::writer::DeflateEncoder","value":"DeflateEncoder {  }","parent":null,"children":[{"krate":0,"index":569}],"decl_id":null,"docs":" A DEFLATE encoder/compressor.","sig":null,"attributes":[{"value":"/ A DEFLATE encoder/compressor.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/writer.rs","byte_start":207670,"byte_end":207703,"line_start":62,"line_end":62,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/writer.rs","byte_start":207704,"byte_end":207707,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ A struct implementing a [`Write`] interface that takes arbitrary data and compresses it to","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/writer.rs","byte_start":207708,"byte_end":207802,"line_start":64,"line_end":64,"column_start":1,"column_end":95}},{"value":"/ the provided writer using DEFLATE compression.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/writer.rs","byte_start":207803,"byte_end":207853,"line_start":65,"line_end":65,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/writer.rs","byte_start":207854,"byte_end":207857,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/writer.rs","byte_start":207858,"byte_end":207872,"line_start":67,"line_end":67,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/writer.rs","byte_start":207873,"byte_end":207876,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/writer.rs","byte_start":207877,"byte_end":207888,"line_start":69,"line_end":69,"column_start":1,"column_end":12}},{"value":"/ # use std::io;","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/writer.rs","byte_start":207889,"byte_end":207907,"line_start":70,"line_end":70,"column_start":1,"column_end":19}},{"value":"/ #","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/writer.rs","byte_start":207908,"byte_end":207913,"line_start":71,"line_end":71,"column_start":1,"column_end":6}},{"value":"/ # fn try_main() -> io::Result<Vec<u8>> {","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/writer.rs","byte_start":207914,"byte_end":207958,"line_start":72,"line_end":72,"column_start":1,"column_end":45}},{"value":"/ #","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/writer.rs","byte_start":207959,"byte_end":207964,"line_start":73,"line_end":73,"column_start":1,"column_end":6}},{"value":"/ use std::io::Write;","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/writer.rs","byte_start":207965,"byte_end":207988,"line_start":74,"line_end":74,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/writer.rs","byte_start":207989,"byte_end":207992,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ use deflate::Compression;","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/writer.rs","byte_start":207993,"byte_end":208022,"line_start":76,"line_end":76,"column_start":1,"column_end":30}},{"value":"/ use deflate::write::DeflateEncoder;","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/writer.rs","byte_start":208023,"byte_end":208062,"line_start":77,"line_end":77,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/writer.rs","byte_start":208063,"byte_end":208066,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ let data = b\"This is some test data\";","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/writer.rs","byte_start":208067,"byte_end":208108,"line_start":79,"line_end":79,"column_start":1,"column_end":42}},{"value":"/ let mut encoder = DeflateEncoder::new(Vec::new(), Compression::Default);","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/writer.rs","byte_start":208109,"byte_end":208185,"line_start":80,"line_end":80,"column_start":1,"column_end":77}},{"value":"/ encoder.write_all(data)?;","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/writer.rs","byte_start":208186,"byte_end":208215,"line_start":81,"line_end":81,"column_start":1,"column_end":30}},{"value":"/ let compressed_data = encoder.finish()?;","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/writer.rs","byte_start":208216,"byte_end":208260,"line_start":82,"line_end":82,"column_start":1,"column_end":45}},{"value":"/ # Ok(compressed_data)","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/writer.rs","byte_start":208261,"byte_end":208286,"line_start":83,"line_end":83,"column_start":1,"column_end":26}},{"value":"/ #","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/writer.rs","byte_start":208287,"byte_end":208292,"line_start":84,"line_end":84,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/writer.rs","byte_start":208293,"byte_end":208300,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"/ # fn main() {","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/writer.rs","byte_start":208301,"byte_end":208318,"line_start":86,"line_end":86,"column_start":1,"column_end":18}},{"value":"/ #     try_main().unwrap();","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/writer.rs","byte_start":208319,"byte_end":208349,"line_start":87,"line_end":87,"column_start":1,"column_end":31}},{"value":"/ # }","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/writer.rs","byte_start":208350,"byte_end":208357,"line_start":88,"line_end":88,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/writer.rs","byte_start":208358,"byte_end":208365,"line_start":89,"line_end":89,"column_start":1,"column_end":8}},{"value":"/ [`Write`]: https://doc.rust-lang.org/std/io/trait.Write.html","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/writer.rs","byte_start":208366,"byte_end":208430,"line_start":90,"line_end":90,"column_start":1,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":572},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/writer.rs","byte_start":208624,"byte_end":208627,"line_start":97,"line_end":97,"column_start":12,"column_end":15},"name":"new","qualname":"<DeflateEncoder<W>>::new","value":"pub fn new<O: Into<CompressionOptions>>(W, O) -> DeflateEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new encoder using the provided compression options.\n","sig":null,"attributes":[{"value":"/ Creates a new encoder using the provided compression options.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/writer.rs","byte_start":208547,"byte_end":208612,"line_start":96,"line_end":96,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":574},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/writer.rs","byte_start":208975,"byte_end":208981,"line_start":105,"line_end":105,"column_start":12,"column_end":18},"name":"finish","qualname":"<DeflateEncoder<W>>::finish","value":"pub fn finish(Self) -> io::Result<W>","parent":null,"children":[],"decl_id":null,"docs":" Encode all pending data to the contained writer, consume this `DeflateEncoder`,\n and return the contained writer if writing succeeds.\n","sig":null,"attributes":[{"value":"/ Encode all pending data to the contained writer, consume this `DeflateEncoder`,","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/writer.rs","byte_start":208819,"byte_end":208902,"line_start":103,"line_end":103,"column_start":5,"column_end":88}},{"value":"/ and return the contained writer if writing succeeds.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/writer.rs","byte_start":208907,"byte_end":208963,"line_start":104,"line_end":104,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":575},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/writer.rs","byte_start":209397,"byte_end":209402,"line_start":114,"line_end":114,"column_start":12,"column_end":17},"name":"reset","qualname":"<DeflateEncoder<W>>::reset","value":"pub fn reset(&mut Self, W) -> io::Result<W>","parent":null,"children":[],"decl_id":null,"docs":" Resets the encoder (except the compression options), replacing the current writer\n with a new one, returning the old one.\n","sig":null,"attributes":[{"value":"/ Resets the encoder (except the compression options), replacing the current writer","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/writer.rs","byte_start":209253,"byte_end":209338,"line_start":112,"line_end":112,"column_start":5,"column_end":90}},{"value":"/ with a new one, returning the old one.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/writer.rs","byte_start":209343,"byte_end":209385,"line_start":113,"line_end":113,"column_start":5,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":584},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/writer.rs","byte_start":211785,"byte_end":211796,"line_start":185,"line_end":185,"column_start":12,"column_end":23},"name":"ZlibEncoder","qualname":"::writer::ZlibEncoder","value":"ZlibEncoder {  }","parent":null,"children":[{"krate":0,"index":586},{"krate":0,"index":587},{"krate":0,"index":588}],"decl_id":null,"docs":" A Zlib encoder/compressor.","sig":null,"attributes":[{"value":"/ A Zlib encoder/compressor.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/writer.rs","byte_start":210991,"byte_end":211021,"line_start":156,"line_end":156,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/writer.rs","byte_start":211022,"byte_end":211025,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ A struct implementing a [`Write`] interface that takes arbitrary data and compresses it to","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/writer.rs","byte_start":211026,"byte_end":211120,"line_start":158,"line_end":158,"column_start":1,"column_end":95}},{"value":"/ the provided writer using DEFLATE compression with Zlib headers and trailers.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/writer.rs","byte_start":211121,"byte_end":211202,"line_start":159,"line_end":159,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/writer.rs","byte_start":211203,"byte_end":211206,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/writer.rs","byte_start":211207,"byte_end":211221,"line_start":161,"line_end":161,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/writer.rs","byte_start":211222,"byte_end":211225,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/writer.rs","byte_start":211226,"byte_end":211237,"line_start":163,"line_end":163,"column_start":1,"column_end":12}},{"value":"/ # use std::io;","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/writer.rs","byte_start":211238,"byte_end":211256,"line_start":164,"line_end":164,"column_start":1,"column_end":19}},{"value":"/ #","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/writer.rs","byte_start":211257,"byte_end":211262,"line_start":165,"line_end":165,"column_start":1,"column_end":6}},{"value":"/ # fn try_main() -> io::Result<Vec<u8>> {","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/writer.rs","byte_start":211263,"byte_end":211307,"line_start":166,"line_end":166,"column_start":1,"column_end":45}},{"value":"/ #","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/writer.rs","byte_start":211308,"byte_end":211313,"line_start":167,"line_end":167,"column_start":1,"column_end":6}},{"value":"/ use std::io::Write;","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/writer.rs","byte_start":211314,"byte_end":211337,"line_start":168,"line_end":168,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/writer.rs","byte_start":211338,"byte_end":211341,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ use deflate::Compression;","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/writer.rs","byte_start":211342,"byte_end":211371,"line_start":170,"line_end":170,"column_start":1,"column_end":30}},{"value":"/ use deflate::write::ZlibEncoder;","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/writer.rs","byte_start":211372,"byte_end":211408,"line_start":171,"line_end":171,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/writer.rs","byte_start":211409,"byte_end":211412,"line_start":172,"line_end":172,"column_start":1,"column_end":4}},{"value":"/ let data = b\"This is some test data\";","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/writer.rs","byte_start":211413,"byte_end":211454,"line_start":173,"line_end":173,"column_start":1,"column_end":42}},{"value":"/ let mut encoder = ZlibEncoder::new(Vec::new(), Compression::Default);","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/writer.rs","byte_start":211455,"byte_end":211528,"line_start":174,"line_end":174,"column_start":1,"column_end":74}},{"value":"/ encoder.write_all(data)?;","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/writer.rs","byte_start":211529,"byte_end":211558,"line_start":175,"line_end":175,"column_start":1,"column_end":30}},{"value":"/ let compressed_data = encoder.finish()?;","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/writer.rs","byte_start":211559,"byte_end":211603,"line_start":176,"line_end":176,"column_start":1,"column_end":45}},{"value":"/ # Ok(compressed_data)","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/writer.rs","byte_start":211604,"byte_end":211629,"line_start":177,"line_end":177,"column_start":1,"column_end":26}},{"value":"/ #","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/writer.rs","byte_start":211630,"byte_end":211635,"line_start":178,"line_end":178,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/writer.rs","byte_start":211636,"byte_end":211643,"line_start":179,"line_end":179,"column_start":1,"column_end":8}},{"value":"/ # fn main() {","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/writer.rs","byte_start":211644,"byte_end":211661,"line_start":180,"line_end":180,"column_start":1,"column_end":18}},{"value":"/ #     try_main().unwrap();","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/writer.rs","byte_start":211662,"byte_end":211692,"line_start":181,"line_end":181,"column_start":1,"column_end":31}},{"value":"/ # }","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/writer.rs","byte_start":211693,"byte_end":211700,"line_start":182,"line_end":182,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/writer.rs","byte_start":211701,"byte_end":211708,"line_start":183,"line_end":183,"column_start":1,"column_end":8}},{"value":"/ [`Write`]: https://doc.rust-lang.org/std/io/trait.Write.html","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/writer.rs","byte_start":211709,"byte_end":211773,"line_start":184,"line_end":184,"column_start":1,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":591},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/writer.rs","byte_start":212023,"byte_end":212026,"line_start":193,"line_end":193,"column_start":12,"column_end":15},"name":"new","qualname":"<ZlibEncoder<W>>::new","value":"pub fn new<O: Into<CompressionOptions>>(W, O) -> ZlibEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `ZlibEncoder` using the provided compression options.\n","sig":null,"attributes":[{"value":"/ Create a new `ZlibEncoder` using the provided compression options.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/writer.rs","byte_start":211941,"byte_end":212011,"line_start":192,"line_end":192,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":594},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/writer.rs","byte_start":212771,"byte_end":212777,"line_start":211,"line_end":211,"column_start":12,"column_end":18},"name":"finish","qualname":"<ZlibEncoder<W>>::finish","value":"pub fn finish(Self) -> io::Result<W>","parent":null,"children":[],"decl_id":null,"docs":" Encode all pending data to the contained writer, consume this `ZlibEncoder`,\n and return the contained writer if writing succeeds.\n","sig":null,"attributes":[{"value":"/ Encode all pending data to the contained writer, consume this `ZlibEncoder`,","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/writer.rs","byte_start":212618,"byte_end":212698,"line_start":209,"line_end":209,"column_start":5,"column_end":85}},{"value":"/ and return the contained writer if writing succeeds.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/writer.rs","byte_start":212703,"byte_end":212759,"line_start":210,"line_end":210,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":595},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/writer.rs","byte_start":213193,"byte_end":213198,"line_start":220,"line_end":220,"column_start":12,"column_end":17},"name":"reset","qualname":"<ZlibEncoder<W>>::reset","value":"pub fn reset(&mut Self, W) -> io::Result<W>","parent":null,"children":[],"decl_id":null,"docs":" Resets the encoder (except the compression options), replacing the current writer\n with a new one, returning the old one.\n","sig":null,"attributes":[{"value":"/ Resets the encoder (except the compression options), replacing the current writer","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/writer.rs","byte_start":213049,"byte_end":213134,"line_start":218,"line_end":218,"column_start":5,"column_end":90}},{"value":"/ with a new one, returning the old one.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/writer.rs","byte_start":213139,"byte_end":213181,"line_start":219,"line_end":219,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":598},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/writer.rs","byte_start":214100,"byte_end":214108,"line_start":248,"line_end":248,"column_start":12,"column_end":20},"name":"checksum","qualname":"<ZlibEncoder<W>>::checksum","value":"pub fn checksum(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Return the adler32 checksum of the currently consumed data.\n","sig":null,"attributes":[{"value":"/ Return the adler32 checksum of the currently consumed data.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/writer.rs","byte_start":214025,"byte_end":214088,"line_start":247,"line_end":247,"column_start":5,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":620},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/writer.rs","byte_start":216793,"byte_end":216802,"line_start":332,"line_end":332,"column_start":16,"column_end":25},"name":"GzEncoder","qualname":"::writer::gzip::GzEncoder","value":"GzEncoder {  }","parent":null,"children":[{"krate":0,"index":622},{"krate":0,"index":623},{"krate":0,"index":624}],"decl_id":null,"docs":" A Gzip encoder/compressor.","sig":null,"attributes":[{"value":"/ A Gzip encoder/compressor.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/writer.rs","byte_start":215887,"byte_end":215917,"line_start":303,"line_end":303,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/writer.rs","byte_start":215922,"byte_end":215925,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ A struct implementing a [`Write`] interface that takes arbitrary data and compresses it to","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/writer.rs","byte_start":215930,"byte_end":216024,"line_start":305,"line_end":305,"column_start":5,"column_end":99}},{"value":"/ the provided writer using DEFLATE compression with Gzip headers and trailers.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/writer.rs","byte_start":216029,"byte_end":216110,"line_start":306,"line_end":306,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/writer.rs","byte_start":216115,"byte_end":216118,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/writer.rs","byte_start":216123,"byte_end":216137,"line_start":308,"line_end":308,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/writer.rs","byte_start":216142,"byte_end":216145,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/writer.rs","byte_start":216150,"byte_end":216161,"line_start":310,"line_end":310,"column_start":5,"column_end":16}},{"value":"/ # use std::io;","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/writer.rs","byte_start":216166,"byte_end":216184,"line_start":311,"line_end":311,"column_start":5,"column_end":23}},{"value":"/ #","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/writer.rs","byte_start":216189,"byte_end":216194,"line_start":312,"line_end":312,"column_start":5,"column_end":10}},{"value":"/ # fn try_main() -> io::Result<Vec<u8>> {","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/writer.rs","byte_start":216199,"byte_end":216243,"line_start":313,"line_end":313,"column_start":5,"column_end":49}},{"value":"/ #","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/writer.rs","byte_start":216248,"byte_end":216253,"line_start":314,"line_end":314,"column_start":5,"column_end":10}},{"value":"/ use std::io::Write;","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/writer.rs","byte_start":216258,"byte_end":216281,"line_start":315,"line_end":315,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/writer.rs","byte_start":216286,"byte_end":216289,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ use deflate::Compression;","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/writer.rs","byte_start":216294,"byte_end":216323,"line_start":317,"line_end":317,"column_start":5,"column_end":34}},{"value":"/ use deflate::write::GzEncoder;","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/writer.rs","byte_start":216328,"byte_end":216362,"line_start":318,"line_end":318,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/writer.rs","byte_start":216367,"byte_end":216370,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ let data = b\"This is some test data\";","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/writer.rs","byte_start":216375,"byte_end":216416,"line_start":320,"line_end":320,"column_start":5,"column_end":46}},{"value":"/ let mut encoder = GzEncoder::new(Vec::new(), Compression::Default);","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/writer.rs","byte_start":216421,"byte_end":216492,"line_start":321,"line_end":321,"column_start":5,"column_end":76}},{"value":"/ encoder.write_all(data)?;","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/writer.rs","byte_start":216497,"byte_end":216526,"line_start":322,"line_end":322,"column_start":5,"column_end":34}},{"value":"/ let compressed_data = encoder.finish()?;","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/writer.rs","byte_start":216531,"byte_end":216575,"line_start":323,"line_end":323,"column_start":5,"column_end":49}},{"value":"/ # Ok(compressed_data)","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/writer.rs","byte_start":216580,"byte_end":216605,"line_start":324,"line_end":324,"column_start":5,"column_end":30}},{"value":"/ #","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/writer.rs","byte_start":216610,"byte_end":216615,"line_start":325,"line_end":325,"column_start":5,"column_end":10}},{"value":"/ # }","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/writer.rs","byte_start":216620,"byte_end":216627,"line_start":326,"line_end":326,"column_start":5,"column_end":12}},{"value":"/ # fn main() {","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/writer.rs","byte_start":216632,"byte_end":216649,"line_start":327,"line_end":327,"column_start":5,"column_end":22}},{"value":"/ #     try_main().unwrap();","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/writer.rs","byte_start":216654,"byte_end":216684,"line_start":328,"line_end":328,"column_start":5,"column_end":35}},{"value":"/ # }","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/writer.rs","byte_start":216689,"byte_end":216696,"line_start":329,"line_end":329,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/writer.rs","byte_start":216701,"byte_end":216708,"line_start":330,"line_end":330,"column_start":5,"column_end":12}},{"value":"/ [`Write`]: https://doc.rust-lang.org/std/io/trait.Write.html","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/writer.rs","byte_start":216713,"byte_end":216777,"line_start":331,"line_end":331,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":627},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/writer.rs","byte_start":217148,"byte_end":217151,"line_start":341,"line_end":341,"column_start":16,"column_end":19},"name":"new","qualname":"<GzEncoder<W>>::new","value":"pub fn new<O: Into<CompressionOptions>>(W, O) -> GzEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Create a new `GzEncoder` writing deflate-compressed data to the underlying writer when\n written to, wrapped in a gzip header and trailer. The header details will be blank.\n","sig":null,"attributes":[{"value":"/ Create a new `GzEncoder` writing deflate-compressed data to the underlying writer when","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/writer.rs","byte_start":216946,"byte_end":217036,"line_start":339,"line_end":339,"column_start":9,"column_end":99}},{"value":"/ written to, wrapped in a gzip header and trailer. The header details will be blank.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/writer.rs","byte_start":217045,"byte_end":217132,"line_start":340,"line_end":340,"column_start":9,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":629},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/writer.rs","byte_start":217489,"byte_end":217501,"line_start":347,"line_end":347,"column_start":16,"column_end":28},"name":"from_builder","qualname":"<GzEncoder<W>>::from_builder","value":"pub fn from_builder<O: Into<CompressionOptions>>(GzBuilder, W, O)\n-> GzEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Create a new GzEncoder from the provided `GzBuilder`. This allows customising\n the details of the header, such as the filename and comment fields.\n","sig":null,"attributes":[{"value":"/ Create a new GzEncoder from the provided `GzBuilder`. This allows customising","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/writer.rs","byte_start":217312,"byte_end":217393,"line_start":345,"line_end":345,"column_start":9,"column_end":90}},{"value":"/ the details of the header, such as the filename and comment fields.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/writer.rs","byte_start":217402,"byte_end":217473,"line_start":346,"line_end":346,"column_start":9,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":633},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/writer.rs","byte_start":218690,"byte_end":218696,"line_start":380,"line_end":380,"column_start":16,"column_end":22},"name":"finish","qualname":"<GzEncoder<W>>::finish","value":"pub fn finish(Self) -> io::Result<W>","parent":null,"children":[],"decl_id":null,"docs":" Encode all pending data to the contained writer, consume this `GzEncoder`,\n and return the contained writer if writing succeeds.\n","sig":null,"attributes":[{"value":"/ Encode all pending data to the contained writer, consume this `GzEncoder`,","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/writer.rs","byte_start":218531,"byte_end":218609,"line_start":378,"line_end":378,"column_start":9,"column_end":87}},{"value":"/ and return the contained writer if writing succeeds.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/writer.rs","byte_start":218618,"byte_end":218674,"line_start":379,"line_end":379,"column_start":9,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":635},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/writer.rs","byte_start":219376,"byte_end":219381,"line_start":395,"line_end":395,"column_start":16,"column_end":21},"name":"reset","qualname":"<GzEncoder<W>>::reset","value":"pub fn reset(&mut Self, W) -> io::Result<W>","parent":null,"children":[],"decl_id":null,"docs":" Resets the encoder (except the compression options), replacing the current writer\n with a new one, returning the old one. (Using a blank header).\n","sig":null,"attributes":[{"value":"/ Resets the encoder (except the compression options), replacing the current writer","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/writer.rs","byte_start":219200,"byte_end":219285,"line_start":393,"line_end":393,"column_start":9,"column_end":94}},{"value":"/ with a new one, returning the old one. (Using a blank header).","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/writer.rs","byte_start":219294,"byte_end":219360,"line_start":394,"line_end":394,"column_start":9,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":636},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/writer.rs","byte_start":219785,"byte_end":219803,"line_start":404,"line_end":404,"column_start":16,"column_end":34},"name":"reset_with_builder","qualname":"<GzEncoder<W>>::reset_with_builder","value":"pub fn reset_with_builder(&mut Self, W, GzBuilder) -> io::Result<W>","parent":null,"children":[],"decl_id":null,"docs":" Resets the encoder (except the compression options), replacing the current writer\n with a new one, returning the old one, and using the provided `GzBuilder` to\n create the header.\n","sig":null,"attributes":[{"value":"/ Resets the encoder (except the compression options), replacing the current writer","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/writer.rs","byte_start":219564,"byte_end":219649,"line_start":401,"line_end":401,"column_start":9,"column_end":94}},{"value":"/ with a new one, returning the old one, and using the provided `GzBuilder` to","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/writer.rs","byte_start":219658,"byte_end":219738,"line_start":402,"line_end":402,"column_start":9,"column_end":89}},{"value":"/ create the header.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/writer.rs","byte_start":219747,"byte_end":219769,"line_start":403,"line_end":403,"column_start":9,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":639},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/writer.rs","byte_start":220832,"byte_end":220840,"line_start":430,"line_end":430,"column_start":16,"column_end":24},"name":"checksum","qualname":"<GzEncoder<W>>::checksum","value":"pub fn checksum(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Get the crc32 checksum of the data consumed so far.\n","sig":null,"attributes":[{"value":"/ Get the crc32 checksum of the data consumed so far.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/writer.rs","byte_start":220761,"byte_end":220816,"line_start":429,"line_end":429,"column_start":9,"column_end":64}}]},{"kind":"Mod","id":{"krate":0,"index":689},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":3206,"byte_end":3211,"line_start":108,"line_end":108,"column_start":9,"column_end":14},"name":"write","qualname":"::write","value":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","parent":null,"children":[{"krate":0,"index":690},{"krate":0,"index":691},{"krate":0,"index":692},{"krate":0,"index":693}],"decl_id":null,"docs":" Encoders implementing a `Write` interface.\n","sig":null,"attributes":[{"value":"/ Encoders implementing a `Write` interface.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":3151,"byte_end":3197,"line_start":107,"line_end":107,"column_start":1,"column_end":47}}]},{"kind":"Function","id":{"krate":0,"index":697},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":4264,"byte_end":4282,"line_start":141,"line_end":141,"column_start":8,"column_end":26},"name":"deflate_bytes_conf","qualname":"::deflate_bytes_conf","value":"pub fn deflate_bytes_conf<O: Into<CompressionOptions>>(&[u8], O) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Compress the given slice of bytes with DEFLATE compression.","sig":null,"attributes":[{"value":"/ Compress the given slice of bytes with DEFLATE compression.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":3902,"byte_end":3965,"line_start":128,"line_end":128,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":3966,"byte_end":3969,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ Returns a `Vec<u8>` of the compressed data.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":3970,"byte_end":4017,"line_start":130,"line_end":130,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":4018,"byte_end":4021,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":4022,"byte_end":4036,"line_start":132,"line_end":132,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":4037,"byte_end":4040,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":4041,"byte_end":4048,"line_start":134,"line_end":134,"column_start":1,"column_end":8}},{"value":"/ use deflate::{deflate_bytes_conf, Compression};","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":4049,"byte_end":4100,"line_start":135,"line_end":135,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":4101,"byte_end":4104,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ let data = b\"This is some test data\";","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":4105,"byte_end":4146,"line_start":137,"line_end":137,"column_start":1,"column_end":42}},{"value":"/ let compressed_data = deflate_bytes_conf(data, Compression::Best);","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":4147,"byte_end":4217,"line_start":138,"line_end":138,"column_start":1,"column_end":71}},{"value":"/ # let _ = compressed_data;","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":4218,"byte_end":4248,"line_start":139,"line_end":139,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":4249,"byte_end":4256,"line_start":140,"line_end":140,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":699},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":4940,"byte_end":4953,"line_start":167,"line_end":167,"column_start":8,"column_end":21},"name":"deflate_bytes","qualname":"::deflate_bytes","value":"pub fn deflate_bytes(&[u8]) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Compress the given slice of bytes with DEFLATE compression using the default compression\n level.","sig":null,"attributes":[{"value":"/ Compress the given slice of bytes with DEFLATE compression using the default compression","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":4582,"byte_end":4674,"line_start":153,"line_end":153,"column_start":1,"column_end":93}},{"value":"/ level.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":4675,"byte_end":4685,"line_start":154,"line_end":154,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":4686,"byte_end":4689,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ Returns a `Vec<u8>` of the compressed data.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":4690,"byte_end":4737,"line_start":156,"line_end":156,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":4738,"byte_end":4741,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":4742,"byte_end":4756,"line_start":158,"line_end":158,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":4757,"byte_end":4760,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":4761,"byte_end":4768,"line_start":160,"line_end":160,"column_start":1,"column_end":8}},{"value":"/ use deflate::deflate_bytes;","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":4769,"byte_end":4800,"line_start":161,"line_end":161,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":4801,"byte_end":4804,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ let data = b\"This is some test data\";","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":4805,"byte_end":4846,"line_start":163,"line_end":163,"column_start":1,"column_end":42}},{"value":"/ let compressed_data = deflate_bytes(data);","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":4847,"byte_end":4893,"line_start":164,"line_end":164,"column_start":1,"column_end":47}},{"value":"/ # let _ = compressed_data;","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":4894,"byte_end":4924,"line_start":165,"line_end":165,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":4925,"byte_end":4932,"line_start":166,"line_end":166,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":700},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":5493,"byte_end":5516,"line_start":186,"line_end":186,"column_start":8,"column_end":31},"name":"deflate_bytes_zlib_conf","qualname":"::deflate_bytes_zlib_conf","value":"pub fn deflate_bytes_zlib_conf<O: Into<CompressionOptions>>(&[u8], O)\n-> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Compress the given slice of bytes with DEFLATE compression, including a zlib header and trailer.","sig":null,"attributes":[{"value":"/ Compress the given slice of bytes with DEFLATE compression, including a zlib header and trailer.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":5036,"byte_end":5136,"line_start":171,"line_end":171,"column_start":1,"column_end":101}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":5137,"byte_end":5140,"line_start":172,"line_end":172,"column_start":1,"column_end":4}},{"value":"/ Returns a `Vec<u8>` of the compressed data.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":5141,"byte_end":5188,"line_start":173,"line_end":173,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":5189,"byte_end":5192,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/ Zlib dictionaries are not yet suppored.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":5193,"byte_end":5236,"line_start":175,"line_end":175,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":5237,"byte_end":5240,"line_start":176,"line_end":176,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":5241,"byte_end":5255,"line_start":177,"line_end":177,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":5256,"byte_end":5259,"line_start":178,"line_end":178,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":5260,"byte_end":5267,"line_start":179,"line_end":179,"column_start":1,"column_end":8}},{"value":"/ use deflate::{deflate_bytes_zlib_conf, Compression};","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":5268,"byte_end":5324,"line_start":180,"line_end":180,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":5325,"byte_end":5328,"line_start":181,"line_end":181,"column_start":1,"column_end":4}},{"value":"/ let data = b\"This is some test data\";","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":5329,"byte_end":5370,"line_start":182,"line_end":182,"column_start":1,"column_end":42}},{"value":"/ let compressed_data = deflate_bytes_zlib_conf(data, Compression::Best);","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":5371,"byte_end":5446,"line_start":183,"line_end":183,"column_start":1,"column_end":76}},{"value":"/ # let _ = compressed_data;","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":5447,"byte_end":5477,"line_start":184,"line_end":184,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":5478,"byte_end":5485,"line_start":185,"line_end":185,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":703},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":6638,"byte_end":6656,"line_start":221,"line_end":221,"column_start":8,"column_end":26},"name":"deflate_bytes_zlib","qualname":"::deflate_bytes_zlib","value":"pub fn deflate_bytes_zlib(&[u8]) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Compress the given slice of bytes with DEFLATE compression, including a zlib header and trailer,\n using the default compression level.","sig":null,"attributes":[{"value":"/ Compress the given slice of bytes with DEFLATE compression, including a zlib header and trailer,","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":6186,"byte_end":6286,"line_start":205,"line_end":205,"column_start":1,"column_end":101}},{"value":"/ using the default compression level.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":6287,"byte_end":6327,"line_start":206,"line_end":206,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":6328,"byte_end":6331,"line_start":207,"line_end":207,"column_start":1,"column_end":4}},{"value":"/ Returns a Vec<u8> of the compressed data.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":6332,"byte_end":6377,"line_start":208,"line_end":208,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":6378,"byte_end":6381,"line_start":209,"line_end":209,"column_start":1,"column_end":4}},{"value":"/ Zlib dictionaries are not yet suppored.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":6382,"byte_end":6425,"line_start":210,"line_end":210,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":6426,"byte_end":6429,"line_start":211,"line_end":211,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":6430,"byte_end":6444,"line_start":212,"line_end":212,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":6445,"byte_end":6448,"line_start":213,"line_end":213,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":6449,"byte_end":6456,"line_start":214,"line_end":214,"column_start":1,"column_end":8}},{"value":"/ use deflate::deflate_bytes_zlib;","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":6457,"byte_end":6493,"line_start":215,"line_end":215,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":6494,"byte_end":6497,"line_start":216,"line_end":216,"column_start":1,"column_end":4}},{"value":"/ let data = b\"This is some test data\";","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":6498,"byte_end":6539,"line_start":217,"line_end":217,"column_start":1,"column_end":42}},{"value":"/ let compressed_data = deflate_bytes_zlib(data);","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":6540,"byte_end":6591,"line_start":218,"line_end":218,"column_start":1,"column_end":52}},{"value":"/ # let _ = compressed_data;","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":6592,"byte_end":6622,"line_start":219,"line_end":219,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":6623,"byte_end":6630,"line_start":220,"line_end":220,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":704},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":7374,"byte_end":7397,"line_start":247,"line_end":247,"column_start":8,"column_end":31},"name":"deflate_bytes_gzip_conf","qualname":"::deflate_bytes_gzip_conf","value":"pub fn deflate_bytes_gzip_conf<O: Into<CompressionOptions>>(&[u8], O,\n                                                            GzBuilder)\n-> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Compress the given slice of bytes with DEFLATE compression, including a gzip header and trailer\n using the given gzip header and compression options.","sig":null,"attributes":[{"value":"/ Compress the given slice of bytes with DEFLATE compression, including a gzip header and trailer","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":6744,"byte_end":6843,"line_start":225,"line_end":225,"column_start":1,"column_end":100}},{"value":"/ using the given gzip header and compression options.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":6844,"byte_end":6900,"line_start":226,"line_end":226,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":6901,"byte_end":6904,"line_start":227,"line_end":227,"column_start":1,"column_end":4}},{"value":"/ Returns a `Vec<u8>` of the compressed data.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":6905,"byte_end":6952,"line_start":228,"line_end":228,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":6953,"byte_end":6956,"line_start":229,"line_end":229,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":6957,"byte_end":6960,"line_start":230,"line_end":230,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":6961,"byte_end":6975,"line_start":231,"line_end":231,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":6976,"byte_end":6979,"line_start":232,"line_end":232,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":6980,"byte_end":6987,"line_start":233,"line_end":233,"column_start":1,"column_end":8}},{"value":"/ extern crate gzip_header;","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":6988,"byte_end":7017,"line_start":234,"line_end":234,"column_start":1,"column_end":30}},{"value":"/ extern crate deflate;","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":7018,"byte_end":7043,"line_start":235,"line_end":235,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":7044,"byte_end":7047,"line_start":236,"line_end":236,"column_start":1,"column_end":4}},{"value":"/ # fn main() {","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":7048,"byte_end":7065,"line_start":237,"line_end":237,"column_start":1,"column_end":18}},{"value":"/ use deflate::{deflate_bytes_gzip_conf, Compression};","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":7066,"byte_end":7122,"line_start":238,"line_end":238,"column_start":1,"column_end":57}},{"value":"/ use gzip_header::GzBuilder;","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":7123,"byte_end":7154,"line_start":239,"line_end":239,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":7155,"byte_end":7158,"line_start":240,"line_end":240,"column_start":1,"column_end":4}},{"value":"/ let data = b\"This is some test data\";","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":7159,"byte_end":7200,"line_start":241,"line_end":241,"column_start":1,"column_end":42}},{"value":"/ let compressed_data = deflate_bytes_gzip_conf(data, Compression::Best, GzBuilder::new());","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":7201,"byte_end":7294,"line_start":242,"line_end":242,"column_start":1,"column_end":94}},{"value":"/ # let _ = compressed_data;","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":7295,"byte_end":7325,"line_start":243,"line_end":243,"column_start":1,"column_end":31}},{"value":"/ # }","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":7326,"byte_end":7333,"line_start":244,"line_end":244,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":7334,"byte_end":7341,"line_start":245,"line_end":245,"column_start":1,"column_end":8}},{"value":"cfg(feature = \"gzip\")","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":7342,"byte_end":7366,"line_start":246,"line_end":246,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":707},"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":8685,"byte_end":8703,"line_start":290,"line_end":290,"column_start":8,"column_end":26},"name":"deflate_bytes_gzip","qualname":"::deflate_bytes_gzip","value":"pub fn deflate_bytes_gzip(&[u8]) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Compress the given slice of bytes with DEFLATE compression, including a gzip header and trailer,\n using the default compression level, and a gzip header with default values.","sig":null,"attributes":[{"value":"/ Compress the given slice of bytes with DEFLATE compression, including a gzip header and trailer,","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":8215,"byte_end":8315,"line_start":275,"line_end":275,"column_start":1,"column_end":101}},{"value":"/ using the default compression level, and a gzip header with default values.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":8316,"byte_end":8395,"line_start":276,"line_end":276,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":8396,"byte_end":8399,"line_start":277,"line_end":277,"column_start":1,"column_end":4}},{"value":"/ Returns a `Vec<u8>` of the compressed data.","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":8400,"byte_end":8447,"line_start":278,"line_end":278,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":8448,"byte_end":8451,"line_start":279,"line_end":279,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":8452,"byte_end":8455,"line_start":280,"line_end":280,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":8456,"byte_end":8470,"line_start":281,"line_end":281,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":8471,"byte_end":8474,"line_start":282,"line_end":282,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":8475,"byte_end":8482,"line_start":283,"line_end":283,"column_start":1,"column_end":8}},{"value":"/ use deflate::deflate_bytes_gzip;","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":8483,"byte_end":8519,"line_start":284,"line_end":284,"column_start":1,"column_end":37}},{"value":"/ let data = b\"This is some test data\";","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":8520,"byte_end":8561,"line_start":285,"line_end":285,"column_start":1,"column_end":42}},{"value":"/ let compressed_data = deflate_bytes_gzip(data);","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":8562,"byte_end":8613,"line_start":286,"line_end":286,"column_start":1,"column_end":52}},{"value":"/ # let _ = compressed_data;","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":8614,"byte_end":8644,"line_start":287,"line_end":287,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":8645,"byte_end":8652,"line_start":288,"line_end":288,"column_start":1,"column_end":8}},{"value":"cfg(feature = \"gzip\")","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lib.rs","byte_start":8653,"byte_end":8677,"line_start":289,"line_end":289,"column_start":1,"column_end":25}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/bitstream.rs","byte_start":17648,"byte_end":17657,"line_start":61,"line_end":61,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":26}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/bitstream.rs","byte_start":19119,"byte_end":19128,"line_start":109,"line_end":109,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":28},{"krate":0,"index":29}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/chained_hash_table.rs","byte_start":22306,"byte_end":22312,"line_start":16,"line_end":16,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":41}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/chained_hash_table.rs","byte_start":22471,"byte_end":22477,"line_start":26,"line_end":26,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":45}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/chained_hash_table.rs","byte_start":23997,"byte_end":24013,"line_start":80,"line_end":80,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":55},{"krate":0,"index":56},{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":62},{"krate":0,"index":63},{"krate":0,"index":64},{"krate":0,"index":66}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/checksum.rs","byte_start":33432,"byte_end":33442,"line_start":11,"line_end":11,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":75}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/checksum.rs","byte_start":33534,"byte_end":33544,"line_start":17,"line_end":17,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":77},{"krate":0,"index":78},{"krate":0,"index":79}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/checksum.rs","byte_start":33941,"byte_end":33956,"line_start":37,"line_end":37,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":88}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/checksum.rs","byte_start":34111,"byte_end":34126,"line_start":45,"line_end":45,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":90},{"krate":0,"index":91},{"krate":0,"index":92}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/compression_options.rs","byte_start":50115,"byte_end":50126,"line_start":44,"line_end":44,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":130}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/compression_options.rs","byte_start":50555,"byte_end":50569,"line_start":61,"line_end":61,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":132}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/compression_options.rs","byte_start":53140,"byte_end":53158,"line_start":124,"line_end":124,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":135},{"krate":0,"index":136},{"krate":0,"index":137},{"krate":0,"index":138}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/compression_options.rs","byte_start":55412,"byte_end":55430,"line_start":181,"line_end":181,"column_start":18,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":140}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/compression_options.rs","byte_start":55604,"byte_end":55622,"line_start":188,"line_end":188,"column_start":28,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":142}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/deflate_state.rs","byte_start":56566,"byte_end":56578,"line_start":22,"line_end":22,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":165}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/deflate_state.rs","byte_start":57174,"byte_end":57187,"line_start":55,"line_end":55,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":170}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/deflate_state.rs","byte_start":59018,"byte_end":59030,"line_start":99,"line_end":99,"column_start":16,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":187},{"krate":0,"index":188},{"krate":0,"index":189}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/encoder_state.rs","byte_start":61930,"byte_end":61942,"line_start":28,"line_end":28,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":213},{"krate":0,"index":214},{"krate":0,"index":215},{"krate":0,"index":216},{"krate":0,"index":217},{"krate":0,"index":218},{"krate":0,"index":219},{"krate":0,"index":220}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/huffman_table.rs","byte_start":90074,"byte_end":90085,"line_start":201,"line_end":201,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":321}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/huffman_table.rs","byte_start":90292,"byte_end":90303,"line_start":211,"line_end":211,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":323}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/huffman_table.rs","byte_start":93055,"byte_end":93067,"line_start":289,"line_end":289,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":338},{"krate":0,"index":343},{"krate":0,"index":346},{"krate":0,"index":349},{"krate":0,"index":350},{"krate":0,"index":351},{"krate":0,"index":352},{"krate":0,"index":353},{"krate":0,"index":354},{"krate":0,"index":355}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/input_buffer.rs","byte_start":101631,"byte_end":101642,"line_start":14,"line_end":14,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":364},{"krate":0,"index":365},{"krate":0,"index":367},{"krate":0,"index":368},{"krate":0,"index":370}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/length_encode.rs","byte_start":106797,"byte_end":106810,"line_start":18,"line_end":18,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":375}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lz77.rs","byte_start":132469,"byte_end":132481,"line_start":39,"line_end":39,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":427}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lz77.rs","byte_start":134005,"byte_end":134014,"line_start":76,"line_end":76,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":441},{"krate":0,"index":442},{"krate":0,"index":443},{"krate":0,"index":444},{"krate":0,"index":445},{"krate":0,"index":446},{"krate":0,"index":447},{"krate":0,"index":448}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lz77.rs","byte_start":136939,"byte_end":136949,"line_start":175,"line_end":175,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":451}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lzvalue.rs","byte_start":176896,"byte_end":176908,"line_start":10,"line_end":10,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":470},{"krate":0,"index":471}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lzvalue.rs","byte_start":177679,"byte_end":177686,"line_start":47,"line_end":47,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":473},{"krate":0,"index":474},{"krate":0,"index":475}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/output_writer.rs","byte_start":196077,"byte_end":196090,"line_start":36,"line_end":36,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":503},{"krate":0,"index":504},{"krate":0,"index":505},{"krate":0,"index":506},{"krate":0,"index":507},{"krate":0,"index":508},{"krate":0,"index":511},{"krate":0,"index":512},{"krate":0,"index":513},{"krate":0,"index":516},{"krate":0,"index":517}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/writer.rs","byte_start":208523,"byte_end":208537,"line_start":95,"line_end":95,"column_start":16,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":572},{"krate":0,"index":574},{"krate":0,"index":575},{"krate":0,"index":576}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/writer.rs","byte_start":209757,"byte_end":209771,"line_start":125,"line_end":125,"column_start":30,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":579},{"krate":0,"index":580}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/writer.rs","byte_start":210355,"byte_end":210369,"line_start":141,"line_end":141,"column_start":25,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":583}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/writer.rs","byte_start":211920,"byte_end":211931,"line_start":191,"line_end":191,"column_start":16,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":591},{"krate":0,"index":593},{"krate":0,"index":594},{"krate":0,"index":595},{"krate":0,"index":596},{"krate":0,"index":597},{"krate":0,"index":598}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/writer.rs","byte_start":214200,"byte_end":214211,"line_start":253,"line_end":253,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":601},{"krate":0,"index":602}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/writer.rs","byte_start":215209,"byte_end":215220,"line_start":279,"line_end":279,"column_start":25,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":605}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/writer.rs","byte_start":216923,"byte_end":216932,"line_start":338,"line_end":338,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":627},{"krate":0,"index":629},{"krate":0,"index":631},{"krate":0,"index":632},{"krate":0,"index":633},{"krate":0,"index":634},{"krate":0,"index":635},{"krate":0,"index":636},{"krate":0,"index":637},{"krate":0,"index":639}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/writer.rs","byte_start":220939,"byte_end":220948,"line_start":435,"line_end":435,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":642},{"krate":0,"index":643}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/writer.rs","byte_start":221681,"byte_end":221690,"line_start":457,"line_end":457,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":646}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/bitstream.rs","byte_start":17648,"byte_end":17657,"line_start":61,"line_end":61,"column_start":6,"column_end":15},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":17},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/bitstream.rs","byte_start":19119,"byte_end":19128,"line_start":109,"line_end":109,"column_start":16,"column_end":25},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":17},"to":{"krate":1,"index":3179}},{"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/chained_hash_table.rs","byte_start":22306,"byte_end":22312,"line_start":16,"line_end":16,"column_start":18,"column_end":24},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":35},"to":{"krate":2,"index":2059}},{"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/chained_hash_table.rs","byte_start":22471,"byte_end":22477,"line_start":26,"line_end":26,"column_start":6,"column_end":12},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":35},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/chained_hash_table.rs","byte_start":23997,"byte_end":24013,"line_start":80,"line_end":80,"column_start":6,"column_end":22},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":51},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/checksum.rs","byte_start":33432,"byte_end":33442,"line_start":11,"line_end":11,"column_start":6,"column_end":16},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":73},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/checksum.rs","byte_start":33534,"byte_end":33544,"line_start":17,"line_end":17,"column_start":26,"column_end":36},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":73},"to":{"krate":0,"index":69}},{"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/checksum.rs","byte_start":33941,"byte_end":33956,"line_start":37,"line_end":37,"column_start":6,"column_end":21},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":85},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/checksum.rs","byte_start":34111,"byte_end":34126,"line_start":45,"line_end":45,"column_start":26,"column_end":41},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":85},"to":{"krate":0,"index":69}},{"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/compression_options.rs","byte_start":50115,"byte_end":50126,"line_start":44,"line_end":44,"column_start":18,"column_end":29},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":732},"to":{"krate":2,"index":2059}},{"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/compression_options.rs","byte_start":50555,"byte_end":50569,"line_start":61,"line_end":61,"column_start":18,"column_end":32},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":757},"to":{"krate":2,"index":2059}},{"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/compression_options.rs","byte_start":53140,"byte_end":53158,"line_start":124,"line_end":124,"column_start":6,"column_end":24},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":778},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/compression_options.rs","byte_start":55412,"byte_end":55430,"line_start":181,"line_end":181,"column_start":18,"column_end":36},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":778},"to":{"krate":2,"index":2059}},{"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/compression_options.rs","byte_start":55604,"byte_end":55622,"line_start":188,"line_end":188,"column_start":28,"column_end":46},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":778},"to":{"krate":2,"index":1989}},{"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/deflate_state.rs","byte_start":56566,"byte_end":56578,"line_start":22,"line_end":22,"column_start":6,"column_end":18},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":798},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/deflate_state.rs","byte_start":57174,"byte_end":57187,"line_start":55,"line_end":55,"column_start":6,"column_end":19},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":166},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/deflate_state.rs","byte_start":59018,"byte_end":59030,"line_start":99,"line_end":99,"column_start":16,"column_end":28},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":171},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/encoder_state.rs","byte_start":61930,"byte_end":61942,"line_start":28,"line_end":28,"column_start":6,"column_end":18},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":209},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/huffman_table.rs","byte_start":90074,"byte_end":90085,"line_start":201,"line_end":201,"column_start":21,"column_end":32},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":809},"to":{"krate":2,"index":6831}},{"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/huffman_table.rs","byte_start":90292,"byte_end":90303,"line_start":211,"line_end":211,"column_start":6,"column_end":17},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":809},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/huffman_table.rs","byte_start":93055,"byte_end":93067,"line_start":289,"line_end":289,"column_start":6,"column_end":18},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":328},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/input_buffer.rs","byte_start":101631,"byte_end":101642,"line_start":14,"line_end":14,"column_start":6,"column_end":17},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":361},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/length_encode.rs","byte_start":106797,"byte_end":106810,"line_start":18,"line_end":18,"column_start":6,"column_end":19},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":817},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lz77.rs","byte_start":132469,"byte_end":132481,"line_start":39,"line_end":39,"column_start":23,"column_end":35},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":851},"to":{"krate":2,"index":6836}},{"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lz77.rs","byte_start":134005,"byte_end":134014,"line_start":76,"line_end":76,"column_start":6,"column_end":15},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":428},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lz77.rs","byte_start":136939,"byte_end":136949,"line_start":175,"line_end":175,"column_start":6,"column_end":16},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":882},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lzvalue.rs","byte_start":176896,"byte_end":176908,"line_start":10,"line_end":10,"column_start":6,"column_end":18},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":908},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/lzvalue.rs","byte_start":177679,"byte_end":177686,"line_start":47,"line_end":47,"column_start":6,"column_end":13},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":942},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/output_writer.rs","byte_start":196077,"byte_end":196090,"line_start":36,"line_end":36,"column_start":6,"column_end":19},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":496},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/writer.rs","byte_start":208523,"byte_end":208537,"line_start":95,"line_end":95,"column_start":16,"column_end":30},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":567},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/writer.rs","byte_start":209757,"byte_end":209771,"line_start":125,"line_end":125,"column_start":30,"column_end":44},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":567},"to":{"krate":1,"index":3179}},{"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/writer.rs","byte_start":210355,"byte_end":210369,"line_start":141,"line_end":141,"column_start":25,"column_end":39},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":567},"to":{"krate":2,"index":2295}},{"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/writer.rs","byte_start":211920,"byte_end":211931,"line_start":191,"line_end":191,"column_start":16,"column_end":27},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":584},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/writer.rs","byte_start":214200,"byte_end":214211,"line_start":253,"line_end":253,"column_start":30,"column_end":41},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":584},"to":{"krate":1,"index":3179}},{"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/writer.rs","byte_start":215209,"byte_end":215220,"line_start":279,"line_end":279,"column_start":25,"column_end":36},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":584},"to":{"krate":2,"index":2295}},{"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/writer.rs","byte_start":216923,"byte_end":216932,"line_start":338,"line_end":338,"column_start":20,"column_end":29},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":620},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/writer.rs","byte_start":220939,"byte_end":220948,"line_start":435,"line_end":435,"column_start":34,"column_end":43},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":620},"to":{"krate":1,"index":3179}},{"span":{"file_name":"/home/knoldus/.cargo/registry/src/github.com-1ecc6299db9ec823/deflate-0.8.6/src/writer.rs","byte_start":221681,"byte_end":221690,"line_start":457,"line_end":457,"column_start":29,"column_end":38},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":620},"to":{"krate":2,"index":2295}}]}